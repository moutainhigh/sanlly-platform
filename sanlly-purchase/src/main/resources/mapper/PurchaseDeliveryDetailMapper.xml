<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.purchase.dao.PurchaseDeliveryDetailMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.purchase.entity.PurchaseDeliveryDetail">
    <id column="purc_purchase_delivery_detail_id" jdbcType="INTEGER" property="purcPurchaseDeliveryDetailId" />
    <result column="demand_no" jdbcType="VARCHAR" property="demandNo" />
    <result column="purc_purchase_delivery" jdbcType="INTEGER" property="purcPurchaseDelivery" />
    <result column="product" jdbcType="VARCHAR" property="product" />
    <result column="spare_parts_no" jdbcType="VARCHAR" property="sparePartsNo" />
    <result column="entry_price" jdbcType="DECIMAL" property="entryPrice" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="required_delivery_date" jdbcType="TIMESTAMP" property="requiredDeliveryDate" />
    <result column="delivery_count" jdbcType="DOUBLE" property="deliveryCount" />
    <result column="recive_count" jdbcType="DOUBLE" property="reciveCount" />
    <result column="spare_parts_unit" jdbcType="VARCHAR" property="sparePartsUnit" />
    <result column="recive_sum_amount" jdbcType="DECIMAL" property="reciveSumAmount" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="is_del" jdbcType="VARCHAR" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="actual_arrival_date" jdbcType="TIMESTAMP" property="actualArrivalDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    purc_purchase_delivery_detail_id, demand_no, purc_purchase_delivery, product, spare_parts_no, 
    entry_price, unit_price, specification, brand, model, required_delivery_date, delivery_count, 
    recive_count, spare_parts_unit, recive_sum_amount, comments, is_del, create_time, 
    create_user, update_time, update_user, actual_arrival_date
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purc_purchase_delivery_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purc_purchase_delivery_detail
    where purc_purchase_delivery_detail_id = #{purcPurchaseDeliveryDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purc_purchase_delivery_detail
    where purc_purchase_delivery_detail_id = #{purcPurchaseDeliveryDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetailExample">
    delete from purc_purchase_delivery_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetail">
    insert into purc_purchase_delivery_detail (purc_purchase_delivery_detail_id, demand_no, 
      purc_purchase_delivery, product, spare_parts_no, 
      entry_price, unit_price, specification, 
      brand, model, required_delivery_date, 
      delivery_count, recive_count, spare_parts_unit, 
      recive_sum_amount, comments, is_del, 
      create_time, create_user, update_time, 
      update_user, actual_arrival_date)
    values (#{purcPurchaseDeliveryDetailId,jdbcType=INTEGER}, #{demandNo,jdbcType=VARCHAR}, 
      #{purcPurchaseDelivery,jdbcType=INTEGER}, #{product,jdbcType=VARCHAR}, #{sparePartsNo,jdbcType=VARCHAR}, 
      #{entryPrice,jdbcType=DECIMAL}, #{unitPrice,jdbcType=DECIMAL}, #{specification,jdbcType=VARCHAR}, 
      #{brand,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{requiredDeliveryDate,jdbcType=TIMESTAMP}, 
      #{deliveryCount,jdbcType=DOUBLE}, #{reciveCount,jdbcType=DOUBLE}, #{sparePartsUnit,jdbcType=VARCHAR}, 
      #{reciveSumAmount,jdbcType=DECIMAL}, #{comments,jdbcType=VARCHAR}, #{isDel,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{actualArrivalDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetail">
    insert into purc_purchase_delivery_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="purcPurchaseDeliveryDetailId != null">
        purc_purchase_delivery_detail_id,
      </if>
      <if test="demandNo != null">
        demand_no,
      </if>
      <if test="purcPurchaseDelivery != null">
        purc_purchase_delivery,
      </if>
      <if test="product != null">
        product,
      </if>
      <if test="sparePartsNo != null">
        spare_parts_no,
      </if>
      <if test="entryPrice != null">
        entry_price,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="requiredDeliveryDate != null">
        required_delivery_date,
      </if>
      <if test="deliveryCount != null">
        delivery_count,
      </if>
      <if test="reciveCount != null">
        recive_count,
      </if>
      <if test="sparePartsUnit != null">
        spare_parts_unit,
      </if>
      <if test="reciveSumAmount != null">
        recive_sum_amount,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="actualArrivalDate != null">
        actual_arrival_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="purcPurchaseDeliveryDetailId != null">
        #{purcPurchaseDeliveryDetailId,jdbcType=INTEGER},
      </if>
      <if test="demandNo != null">
        #{demandNo,jdbcType=VARCHAR},
      </if>
      <if test="purcPurchaseDelivery != null">
        #{purcPurchaseDelivery,jdbcType=INTEGER},
      </if>
      <if test="product != null">
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsNo != null">
        #{sparePartsNo,jdbcType=VARCHAR},
      </if>
      <if test="entryPrice != null">
        #{entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="requiredDeliveryDate != null">
        #{requiredDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryCount != null">
        #{deliveryCount,jdbcType=DOUBLE},
      </if>
      <if test="reciveCount != null">
        #{reciveCount,jdbcType=DOUBLE},
      </if>
      <if test="sparePartsUnit != null">
        #{sparePartsUnit,jdbcType=VARCHAR},
      </if>
      <if test="reciveSumAmount != null">
        #{reciveSumAmount,jdbcType=DECIMAL},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="actualArrivalDate != null">
        #{actualArrivalDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetailExample" resultType="java.lang.Long">
    select count(*) from purc_purchase_delivery_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purc_purchase_delivery_detail
    <set>
      <if test="record.purcPurchaseDeliveryDetailId != null">
        purc_purchase_delivery_detail_id = #{record.purcPurchaseDeliveryDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.demandNo != null">
        demand_no = #{record.demandNo,jdbcType=VARCHAR},
      </if>
      <if test="record.purcPurchaseDelivery != null">
        purc_purchase_delivery = #{record.purcPurchaseDelivery,jdbcType=INTEGER},
      </if>
      <if test="record.product != null">
        product = #{record.product,jdbcType=VARCHAR},
      </if>
      <if test="record.sparePartsNo != null">
        spare_parts_no = #{record.sparePartsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.entryPrice != null">
        entry_price = #{record.entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.specification != null">
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.requiredDeliveryDate != null">
        required_delivery_date = #{record.requiredDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryCount != null">
        delivery_count = #{record.deliveryCount,jdbcType=DOUBLE},
      </if>
      <if test="record.reciveCount != null">
        recive_count = #{record.reciveCount,jdbcType=DOUBLE},
      </if>
      <if test="record.sparePartsUnit != null">
        spare_parts_unit = #{record.sparePartsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveSumAmount != null">
        recive_sum_amount = #{record.reciveSumAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.actualArrivalDate != null">
        actual_arrival_date = #{record.actualArrivalDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purc_purchase_delivery_detail
    set purc_purchase_delivery_detail_id = #{record.purcPurchaseDeliveryDetailId,jdbcType=INTEGER},
      demand_no = #{record.demandNo,jdbcType=VARCHAR},
      purc_purchase_delivery = #{record.purcPurchaseDelivery,jdbcType=INTEGER},
      product = #{record.product,jdbcType=VARCHAR},
      spare_parts_no = #{record.sparePartsNo,jdbcType=VARCHAR},
      entry_price = #{record.entryPrice,jdbcType=DECIMAL},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      specification = #{record.specification,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      required_delivery_date = #{record.requiredDeliveryDate,jdbcType=TIMESTAMP},
      delivery_count = #{record.deliveryCount,jdbcType=DOUBLE},
      recive_count = #{record.reciveCount,jdbcType=DOUBLE},
      spare_parts_unit = #{record.sparePartsUnit,jdbcType=VARCHAR},
      recive_sum_amount = #{record.reciveSumAmount,jdbcType=DECIMAL},
      comments = #{record.comments,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      actual_arrival_date = #{record.actualArrivalDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetail">
    update purc_purchase_delivery_detail
    <set>
      <if test="demandNo != null">
        demand_no = #{demandNo,jdbcType=VARCHAR},
      </if>
      <if test="purcPurchaseDelivery != null">
        purc_purchase_delivery = #{purcPurchaseDelivery,jdbcType=INTEGER},
      </if>
      <if test="product != null">
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsNo != null">
        spare_parts_no = #{sparePartsNo,jdbcType=VARCHAR},
      </if>
      <if test="entryPrice != null">
        entry_price = #{entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="requiredDeliveryDate != null">
        required_delivery_date = #{requiredDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryCount != null">
        delivery_count = #{deliveryCount,jdbcType=DOUBLE},
      </if>
      <if test="reciveCount != null">
        recive_count = #{reciveCount,jdbcType=DOUBLE},
      </if>
      <if test="sparePartsUnit != null">
        spare_parts_unit = #{sparePartsUnit,jdbcType=VARCHAR},
      </if>
      <if test="reciveSumAmount != null">
        recive_sum_amount = #{reciveSumAmount,jdbcType=DECIMAL},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="actualArrivalDate != null">
        actual_arrival_date = #{actualArrivalDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where purc_purchase_delivery_detail_id = #{purcPurchaseDeliveryDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.purchase.entity.PurchaseDeliveryDetail">
    update purc_purchase_delivery_detail
    set demand_no = #{demandNo,jdbcType=VARCHAR},
      purc_purchase_delivery = #{purcPurchaseDelivery,jdbcType=INTEGER},
      product = #{product,jdbcType=VARCHAR},
      spare_parts_no = #{sparePartsNo,jdbcType=VARCHAR},
      entry_price = #{entryPrice,jdbcType=DECIMAL},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      specification = #{specification,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      required_delivery_date = #{requiredDeliveryDate,jdbcType=TIMESTAMP},
      delivery_count = #{deliveryCount,jdbcType=DOUBLE},
      recive_count = #{reciveCount,jdbcType=DOUBLE},
      spare_parts_unit = #{sparePartsUnit,jdbcType=VARCHAR},
      recive_sum_amount = #{reciveSumAmount,jdbcType=DECIMAL},
      comments = #{comments,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      actual_arrival_date = #{actualArrivalDate,jdbcType=TIMESTAMP}
    where purc_purchase_delivery_detail_id = #{purcPurchaseDeliveryDetailId,jdbcType=INTEGER}
  </update>
</mapper>
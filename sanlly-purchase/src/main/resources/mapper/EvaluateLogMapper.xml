<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.purchase.dao.EvaluateLogMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.purchase.entity.EvaluateLog">
    <id column="purc_evaluate_log_id" jdbcType="INTEGER" property="purcEvaluateLogId" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="base_score" jdbcType="DOUBLE" property="baseScore" />
    <result column="credit_score" jdbcType="DOUBLE" property="creditScore" />
    <result column="qualification_score" jdbcType="DOUBLE" property="qualificationScore" />
    <result column="evaluate_score" jdbcType="DOUBLE" property="evaluateScore" />
    <result column="price_score" jdbcType="DOUBLE" property="priceScore" />
    <result column="timely_score" jdbcType="DOUBLE" property="timelyScore" />
    <result column="quality_score" jdbcType="DOUBLE" property="qualityScore" />
    <result column="service_score" jdbcType="DOUBLE" property="serviceScore" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    purc_evaluate_log_id, supplier, base_score, credit_score, qualification_score, evaluate_score, 
    price_score, timely_score, quality_score, service_score, grade, remark, create_time, 
    create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.purchase.entity.EvaluateLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purc_evaluate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purc_evaluate_log
    where purc_evaluate_log_id = #{purcEvaluateLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purc_evaluate_log
    where purc_evaluate_log_id = #{purcEvaluateLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.purchase.entity.EvaluateLogExample">
    delete from purc_evaluate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.purchase.entity.EvaluateLog">
    insert into purc_evaluate_log (purc_evaluate_log_id, supplier, base_score, 
      credit_score, qualification_score, evaluate_score, 
      price_score, timely_score, quality_score, 
      service_score, grade, remark, 
      create_time, create_user, update_time, 
      update_user)
    values (#{purcEvaluateLogId,jdbcType=INTEGER}, #{supplier,jdbcType=VARCHAR}, #{baseScore,jdbcType=DOUBLE}, 
      #{creditScore,jdbcType=DOUBLE}, #{qualificationScore,jdbcType=DOUBLE}, #{evaluateScore,jdbcType=DOUBLE}, 
      #{priceScore,jdbcType=DOUBLE}, #{timelyScore,jdbcType=DOUBLE}, #{qualityScore,jdbcType=DOUBLE}, 
      #{serviceScore,jdbcType=DOUBLE}, #{grade,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.purchase.entity.EvaluateLog">
    insert into purc_evaluate_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="purcEvaluateLogId != null">
        purc_evaluate_log_id,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="baseScore != null">
        base_score,
      </if>
      <if test="creditScore != null">
        credit_score,
      </if>
      <if test="qualificationScore != null">
        qualification_score,
      </if>
      <if test="evaluateScore != null">
        evaluate_score,
      </if>
      <if test="priceScore != null">
        price_score,
      </if>
      <if test="timelyScore != null">
        timely_score,
      </if>
      <if test="qualityScore != null">
        quality_score,
      </if>
      <if test="serviceScore != null">
        service_score,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="purcEvaluateLogId != null">
        #{purcEvaluateLogId,jdbcType=INTEGER},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="baseScore != null">
        #{baseScore,jdbcType=DOUBLE},
      </if>
      <if test="creditScore != null">
        #{creditScore,jdbcType=DOUBLE},
      </if>
      <if test="qualificationScore != null">
        #{qualificationScore,jdbcType=DOUBLE},
      </if>
      <if test="evaluateScore != null">
        #{evaluateScore,jdbcType=DOUBLE},
      </if>
      <if test="priceScore != null">
        #{priceScore,jdbcType=DOUBLE},
      </if>
      <if test="timelyScore != null">
        #{timelyScore,jdbcType=DOUBLE},
      </if>
      <if test="qualityScore != null">
        #{qualityScore,jdbcType=DOUBLE},
      </if>
      <if test="serviceScore != null">
        #{serviceScore,jdbcType=DOUBLE},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.purchase.entity.EvaluateLogExample" resultType="java.lang.Long">
    select count(*) from purc_evaluate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purc_evaluate_log
    <set>
      <if test="record.purcEvaluateLogId != null">
        purc_evaluate_log_id = #{record.purcEvaluateLogId,jdbcType=INTEGER},
      </if>
      <if test="record.supplier != null">
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.baseScore != null">
        base_score = #{record.baseScore,jdbcType=DOUBLE},
      </if>
      <if test="record.creditScore != null">
        credit_score = #{record.creditScore,jdbcType=DOUBLE},
      </if>
      <if test="record.qualificationScore != null">
        qualification_score = #{record.qualificationScore,jdbcType=DOUBLE},
      </if>
      <if test="record.evaluateScore != null">
        evaluate_score = #{record.evaluateScore,jdbcType=DOUBLE},
      </if>
      <if test="record.priceScore != null">
        price_score = #{record.priceScore,jdbcType=DOUBLE},
      </if>
      <if test="record.timelyScore != null">
        timely_score = #{record.timelyScore,jdbcType=DOUBLE},
      </if>
      <if test="record.qualityScore != null">
        quality_score = #{record.qualityScore,jdbcType=DOUBLE},
      </if>
      <if test="record.serviceScore != null">
        service_score = #{record.serviceScore,jdbcType=DOUBLE},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purc_evaluate_log
    set purc_evaluate_log_id = #{record.purcEvaluateLogId,jdbcType=INTEGER},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      base_score = #{record.baseScore,jdbcType=DOUBLE},
      credit_score = #{record.creditScore,jdbcType=DOUBLE},
      qualification_score = #{record.qualificationScore,jdbcType=DOUBLE},
      evaluate_score = #{record.evaluateScore,jdbcType=DOUBLE},
      price_score = #{record.priceScore,jdbcType=DOUBLE},
      timely_score = #{record.timelyScore,jdbcType=DOUBLE},
      quality_score = #{record.qualityScore,jdbcType=DOUBLE},
      service_score = #{record.serviceScore,jdbcType=DOUBLE},
      grade = #{record.grade,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.purchase.entity.EvaluateLog">
    update purc_evaluate_log
    <set>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="baseScore != null">
        base_score = #{baseScore,jdbcType=DOUBLE},
      </if>
      <if test="creditScore != null">
        credit_score = #{creditScore,jdbcType=DOUBLE},
      </if>
      <if test="qualificationScore != null">
        qualification_score = #{qualificationScore,jdbcType=DOUBLE},
      </if>
      <if test="evaluateScore != null">
        evaluate_score = #{evaluateScore,jdbcType=DOUBLE},
      </if>
      <if test="priceScore != null">
        price_score = #{priceScore,jdbcType=DOUBLE},
      </if>
      <if test="timelyScore != null">
        timely_score = #{timelyScore,jdbcType=DOUBLE},
      </if>
      <if test="qualityScore != null">
        quality_score = #{qualityScore,jdbcType=DOUBLE},
      </if>
      <if test="serviceScore != null">
        service_score = #{serviceScore,jdbcType=DOUBLE},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where purc_evaluate_log_id = #{purcEvaluateLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.purchase.entity.EvaluateLog">
    update purc_evaluate_log
    set supplier = #{supplier,jdbcType=VARCHAR},
      base_score = #{baseScore,jdbcType=DOUBLE},
      credit_score = #{creditScore,jdbcType=DOUBLE},
      qualification_score = #{qualificationScore,jdbcType=DOUBLE},
      evaluate_score = #{evaluateScore,jdbcType=DOUBLE},
      price_score = #{priceScore,jdbcType=DOUBLE},
      timely_score = #{timelyScore,jdbcType=DOUBLE},
      quality_score = #{qualityScore,jdbcType=DOUBLE},
      service_score = #{serviceScore,jdbcType=DOUBLE},
      grade = #{grade,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where purc_evaluate_log_id = #{purcEvaluateLogId,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.ProdOutMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.ProdOut">
    <id column="prod_out_id" jdbcType="INTEGER" property="prodOutId" />
    <result column="course" jdbcType="VARCHAR" property="course" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="out_user" jdbcType="INTEGER" property="outUser" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sanlly.production.entity.ProdOut">
    <result column="out_photo" jdbcType="LONGVARCHAR" property="outPhoto" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_out_id, course, container_no, out_user, out_time, is_del, create_time, create_user, 
    update_time, update_user
  </sql>
  <sql id="Blob_Column_List">
    out_photo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sanlly.production.entity.ProdOutExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.ProdOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_out
    where prod_out_id = #{prodOutId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_out
    where prod_out_id = #{prodOutId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.ProdOutExample">
    delete from prod_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.ProdOut">
    insert into prod_out (prod_out_id, course, container_no, 
      out_user, out_time, is_del, 
      create_time, create_user, update_time, 
      update_user, out_photo)
    values (#{prodOutId,jdbcType=INTEGER}, #{course,jdbcType=VARCHAR}, #{containerNo,jdbcType=VARCHAR}, 
      #{outUser,jdbcType=INTEGER}, #{outTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{outPhoto,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.ProdOut">
    insert into prod_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodOutId != null">
        prod_out_id,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="outUser != null">
        out_user,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="outPhoto != null">
        out_photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodOutId != null">
        #{prodOutId,jdbcType=INTEGER},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="outUser != null">
        #{outUser,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="outPhoto != null">
        #{outPhoto,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.ProdOutExample" resultType="java.lang.Long">
    select count(*) from prod_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_out
    <set>
      <if test="record.prodOutId != null">
        prod_out_id = #{record.prodOutId,jdbcType=INTEGER},
      </if>
      <if test="record.course != null">
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outUser != null">
        out_user = #{record.outUser,jdbcType=INTEGER},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.outPhoto != null">
        out_photo = #{record.outPhoto,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update prod_out
    set prod_out_id = #{record.prodOutId,jdbcType=INTEGER},
      course = #{record.course,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      out_user = #{record.outUser,jdbcType=INTEGER},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      out_photo = #{record.outPhoto,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_out
    set prod_out_id = #{record.prodOutId,jdbcType=INTEGER},
      course = #{record.course,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      out_user = #{record.outUser,jdbcType=INTEGER},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.ProdOut">
    update prod_out
    <set>
      <if test="course != null">
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="outUser != null">
        out_user = #{outUser,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="outPhoto != null">
        out_photo = #{outPhoto,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where prod_out_id = #{prodOutId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sanlly.production.entity.ProdOut">
    update prod_out
    set course = #{course,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      out_user = #{outUser,jdbcType=INTEGER},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      out_photo = #{outPhoto,jdbcType=LONGVARCHAR}
    where prod_out_id = #{prodOutId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.ProdOut">
    update prod_out
    set course = #{course,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      out_user = #{outUser,jdbcType=INTEGER},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where prod_out_id = #{prodOutId,jdbcType=INTEGER}
  </update>
</mapper>
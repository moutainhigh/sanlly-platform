<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.MessageRuleMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.MessageRule">
    <id column="prod_message_rule_id" jdbcType="INTEGER" property="prodMessageRuleId" />
    <result column="is_common" jdbcType="VARCHAR" property="isCommon" />
    <result column="container_user" jdbcType="VARCHAR" property="containerUser" />
    <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
    <result column="rule_condition" jdbcType="VARCHAR" property="ruleCondition" />
    <result column="rule_condition_json" jdbcType="VARCHAR" property="ruleConditionJson" />
    <result column="send_type" jdbcType="VARCHAR" property="sendType" />
    <result column="send_title" jdbcType="VARCHAR" property="sendTitle" />
    <result column="content_format" jdbcType="VARCHAR" property="contentFormat" />
    <result column="receive_user" jdbcType="VARCHAR" property="receiveUser" />
    <result column="receive_email" jdbcType="VARCHAR" property="receiveEmail" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_message_rule_id, is_common, container_user, rule_name, rule_condition, rule_condition_json, 
    send_type, send_title, content_format, receive_user, receive_email, remark, is_del, 
    create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.MessageRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_message_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_message_rule
    where prod_message_rule_id = #{prodMessageRuleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_message_rule
    where prod_message_rule_id = #{prodMessageRuleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.MessageRuleExample">
    delete from prod_message_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.MessageRule">
    insert into prod_message_rule (prod_message_rule_id, is_common, container_user, 
      rule_name, rule_condition, rule_condition_json, 
      send_type, send_title, content_format, 
      receive_user, receive_email, remark, 
      is_del, create_time, create_user, 
      update_time, update_user)
    values (#{prodMessageRuleId,jdbcType=INTEGER}, #{isCommon,jdbcType=VARCHAR}, #{containerUser,jdbcType=VARCHAR}, 
      #{ruleName,jdbcType=VARCHAR}, #{ruleCondition,jdbcType=VARCHAR}, #{ruleConditionJson,jdbcType=VARCHAR}, 
      #{sendType,jdbcType=VARCHAR}, #{sendTitle,jdbcType=VARCHAR}, #{contentFormat,jdbcType=VARCHAR}, 
      #{receiveUser,jdbcType=VARCHAR}, #{receiveEmail,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.MessageRule">
    insert into prod_message_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodMessageRuleId != null">
        prod_message_rule_id,
      </if>
      <if test="isCommon != null">
        is_common,
      </if>
      <if test="containerUser != null">
        container_user,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="ruleCondition != null">
        rule_condition,
      </if>
      <if test="ruleConditionJson != null">
        rule_condition_json,
      </if>
      <if test="sendType != null">
        send_type,
      </if>
      <if test="sendTitle != null">
        send_title,
      </if>
      <if test="contentFormat != null">
        content_format,
      </if>
      <if test="receiveUser != null">
        receive_user,
      </if>
      <if test="receiveEmail != null">
        receive_email,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodMessageRuleId != null">
        #{prodMessageRuleId,jdbcType=INTEGER},
      </if>
      <if test="isCommon != null">
        #{isCommon,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="ruleCondition != null">
        #{ruleCondition,jdbcType=VARCHAR},
      </if>
      <if test="ruleConditionJson != null">
        #{ruleConditionJson,jdbcType=VARCHAR},
      </if>
      <if test="sendType != null">
        #{sendType,jdbcType=VARCHAR},
      </if>
      <if test="sendTitle != null">
        #{sendTitle,jdbcType=VARCHAR},
      </if>
      <if test="contentFormat != null">
        #{contentFormat,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null">
        #{receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="receiveEmail != null">
        #{receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.MessageRuleExample" resultType="java.lang.Long">
    select count(*) from prod_message_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_message_rule
    <set>
      <if test="record.prodMessageRuleId != null">
        prod_message_rule_id = #{record.prodMessageRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.isCommon != null">
        is_common = #{record.isCommon,jdbcType=VARCHAR},
      </if>
      <if test="record.containerUser != null">
        container_user = #{record.containerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleName != null">
        rule_name = #{record.ruleName,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleCondition != null">
        rule_condition = #{record.ruleCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleConditionJson != null">
        rule_condition_json = #{record.ruleConditionJson,jdbcType=VARCHAR},
      </if>
      <if test="record.sendType != null">
        send_type = #{record.sendType,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTitle != null">
        send_title = #{record.sendTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.contentFormat != null">
        content_format = #{record.contentFormat,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUser != null">
        receive_user = #{record.receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveEmail != null">
        receive_email = #{record.receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_message_rule
    set prod_message_rule_id = #{record.prodMessageRuleId,jdbcType=INTEGER},
      is_common = #{record.isCommon,jdbcType=VARCHAR},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      rule_name = #{record.ruleName,jdbcType=VARCHAR},
      rule_condition = #{record.ruleCondition,jdbcType=VARCHAR},
      rule_condition_json = #{record.ruleConditionJson,jdbcType=VARCHAR},
      send_type = #{record.sendType,jdbcType=VARCHAR},
      send_title = #{record.sendTitle,jdbcType=VARCHAR},
      content_format = #{record.contentFormat,jdbcType=VARCHAR},
      receive_user = #{record.receiveUser,jdbcType=VARCHAR},
      receive_email = #{record.receiveEmail,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.MessageRule">
    update prod_message_rule
    <set>
      <if test="isCommon != null">
        is_common = #{isCommon,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        container_user = #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="ruleName != null">
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="ruleCondition != null">
        rule_condition = #{ruleCondition,jdbcType=VARCHAR},
      </if>
      <if test="ruleConditionJson != null">
        rule_condition_json = #{ruleConditionJson,jdbcType=VARCHAR},
      </if>
      <if test="sendType != null">
        send_type = #{sendType,jdbcType=VARCHAR},
      </if>
      <if test="sendTitle != null">
        send_title = #{sendTitle,jdbcType=VARCHAR},
      </if>
      <if test="contentFormat != null">
        content_format = #{contentFormat,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null">
        receive_user = #{receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="receiveEmail != null">
        receive_email = #{receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where prod_message_rule_id = #{prodMessageRuleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.MessageRule">
    update prod_message_rule
    set is_common = #{isCommon,jdbcType=VARCHAR},
      container_user = #{containerUser,jdbcType=VARCHAR},
      rule_name = #{ruleName,jdbcType=VARCHAR},
      rule_condition = #{ruleCondition,jdbcType=VARCHAR},
      rule_condition_json = #{ruleConditionJson,jdbcType=VARCHAR},
      send_type = #{sendType,jdbcType=VARCHAR},
      send_title = #{sendTitle,jdbcType=VARCHAR},
      content_format = #{contentFormat,jdbcType=VARCHAR},
      receive_user = #{receiveUser,jdbcType=VARCHAR},
      receive_email = #{receiveEmail,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where prod_message_rule_id = #{prodMessageRuleId,jdbcType=INTEGER}
  </update>
</mapper>
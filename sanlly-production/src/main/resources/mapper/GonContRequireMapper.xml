<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.GonContRequireMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.GonContRequire">
    <id column="prod_gon_cont_require_id" jdbcType="INTEGER" property="prodGonContRequireId" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="container_type" jdbcType="VARCHAR" property="containerType" />
    <result column="structure" jdbcType="VARCHAR" property="structure" />
    <result column="girder" jdbcType="VARCHAR" property="girder" />
    <result column="rope" jdbcType="VARCHAR" property="rope" />
    <result column="knot" jdbcType="VARCHAR" property="knot" />
    <result column="girder_distance" jdbcType="DOUBLE" property="girderDistance" />
    <result column="knot_distance" jdbcType="DOUBLE" property="knotDistance" />
    <result column="board_distance" jdbcType="DOUBLE" property="boardDistance" />
    <result column="cont_skin_weight" jdbcType="DOUBLE" property="contSkinWeight" />
    <result column="material_weight" jdbcType="DOUBLE" property="materialWeight" />
    <result column="container_user" jdbcType="VARCHAR" property="containerUser" />
    <result column="rests_require" jdbcType="VARCHAR" property="restsRequire" />
    <result column="zy_money" jdbcType="DECIMAL" property="zyMoney" />
    <result column="company_money" jdbcType="DECIMAL" property="companyMoney" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_gon_cont_require_id, container_no, container_type, `structure`, girder, rope, 
    knot, girder_distance, knot_distance, board_distance, cont_skin_weight, material_weight, 
    container_user, rests_require, zy_money, company_money, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.GonContRequireExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_gon_cont_require
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_gon_cont_require
    where prod_gon_cont_require_id = #{prodGonContRequireId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_gon_cont_require
    where prod_gon_cont_require_id = #{prodGonContRequireId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.GonContRequireExample">
    delete from prod_gon_cont_require
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.GonContRequire">
    insert into prod_gon_cont_require (prod_gon_cont_require_id, container_no, 
      container_type, `structure`, girder, 
      rope, knot, girder_distance, 
      knot_distance, board_distance, cont_skin_weight, 
      material_weight, container_user, rests_require, 
      zy_money, company_money, create_time, 
      create_user, update_time, update_user
      )
    values (#{prodGonContRequireId,jdbcType=INTEGER}, #{containerNo,jdbcType=VARCHAR}, 
      #{containerType,jdbcType=VARCHAR}, #{structure,jdbcType=VARCHAR}, #{girder,jdbcType=VARCHAR}, 
      #{rope,jdbcType=VARCHAR}, #{knot,jdbcType=VARCHAR}, #{girderDistance,jdbcType=DOUBLE}, 
      #{knotDistance,jdbcType=DOUBLE}, #{boardDistance,jdbcType=DOUBLE}, #{contSkinWeight,jdbcType=DOUBLE}, 
      #{materialWeight,jdbcType=DOUBLE}, #{containerUser,jdbcType=VARCHAR}, #{restsRequire,jdbcType=VARCHAR}, 
      #{zyMoney,jdbcType=DECIMAL}, #{companyMoney,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.GonContRequire">
    insert into prod_gon_cont_require
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodGonContRequireId != null">
        prod_gon_cont_require_id,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="containerType != null">
        container_type,
      </if>
      <if test="structure != null">
        `structure`,
      </if>
      <if test="girder != null">
        girder,
      </if>
      <if test="rope != null">
        rope,
      </if>
      <if test="knot != null">
        knot,
      </if>
      <if test="girderDistance != null">
        girder_distance,
      </if>
      <if test="knotDistance != null">
        knot_distance,
      </if>
      <if test="boardDistance != null">
        board_distance,
      </if>
      <if test="contSkinWeight != null">
        cont_skin_weight,
      </if>
      <if test="materialWeight != null">
        material_weight,
      </if>
      <if test="containerUser != null">
        container_user,
      </if>
      <if test="restsRequire != null">
        rests_require,
      </if>
      <if test="zyMoney != null">
        zy_money,
      </if>
      <if test="companyMoney != null">
        company_money,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodGonContRequireId != null">
        #{prodGonContRequireId,jdbcType=INTEGER},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="structure != null">
        #{structure,jdbcType=VARCHAR},
      </if>
      <if test="girder != null">
        #{girder,jdbcType=VARCHAR},
      </if>
      <if test="rope != null">
        #{rope,jdbcType=VARCHAR},
      </if>
      <if test="knot != null">
        #{knot,jdbcType=VARCHAR},
      </if>
      <if test="girderDistance != null">
        #{girderDistance,jdbcType=DOUBLE},
      </if>
      <if test="knotDistance != null">
        #{knotDistance,jdbcType=DOUBLE},
      </if>
      <if test="boardDistance != null">
        #{boardDistance,jdbcType=DOUBLE},
      </if>
      <if test="contSkinWeight != null">
        #{contSkinWeight,jdbcType=DOUBLE},
      </if>
      <if test="materialWeight != null">
        #{materialWeight,jdbcType=DOUBLE},
      </if>
      <if test="containerUser != null">
        #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="restsRequire != null">
        #{restsRequire,jdbcType=VARCHAR},
      </if>
      <if test="zyMoney != null">
        #{zyMoney,jdbcType=DECIMAL},
      </if>
      <if test="companyMoney != null">
        #{companyMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.GonContRequireExample" resultType="java.lang.Long">
    select count(*) from prod_gon_cont_require
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_gon_cont_require
    <set>
      <if test="record.prodGonContRequireId != null">
        prod_gon_cont_require_id = #{record.prodGonContRequireId,jdbcType=INTEGER},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.containerType != null">
        container_type = #{record.containerType,jdbcType=VARCHAR},
      </if>
      <if test="record.structure != null">
        `structure` = #{record.structure,jdbcType=VARCHAR},
      </if>
      <if test="record.girder != null">
        girder = #{record.girder,jdbcType=VARCHAR},
      </if>
      <if test="record.rope != null">
        rope = #{record.rope,jdbcType=VARCHAR},
      </if>
      <if test="record.knot != null">
        knot = #{record.knot,jdbcType=VARCHAR},
      </if>
      <if test="record.girderDistance != null">
        girder_distance = #{record.girderDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.knotDistance != null">
        knot_distance = #{record.knotDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.boardDistance != null">
        board_distance = #{record.boardDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.contSkinWeight != null">
        cont_skin_weight = #{record.contSkinWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.materialWeight != null">
        material_weight = #{record.materialWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.containerUser != null">
        container_user = #{record.containerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.restsRequire != null">
        rests_require = #{record.restsRequire,jdbcType=VARCHAR},
      </if>
      <if test="record.zyMoney != null">
        zy_money = #{record.zyMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.companyMoney != null">
        company_money = #{record.companyMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_gon_cont_require
    set prod_gon_cont_require_id = #{record.prodGonContRequireId,jdbcType=INTEGER},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      container_type = #{record.containerType,jdbcType=VARCHAR},
      `structure` = #{record.structure,jdbcType=VARCHAR},
      girder = #{record.girder,jdbcType=VARCHAR},
      rope = #{record.rope,jdbcType=VARCHAR},
      knot = #{record.knot,jdbcType=VARCHAR},
      girder_distance = #{record.girderDistance,jdbcType=DOUBLE},
      knot_distance = #{record.knotDistance,jdbcType=DOUBLE},
      board_distance = #{record.boardDistance,jdbcType=DOUBLE},
      cont_skin_weight = #{record.contSkinWeight,jdbcType=DOUBLE},
      material_weight = #{record.materialWeight,jdbcType=DOUBLE},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      rests_require = #{record.restsRequire,jdbcType=VARCHAR},
      zy_money = #{record.zyMoney,jdbcType=DECIMAL},
      company_money = #{record.companyMoney,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.GonContRequire">
    update prod_gon_cont_require
    <set>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        container_type = #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="structure != null">
        `structure` = #{structure,jdbcType=VARCHAR},
      </if>
      <if test="girder != null">
        girder = #{girder,jdbcType=VARCHAR},
      </if>
      <if test="rope != null">
        rope = #{rope,jdbcType=VARCHAR},
      </if>
      <if test="knot != null">
        knot = #{knot,jdbcType=VARCHAR},
      </if>
      <if test="girderDistance != null">
        girder_distance = #{girderDistance,jdbcType=DOUBLE},
      </if>
      <if test="knotDistance != null">
        knot_distance = #{knotDistance,jdbcType=DOUBLE},
      </if>
      <if test="boardDistance != null">
        board_distance = #{boardDistance,jdbcType=DOUBLE},
      </if>
      <if test="contSkinWeight != null">
        cont_skin_weight = #{contSkinWeight,jdbcType=DOUBLE},
      </if>
      <if test="materialWeight != null">
        material_weight = #{materialWeight,jdbcType=DOUBLE},
      </if>
      <if test="containerUser != null">
        container_user = #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="restsRequire != null">
        rests_require = #{restsRequire,jdbcType=VARCHAR},
      </if>
      <if test="zyMoney != null">
        zy_money = #{zyMoney,jdbcType=DECIMAL},
      </if>
      <if test="companyMoney != null">
        company_money = #{companyMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where prod_gon_cont_require_id = #{prodGonContRequireId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.GonContRequire">
    update prod_gon_cont_require
    set container_no = #{containerNo,jdbcType=VARCHAR},
      container_type = #{containerType,jdbcType=VARCHAR},
      `structure` = #{structure,jdbcType=VARCHAR},
      girder = #{girder,jdbcType=VARCHAR},
      rope = #{rope,jdbcType=VARCHAR},
      knot = #{knot,jdbcType=VARCHAR},
      girder_distance = #{girderDistance,jdbcType=DOUBLE},
      knot_distance = #{knotDistance,jdbcType=DOUBLE},
      board_distance = #{boardDistance,jdbcType=DOUBLE},
      cont_skin_weight = #{contSkinWeight,jdbcType=DOUBLE},
      material_weight = #{materialWeight,jdbcType=DOUBLE},
      container_user = #{containerUser,jdbcType=VARCHAR},
      rests_require = #{restsRequire,jdbcType=VARCHAR},
      zy_money = #{zyMoney,jdbcType=DECIMAL},
      company_money = #{companyMoney,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where prod_gon_cont_require_id = #{prodGonContRequireId,jdbcType=INTEGER}
  </update>
</mapper>
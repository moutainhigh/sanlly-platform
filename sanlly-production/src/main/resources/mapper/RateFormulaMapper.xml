<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.RateFormulaMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.RateFormula">
    <id column="prod_rate_formula_id" jdbcType="VARCHAR" property="prodRateFormulaId" />
    <result column="rate_id" jdbcType="VARCHAR" property="rateId" />
    <result column="rate_code" jdbcType="VARCHAR" property="rateCode" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="position_code" jdbcType="VARCHAR" property="positionCode" />
    <result column="container_type" jdbcType="VARCHAR" property="containerType" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="algorithm_type" jdbcType="VARCHAR" property="algorithmType" />
    <result column="algorithm_basis" jdbcType="VARCHAR" property="algorithmBasis" />
    <result column="cardinal_number" jdbcType="DOUBLE" property="cardinalNumber" />
    <result column="start_value" jdbcType="DOUBLE" property="startValue" />
    <result column="max_value" jdbcType="DOUBLE" property="maxValue" />
    <result column="max_cardinal_number" jdbcType="DOUBLE" property="maxCardinalNumber" />
    <result column="add_value" jdbcType="DOUBLE" property="addValue" />
    <result column="add_cardinal_number" jdbcType="DOUBLE" property="addCardinalNumber" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_rate_formula_id, rate_id, rate_code, `type`, position_code, container_type, 
    `size`, algorithm_type, algorithm_basis, cardinal_number, start_value, max_value, 
    max_cardinal_number, add_value, add_cardinal_number, is_del, create_time, create_user, 
    update_time, update_user, remark
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.RateFormulaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_rate_formula
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_rate_formula
    where prod_rate_formula_id = #{prodRateFormulaId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from prod_rate_formula
    where prod_rate_formula_id = #{prodRateFormulaId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.RateFormulaExample">
    delete from prod_rate_formula
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.RateFormula">
    insert into prod_rate_formula (prod_rate_formula_id, rate_id, rate_code, 
      `type`, position_code, container_type, 
      `size`, algorithm_type, algorithm_basis, 
      cardinal_number, start_value, max_value, 
      max_cardinal_number, add_value, add_cardinal_number, 
      is_del, create_time, create_user, 
      update_time, update_user, remark
      )
    values (#{prodRateFormulaId,jdbcType=VARCHAR}, #{rateId,jdbcType=VARCHAR}, #{rateCode,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{positionCode,jdbcType=VARCHAR}, #{containerType,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{algorithmType,jdbcType=VARCHAR}, #{algorithmBasis,jdbcType=VARCHAR}, 
      #{cardinalNumber,jdbcType=DOUBLE}, #{startValue,jdbcType=DOUBLE}, #{maxValue,jdbcType=DOUBLE}, 
      #{maxCardinalNumber,jdbcType=DOUBLE}, #{addValue,jdbcType=DOUBLE}, #{addCardinalNumber,jdbcType=DOUBLE}, 
      #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.RateFormula">
    insert into prod_rate_formula
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodRateFormulaId != null">
        prod_rate_formula_id,
      </if>
      <if test="rateId != null">
        rate_id,
      </if>
      <if test="rateCode != null">
        rate_code,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="positionCode != null">
        position_code,
      </if>
      <if test="containerType != null">
        container_type,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="algorithmType != null">
        algorithm_type,
      </if>
      <if test="algorithmBasis != null">
        algorithm_basis,
      </if>
      <if test="cardinalNumber != null">
        cardinal_number,
      </if>
      <if test="startValue != null">
        start_value,
      </if>
      <if test="maxValue != null">
        max_value,
      </if>
      <if test="maxCardinalNumber != null">
        max_cardinal_number,
      </if>
      <if test="addValue != null">
        add_value,
      </if>
      <if test="addCardinalNumber != null">
        add_cardinal_number,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodRateFormulaId != null">
        #{prodRateFormulaId,jdbcType=VARCHAR},
      </if>
      <if test="rateId != null">
        #{rateId,jdbcType=VARCHAR},
      </if>
      <if test="rateCode != null">
        #{rateCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="positionCode != null">
        #{positionCode,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="algorithmType != null">
        #{algorithmType,jdbcType=VARCHAR},
      </if>
      <if test="algorithmBasis != null">
        #{algorithmBasis,jdbcType=VARCHAR},
      </if>
      <if test="cardinalNumber != null">
        #{cardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="startValue != null">
        #{startValue,jdbcType=DOUBLE},
      </if>
      <if test="maxValue != null">
        #{maxValue,jdbcType=DOUBLE},
      </if>
      <if test="maxCardinalNumber != null">
        #{maxCardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="addValue != null">
        #{addValue,jdbcType=DOUBLE},
      </if>
      <if test="addCardinalNumber != null">
        #{addCardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.RateFormulaExample" resultType="java.lang.Long">
    select count(*) from prod_rate_formula
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_rate_formula
    <set>
      <if test="record.prodRateFormulaId != null">
        prod_rate_formula_id = #{record.prodRateFormulaId,jdbcType=VARCHAR},
      </if>
      <if test="record.rateId != null">
        rate_id = #{record.rateId,jdbcType=VARCHAR},
      </if>
      <if test="record.rateCode != null">
        rate_code = #{record.rateCode,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.positionCode != null">
        position_code = #{record.positionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.containerType != null">
        container_type = #{record.containerType,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        `size` = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.algorithmType != null">
        algorithm_type = #{record.algorithmType,jdbcType=VARCHAR},
      </if>
      <if test="record.algorithmBasis != null">
        algorithm_basis = #{record.algorithmBasis,jdbcType=VARCHAR},
      </if>
      <if test="record.cardinalNumber != null">
        cardinal_number = #{record.cardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.startValue != null">
        start_value = #{record.startValue,jdbcType=DOUBLE},
      </if>
      <if test="record.maxValue != null">
        max_value = #{record.maxValue,jdbcType=DOUBLE},
      </if>
      <if test="record.maxCardinalNumber != null">
        max_cardinal_number = #{record.maxCardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.addValue != null">
        add_value = #{record.addValue,jdbcType=DOUBLE},
      </if>
      <if test="record.addCardinalNumber != null">
        add_cardinal_number = #{record.addCardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_rate_formula
    set prod_rate_formula_id = #{record.prodRateFormulaId,jdbcType=VARCHAR},
      rate_id = #{record.rateId,jdbcType=VARCHAR},
      rate_code = #{record.rateCode,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      position_code = #{record.positionCode,jdbcType=VARCHAR},
      container_type = #{record.containerType,jdbcType=VARCHAR},
      `size` = #{record.size,jdbcType=VARCHAR},
      algorithm_type = #{record.algorithmType,jdbcType=VARCHAR},
      algorithm_basis = #{record.algorithmBasis,jdbcType=VARCHAR},
      cardinal_number = #{record.cardinalNumber,jdbcType=DOUBLE},
      start_value = #{record.startValue,jdbcType=DOUBLE},
      max_value = #{record.maxValue,jdbcType=DOUBLE},
      max_cardinal_number = #{record.maxCardinalNumber,jdbcType=DOUBLE},
      add_value = #{record.addValue,jdbcType=DOUBLE},
      add_cardinal_number = #{record.addCardinalNumber,jdbcType=DOUBLE},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.RateFormula">
    update prod_rate_formula
    <set>
      <if test="rateId != null">
        rate_id = #{rateId,jdbcType=VARCHAR},
      </if>
      <if test="rateCode != null">
        rate_code = #{rateCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="positionCode != null">
        position_code = #{positionCode,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        container_type = #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=VARCHAR},
      </if>
      <if test="algorithmType != null">
        algorithm_type = #{algorithmType,jdbcType=VARCHAR},
      </if>
      <if test="algorithmBasis != null">
        algorithm_basis = #{algorithmBasis,jdbcType=VARCHAR},
      </if>
      <if test="cardinalNumber != null">
        cardinal_number = #{cardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="startValue != null">
        start_value = #{startValue,jdbcType=DOUBLE},
      </if>
      <if test="maxValue != null">
        max_value = #{maxValue,jdbcType=DOUBLE},
      </if>
      <if test="maxCardinalNumber != null">
        max_cardinal_number = #{maxCardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="addValue != null">
        add_value = #{addValue,jdbcType=DOUBLE},
      </if>
      <if test="addCardinalNumber != null">
        add_cardinal_number = #{addCardinalNumber,jdbcType=DOUBLE},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where prod_rate_formula_id = #{prodRateFormulaId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.RateFormula">
    update prod_rate_formula
    set rate_id = #{rateId,jdbcType=VARCHAR},
      rate_code = #{rateCode,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      position_code = #{positionCode,jdbcType=VARCHAR},
      container_type = #{containerType,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=VARCHAR},
      algorithm_type = #{algorithmType,jdbcType=VARCHAR},
      algorithm_basis = #{algorithmBasis,jdbcType=VARCHAR},
      cardinal_number = #{cardinalNumber,jdbcType=DOUBLE},
      start_value = #{startValue,jdbcType=DOUBLE},
      max_value = #{maxValue,jdbcType=DOUBLE},
      max_cardinal_number = #{maxCardinalNumber,jdbcType=DOUBLE},
      add_value = #{addValue,jdbcType=DOUBLE},
      add_cardinal_number = #{addCardinalNumber,jdbcType=DOUBLE},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where prod_rate_formula_id = #{prodRateFormulaId,jdbcType=VARCHAR}
  </update>
</mapper>
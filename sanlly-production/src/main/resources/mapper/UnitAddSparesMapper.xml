<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.UnitAddSparesMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.UnitAddSpares">
    <id column="prod_unit_add_spares_id" jdbcType="INTEGER" property="prodUnitAddSparesId" />
    <result column="parts_details" jdbcType="VARCHAR" property="partsDetails" />
    <result column="unit_type" jdbcType="VARCHAR" property="unitType" />
    <result column="unit_company" jdbcType="VARCHAR" property="unitCompany" />
    <result column="spares_number" jdbcType="VARCHAR" property="sparesNumber" />
    <result column="repair_remarks" jdbcType="VARCHAR" property="repairRemarks" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_unit_add_spares_id, parts_details, unit_type, unit_company, spares_number, repair_remarks, 
    is_del, create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.UnitAddSparesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_unit_add_spares
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_unit_add_spares
    where prod_unit_add_spares_id = #{prodUnitAddSparesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_unit_add_spares
    where prod_unit_add_spares_id = #{prodUnitAddSparesId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.UnitAddSparesExample">
    delete from prod_unit_add_spares
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.UnitAddSpares">
    insert into prod_unit_add_spares (prod_unit_add_spares_id, parts_details, 
      unit_type, unit_company, spares_number, 
      repair_remarks, is_del, create_time, 
      create_user, update_time, update_user
      )
    values (#{prodUnitAddSparesId,jdbcType=INTEGER}, #{partsDetails,jdbcType=VARCHAR}, 
      #{unitType,jdbcType=VARCHAR}, #{unitCompany,jdbcType=VARCHAR}, #{sparesNumber,jdbcType=VARCHAR}, 
      #{repairRemarks,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.UnitAddSpares">
    insert into prod_unit_add_spares
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodUnitAddSparesId != null">
        prod_unit_add_spares_id,
      </if>
      <if test="partsDetails != null">
        parts_details,
      </if>
      <if test="unitType != null">
        unit_type,
      </if>
      <if test="unitCompany != null">
        unit_company,
      </if>
      <if test="sparesNumber != null">
        spares_number,
      </if>
      <if test="repairRemarks != null">
        repair_remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodUnitAddSparesId != null">
        #{prodUnitAddSparesId,jdbcType=INTEGER},
      </if>
      <if test="partsDetails != null">
        #{partsDetails,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null">
        #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="unitCompany != null">
        #{unitCompany,jdbcType=VARCHAR},
      </if>
      <if test="sparesNumber != null">
        #{sparesNumber,jdbcType=VARCHAR},
      </if>
      <if test="repairRemarks != null">
        #{repairRemarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.UnitAddSparesExample" resultType="java.lang.Long">
    select count(*) from prod_unit_add_spares
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_unit_add_spares
    <set>
      <if test="record.prodUnitAddSparesId != null">
        prod_unit_add_spares_id = #{record.prodUnitAddSparesId,jdbcType=INTEGER},
      </if>
      <if test="record.partsDetails != null">
        parts_details = #{record.partsDetails,jdbcType=VARCHAR},
      </if>
      <if test="record.unitType != null">
        unit_type = #{record.unitType,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCompany != null">
        unit_company = #{record.unitCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.sparesNumber != null">
        spares_number = #{record.sparesNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.repairRemarks != null">
        repair_remarks = #{record.repairRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_unit_add_spares
    set prod_unit_add_spares_id = #{record.prodUnitAddSparesId,jdbcType=INTEGER},
      parts_details = #{record.partsDetails,jdbcType=VARCHAR},
      unit_type = #{record.unitType,jdbcType=VARCHAR},
      unit_company = #{record.unitCompany,jdbcType=VARCHAR},
      spares_number = #{record.sparesNumber,jdbcType=VARCHAR},
      repair_remarks = #{record.repairRemarks,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.UnitAddSpares">
    update prod_unit_add_spares
    <set>
      <if test="partsDetails != null">
        parts_details = #{partsDetails,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null">
        unit_type = #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="unitCompany != null">
        unit_company = #{unitCompany,jdbcType=VARCHAR},
      </if>
      <if test="sparesNumber != null">
        spares_number = #{sparesNumber,jdbcType=VARCHAR},
      </if>
      <if test="repairRemarks != null">
        repair_remarks = #{repairRemarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where prod_unit_add_spares_id = #{prodUnitAddSparesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.UnitAddSpares">
    update prod_unit_add_spares
    set parts_details = #{partsDetails,jdbcType=VARCHAR},
      unit_type = #{unitType,jdbcType=VARCHAR},
      unit_company = #{unitCompany,jdbcType=VARCHAR},
      spares_number = #{sparesNumber,jdbcType=VARCHAR},
      repair_remarks = #{repairRemarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where prod_unit_add_spares_id = #{prodUnitAddSparesId,jdbcType=INTEGER}
  </update>
</mapper>
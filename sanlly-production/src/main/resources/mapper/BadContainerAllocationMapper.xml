<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.BadContainerAllocationMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.BadContainerAllocation">
    <id column="prod_bad_container_allocation_id" jdbcType="INTEGER" property="prodBadContainerAllocationId" />
    <result column="out_course" jdbcType="VARCHAR" property="outCourse" />
    <result column="in_course" jdbcType="VARCHAR" property="inCourse" />
    <result column="allocation_no" jdbcType="VARCHAR" property="allocationNo" />
    <result column="course" jdbcType="VARCHAR" property="course" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="exit_yard" jdbcType="VARCHAR" property="exitYard" />
    <result column="entry_yard" jdbcType="VARCHAR" property="entryYard" />
    <result column="container_user" jdbcType="VARCHAR" property="containerUser" />
    <result column="fleet" jdbcType="VARCHAR" property="fleet" />
    <result column="plate_no" jdbcType="VARCHAR" property="plateNo" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="allocation_time" jdbcType="TIMESTAMP" property="allocationTime" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="cost_center" jdbcType="DECIMAL" property="costCenter" />
    <result column="allocation_type" jdbcType="VARCHAR" property="allocationType" />
    <result column="directive_issuer" jdbcType="VARCHAR" property="directiveIssuer" />
    <result column="directive_time" jdbcType="TIMESTAMP" property="directiveTime" />
    <result column="identify_people" jdbcType="VARCHAR" property="identifyPeople" />
    <result column="identify_time" jdbcType="TIMESTAMP" property="identifyTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_bad_container_allocation_id, out_course, in_course, allocation_no, course, container_no, 
    exit_yard, entry_yard, container_user, fleet, plate_no, cost, allocation_time, `state`, 
    reason, remark, cost_center, allocation_type, directive_issuer, directive_time, identify_people, 
    identify_time, create_time, create_user, update_time, update_user, is_del
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.BadContainerAllocationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_bad_container_allocation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_bad_container_allocation
    where prod_bad_container_allocation_id = #{prodBadContainerAllocationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_bad_container_allocation
    where prod_bad_container_allocation_id = #{prodBadContainerAllocationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.BadContainerAllocationExample">
    delete from prod_bad_container_allocation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.BadContainerAllocation">
    insert into prod_bad_container_allocation (prod_bad_container_allocation_id, out_course, 
      in_course, allocation_no, course, 
      container_no, exit_yard, entry_yard, 
      container_user, fleet, plate_no, 
      cost, allocation_time, `state`, 
      reason, remark, cost_center, 
      allocation_type, directive_issuer, directive_time, 
      identify_people, identify_time, create_time, 
      create_user, update_time, update_user, 
      is_del)
    values (#{prodBadContainerAllocationId,jdbcType=INTEGER}, #{outCourse,jdbcType=VARCHAR}, 
      #{inCourse,jdbcType=VARCHAR}, #{allocationNo,jdbcType=VARCHAR}, #{course,jdbcType=VARCHAR}, 
      #{containerNo,jdbcType=VARCHAR}, #{exitYard,jdbcType=VARCHAR}, #{entryYard,jdbcType=VARCHAR}, 
      #{containerUser,jdbcType=VARCHAR}, #{fleet,jdbcType=VARCHAR}, #{plateNo,jdbcType=VARCHAR}, 
      #{cost,jdbcType=DECIMAL}, #{allocationTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{costCenter,jdbcType=DECIMAL}, 
      #{allocationType,jdbcType=VARCHAR}, #{directiveIssuer,jdbcType=VARCHAR}, #{directiveTime,jdbcType=TIMESTAMP}, 
      #{identifyPeople,jdbcType=VARCHAR}, #{identifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.BadContainerAllocation">
    insert into prod_bad_container_allocation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodBadContainerAllocationId != null">
        prod_bad_container_allocation_id,
      </if>
      <if test="outCourse != null">
        out_course,
      </if>
      <if test="inCourse != null">
        in_course,
      </if>
      <if test="allocationNo != null">
        allocation_no,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="exitYard != null">
        exit_yard,
      </if>
      <if test="entryYard != null">
        entry_yard,
      </if>
      <if test="containerUser != null">
        container_user,
      </if>
      <if test="fleet != null">
        fleet,
      </if>
      <if test="plateNo != null">
        plate_no,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="allocationTime != null">
        allocation_time,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="costCenter != null">
        cost_center,
      </if>
      <if test="allocationType != null">
        allocation_type,
      </if>
      <if test="directiveIssuer != null">
        directive_issuer,
      </if>
      <if test="directiveTime != null">
        directive_time,
      </if>
      <if test="identifyPeople != null">
        identify_people,
      </if>
      <if test="identifyTime != null">
        identify_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodBadContainerAllocationId != null">
        #{prodBadContainerAllocationId,jdbcType=INTEGER},
      </if>
      <if test="outCourse != null">
        #{outCourse,jdbcType=VARCHAR},
      </if>
      <if test="inCourse != null">
        #{inCourse,jdbcType=VARCHAR},
      </if>
      <if test="allocationNo != null">
        #{allocationNo,jdbcType=VARCHAR},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="exitYard != null">
        #{exitYard,jdbcType=VARCHAR},
      </if>
      <if test="entryYard != null">
        #{entryYard,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="fleet != null">
        #{fleet,jdbcType=VARCHAR},
      </if>
      <if test="plateNo != null">
        #{plateNo,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="allocationTime != null">
        #{allocationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="costCenter != null">
        #{costCenter,jdbcType=DECIMAL},
      </if>
      <if test="allocationType != null">
        #{allocationType,jdbcType=VARCHAR},
      </if>
      <if test="directiveIssuer != null">
        #{directiveIssuer,jdbcType=VARCHAR},
      </if>
      <if test="directiveTime != null">
        #{directiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="identifyPeople != null">
        #{identifyPeople,jdbcType=VARCHAR},
      </if>
      <if test="identifyTime != null">
        #{identifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.BadContainerAllocationExample" resultType="java.lang.Long">
    select count(*) from prod_bad_container_allocation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_bad_container_allocation
    <set>
      <if test="record.prodBadContainerAllocationId != null">
        prod_bad_container_allocation_id = #{record.prodBadContainerAllocationId,jdbcType=INTEGER},
      </if>
      <if test="record.outCourse != null">
        out_course = #{record.outCourse,jdbcType=VARCHAR},
      </if>
      <if test="record.inCourse != null">
        in_course = #{record.inCourse,jdbcType=VARCHAR},
      </if>
      <if test="record.allocationNo != null">
        allocation_no = #{record.allocationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null">
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.exitYard != null">
        exit_yard = #{record.exitYard,jdbcType=VARCHAR},
      </if>
      <if test="record.entryYard != null">
        entry_yard = #{record.entryYard,jdbcType=VARCHAR},
      </if>
      <if test="record.containerUser != null">
        container_user = #{record.containerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.fleet != null">
        fleet = #{record.fleet,jdbcType=VARCHAR},
      </if>
      <if test="record.plateNo != null">
        plate_no = #{record.plateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.allocationTime != null">
        allocation_time = #{record.allocationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.costCenter != null">
        cost_center = #{record.costCenter,jdbcType=DECIMAL},
      </if>
      <if test="record.allocationType != null">
        allocation_type = #{record.allocationType,jdbcType=VARCHAR},
      </if>
      <if test="record.directiveIssuer != null">
        directive_issuer = #{record.directiveIssuer,jdbcType=VARCHAR},
      </if>
      <if test="record.directiveTime != null">
        directive_time = #{record.directiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.identifyPeople != null">
        identify_people = #{record.identifyPeople,jdbcType=VARCHAR},
      </if>
      <if test="record.identifyTime != null">
        identify_time = #{record.identifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_bad_container_allocation
    set prod_bad_container_allocation_id = #{record.prodBadContainerAllocationId,jdbcType=INTEGER},
      out_course = #{record.outCourse,jdbcType=VARCHAR},
      in_course = #{record.inCourse,jdbcType=VARCHAR},
      allocation_no = #{record.allocationNo,jdbcType=VARCHAR},
      course = #{record.course,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      exit_yard = #{record.exitYard,jdbcType=VARCHAR},
      entry_yard = #{record.entryYard,jdbcType=VARCHAR},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      fleet = #{record.fleet,jdbcType=VARCHAR},
      plate_no = #{record.plateNo,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=DECIMAL},
      allocation_time = #{record.allocationTime,jdbcType=TIMESTAMP},
      `state` = #{record.state,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      cost_center = #{record.costCenter,jdbcType=DECIMAL},
      allocation_type = #{record.allocationType,jdbcType=VARCHAR},
      directive_issuer = #{record.directiveIssuer,jdbcType=VARCHAR},
      directive_time = #{record.directiveTime,jdbcType=TIMESTAMP},
      identify_people = #{record.identifyPeople,jdbcType=VARCHAR},
      identify_time = #{record.identifyTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.BadContainerAllocation">
    update prod_bad_container_allocation
    <set>
      <if test="outCourse != null">
        out_course = #{outCourse,jdbcType=VARCHAR},
      </if>
      <if test="inCourse != null">
        in_course = #{inCourse,jdbcType=VARCHAR},
      </if>
      <if test="allocationNo != null">
        allocation_no = #{allocationNo,jdbcType=VARCHAR},
      </if>
      <if test="course != null">
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="exitYard != null">
        exit_yard = #{exitYard,jdbcType=VARCHAR},
      </if>
      <if test="entryYard != null">
        entry_yard = #{entryYard,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        container_user = #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="fleet != null">
        fleet = #{fleet,jdbcType=VARCHAR},
      </if>
      <if test="plateNo != null">
        plate_no = #{plateNo,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="allocationTime != null">
        allocation_time = #{allocationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="costCenter != null">
        cost_center = #{costCenter,jdbcType=DECIMAL},
      </if>
      <if test="allocationType != null">
        allocation_type = #{allocationType,jdbcType=VARCHAR},
      </if>
      <if test="directiveIssuer != null">
        directive_issuer = #{directiveIssuer,jdbcType=VARCHAR},
      </if>
      <if test="directiveTime != null">
        directive_time = #{directiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="identifyPeople != null">
        identify_people = #{identifyPeople,jdbcType=VARCHAR},
      </if>
      <if test="identifyTime != null">
        identify_time = #{identifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where prod_bad_container_allocation_id = #{prodBadContainerAllocationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.BadContainerAllocation">
    update prod_bad_container_allocation
    set out_course = #{outCourse,jdbcType=VARCHAR},
      in_course = #{inCourse,jdbcType=VARCHAR},
      allocation_no = #{allocationNo,jdbcType=VARCHAR},
      course = #{course,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      exit_yard = #{exitYard,jdbcType=VARCHAR},
      entry_yard = #{entryYard,jdbcType=VARCHAR},
      container_user = #{containerUser,jdbcType=VARCHAR},
      fleet = #{fleet,jdbcType=VARCHAR},
      plate_no = #{plateNo,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DECIMAL},
      allocation_time = #{allocationTime,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      cost_center = #{costCenter,jdbcType=DECIMAL},
      allocation_type = #{allocationType,jdbcType=VARCHAR},
      directive_issuer = #{directiveIssuer,jdbcType=VARCHAR},
      directive_time = #{directiveTime,jdbcType=TIMESTAMP},
      identify_people = #{identifyPeople,jdbcType=VARCHAR},
      identify_time = #{identifyTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER}
    where prod_bad_container_allocation_id = #{prodBadContainerAllocationId,jdbcType=INTEGER}
  </update>
</mapper>
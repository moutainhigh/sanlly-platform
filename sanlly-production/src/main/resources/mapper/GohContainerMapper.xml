<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.GohContainerMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.GohContainer">
    <id column="prod_goh_container_id" jdbcType="INTEGER" property="prodGohContainerId" />
    <result column="course" jdbcType="VARCHAR" property="course" />
    <result column="goh_cont_require" jdbcType="INTEGER" property="gohContRequire" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="container_user" jdbcType="VARCHAR" property="containerUser" />
    <result column="yard" jdbcType="VARCHAR" property="yard" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="before_container_type" jdbcType="VARCHAR" property="beforeContainerType" />
    <result column="after_container_type" jdbcType="VARCHAR" property="afterContainerType" />
    <result column="structure" jdbcType="VARCHAR" property="structure" />
    <result column="tier_number" jdbcType="VARCHAR" property="tierNumber" />
    <result column="reshape_type" jdbcType="VARCHAR" property="reshapeType" />
    <result column="sum_beam_number" jdbcType="DOUBLE" property="sumBeamNumber" />
    <result column="lose_beam_number" jdbcType="DOUBLE" property="loseBeamNumber" />
    <result column="horizontal_distance" jdbcType="DOUBLE" property="horizontalDistance" />
    <result column="updown_distance" jdbcType="DOUBLE" property="updownDistance" />
    <result column="is_goh" jdbcType="VARCHAR" property="isGoh" />
    <result column="is_entry" jdbcType="VARCHAR" property="isEntry" />
    <result column="container_weight" jdbcType="VARCHAR" property="containerWeight" />
    <result column="material_weight" jdbcType="DOUBLE" property="materialWeight" />
    <result column="testing_state" jdbcType="VARCHAR" property="testingState" />
    <result column="referral_state" jdbcType="VARCHAR" property="referralState" />
    <result column="picking_state" jdbcType="VARCHAR" property="pickingState" />
    <result column="container_cost" jdbcType="DECIMAL" property="containerCost" />
    <result column="third_party_cost" jdbcType="DECIMAL" property="thirdPartyCost" />
    <result column="sum_cost" jdbcType="DECIMAL" property="sumCost" />
    <result column="labor_cost" jdbcType="DECIMAL" property="laborCost" />
    <result column="man_hour" jdbcType="DOUBLE" property="manHour" />
    <result column="vessel_voyage" jdbcType="VARCHAR" property="vesselVoyage" />
    <result column="bill_of_lading_no" jdbcType="VARCHAR" property="billOfLadingNo" />
    <result column="destination_port" jdbcType="VARCHAR" property="destinationPort" />
    <result column="extract_cont_time" jdbcType="TIMESTAMP" property="extractContTime" />
    <result column="audit_user" jdbcType="INTEGER" property="auditUser" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_goh_container_id, course, goh_cont_require, container_no, container_user, yard, 
    `size`, before_container_type, after_container_type, `structure`, tier_number, reshape_type, 
    sum_beam_number, lose_beam_number, horizontal_distance, updown_distance, is_goh, 
    is_entry, container_weight, material_weight, testing_state, referral_state, picking_state, 
    container_cost, third_party_cost, sum_cost, labor_cost, man_hour, vessel_voyage, 
    bill_of_lading_no, destination_port, extract_cont_time, audit_user, audit_time, remarks, 
    create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.GohContainerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_goh_container
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_goh_container
    where prod_goh_container_id = #{prodGohContainerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_goh_container
    where prod_goh_container_id = #{prodGohContainerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.GohContainerExample">
    delete from prod_goh_container
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.GohContainer">
    insert into prod_goh_container (prod_goh_container_id, course, goh_cont_require, 
      container_no, container_user, yard, 
      `size`, before_container_type, after_container_type, 
      `structure`, tier_number, reshape_type, 
      sum_beam_number, lose_beam_number, horizontal_distance, 
      updown_distance, is_goh, is_entry, 
      container_weight, material_weight, testing_state, 
      referral_state, picking_state, container_cost, 
      third_party_cost, sum_cost, labor_cost, 
      man_hour, vessel_voyage, bill_of_lading_no, 
      destination_port, extract_cont_time, audit_user, 
      audit_time, remarks, create_time, 
      create_user, update_time, update_user
      )
    values (#{prodGohContainerId,jdbcType=INTEGER}, #{course,jdbcType=VARCHAR}, #{gohContRequire,jdbcType=INTEGER}, 
      #{containerNo,jdbcType=VARCHAR}, #{containerUser,jdbcType=VARCHAR}, #{yard,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{beforeContainerType,jdbcType=VARCHAR}, #{afterContainerType,jdbcType=VARCHAR}, 
      #{structure,jdbcType=VARCHAR}, #{tierNumber,jdbcType=VARCHAR}, #{reshapeType,jdbcType=VARCHAR}, 
      #{sumBeamNumber,jdbcType=DOUBLE}, #{loseBeamNumber,jdbcType=DOUBLE}, #{horizontalDistance,jdbcType=DOUBLE}, 
      #{updownDistance,jdbcType=DOUBLE}, #{isGoh,jdbcType=VARCHAR}, #{isEntry,jdbcType=VARCHAR}, 
      #{containerWeight,jdbcType=VARCHAR}, #{materialWeight,jdbcType=DOUBLE}, #{testingState,jdbcType=VARCHAR}, 
      #{referralState,jdbcType=VARCHAR}, #{pickingState,jdbcType=VARCHAR}, #{containerCost,jdbcType=DECIMAL}, 
      #{thirdPartyCost,jdbcType=DECIMAL}, #{sumCost,jdbcType=DECIMAL}, #{laborCost,jdbcType=DECIMAL}, 
      #{manHour,jdbcType=DOUBLE}, #{vesselVoyage,jdbcType=VARCHAR}, #{billOfLadingNo,jdbcType=VARCHAR}, 
      #{destinationPort,jdbcType=VARCHAR}, #{extractContTime,jdbcType=TIMESTAMP}, #{auditUser,jdbcType=INTEGER}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.GohContainer">
    insert into prod_goh_container
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodGohContainerId != null">
        prod_goh_container_id,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="gohContRequire != null">
        goh_cont_require,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="containerUser != null">
        container_user,
      </if>
      <if test="yard != null">
        yard,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="beforeContainerType != null">
        before_container_type,
      </if>
      <if test="afterContainerType != null">
        after_container_type,
      </if>
      <if test="structure != null">
        `structure`,
      </if>
      <if test="tierNumber != null">
        tier_number,
      </if>
      <if test="reshapeType != null">
        reshape_type,
      </if>
      <if test="sumBeamNumber != null">
        sum_beam_number,
      </if>
      <if test="loseBeamNumber != null">
        lose_beam_number,
      </if>
      <if test="horizontalDistance != null">
        horizontal_distance,
      </if>
      <if test="updownDistance != null">
        updown_distance,
      </if>
      <if test="isGoh != null">
        is_goh,
      </if>
      <if test="isEntry != null">
        is_entry,
      </if>
      <if test="containerWeight != null">
        container_weight,
      </if>
      <if test="materialWeight != null">
        material_weight,
      </if>
      <if test="testingState != null">
        testing_state,
      </if>
      <if test="referralState != null">
        referral_state,
      </if>
      <if test="pickingState != null">
        picking_state,
      </if>
      <if test="containerCost != null">
        container_cost,
      </if>
      <if test="thirdPartyCost != null">
        third_party_cost,
      </if>
      <if test="sumCost != null">
        sum_cost,
      </if>
      <if test="laborCost != null">
        labor_cost,
      </if>
      <if test="manHour != null">
        man_hour,
      </if>
      <if test="vesselVoyage != null">
        vessel_voyage,
      </if>
      <if test="billOfLadingNo != null">
        bill_of_lading_no,
      </if>
      <if test="destinationPort != null">
        destination_port,
      </if>
      <if test="extractContTime != null">
        extract_cont_time,
      </if>
      <if test="auditUser != null">
        audit_user,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodGohContainerId != null">
        #{prodGohContainerId,jdbcType=INTEGER},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="gohContRequire != null">
        #{gohContRequire,jdbcType=INTEGER},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        #{yard,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="beforeContainerType != null">
        #{beforeContainerType,jdbcType=VARCHAR},
      </if>
      <if test="afterContainerType != null">
        #{afterContainerType,jdbcType=VARCHAR},
      </if>
      <if test="structure != null">
        #{structure,jdbcType=VARCHAR},
      </if>
      <if test="tierNumber != null">
        #{tierNumber,jdbcType=VARCHAR},
      </if>
      <if test="reshapeType != null">
        #{reshapeType,jdbcType=VARCHAR},
      </if>
      <if test="sumBeamNumber != null">
        #{sumBeamNumber,jdbcType=DOUBLE},
      </if>
      <if test="loseBeamNumber != null">
        #{loseBeamNumber,jdbcType=DOUBLE},
      </if>
      <if test="horizontalDistance != null">
        #{horizontalDistance,jdbcType=DOUBLE},
      </if>
      <if test="updownDistance != null">
        #{updownDistance,jdbcType=DOUBLE},
      </if>
      <if test="isGoh != null">
        #{isGoh,jdbcType=VARCHAR},
      </if>
      <if test="isEntry != null">
        #{isEntry,jdbcType=VARCHAR},
      </if>
      <if test="containerWeight != null">
        #{containerWeight,jdbcType=VARCHAR},
      </if>
      <if test="materialWeight != null">
        #{materialWeight,jdbcType=DOUBLE},
      </if>
      <if test="testingState != null">
        #{testingState,jdbcType=VARCHAR},
      </if>
      <if test="referralState != null">
        #{referralState,jdbcType=VARCHAR},
      </if>
      <if test="pickingState != null">
        #{pickingState,jdbcType=VARCHAR},
      </if>
      <if test="containerCost != null">
        #{containerCost,jdbcType=DECIMAL},
      </if>
      <if test="thirdPartyCost != null">
        #{thirdPartyCost,jdbcType=DECIMAL},
      </if>
      <if test="sumCost != null">
        #{sumCost,jdbcType=DECIMAL},
      </if>
      <if test="laborCost != null">
        #{laborCost,jdbcType=DECIMAL},
      </if>
      <if test="manHour != null">
        #{manHour,jdbcType=DOUBLE},
      </if>
      <if test="vesselVoyage != null">
        #{vesselVoyage,jdbcType=VARCHAR},
      </if>
      <if test="billOfLadingNo != null">
        #{billOfLadingNo,jdbcType=VARCHAR},
      </if>
      <if test="destinationPort != null">
        #{destinationPort,jdbcType=VARCHAR},
      </if>
      <if test="extractContTime != null">
        #{extractContTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditUser != null">
        #{auditUser,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.GohContainerExample" resultType="java.lang.Long">
    select count(*) from prod_goh_container
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_goh_container
    <set>
      <if test="record.prodGohContainerId != null">
        prod_goh_container_id = #{record.prodGohContainerId,jdbcType=INTEGER},
      </if>
      <if test="record.course != null">
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.gohContRequire != null">
        goh_cont_require = #{record.gohContRequire,jdbcType=INTEGER},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.containerUser != null">
        container_user = #{record.containerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.yard != null">
        yard = #{record.yard,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        `size` = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeContainerType != null">
        before_container_type = #{record.beforeContainerType,jdbcType=VARCHAR},
      </if>
      <if test="record.afterContainerType != null">
        after_container_type = #{record.afterContainerType,jdbcType=VARCHAR},
      </if>
      <if test="record.structure != null">
        `structure` = #{record.structure,jdbcType=VARCHAR},
      </if>
      <if test="record.tierNumber != null">
        tier_number = #{record.tierNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.reshapeType != null">
        reshape_type = #{record.reshapeType,jdbcType=VARCHAR},
      </if>
      <if test="record.sumBeamNumber != null">
        sum_beam_number = #{record.sumBeamNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.loseBeamNumber != null">
        lose_beam_number = #{record.loseBeamNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.horizontalDistance != null">
        horizontal_distance = #{record.horizontalDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.updownDistance != null">
        updown_distance = #{record.updownDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.isGoh != null">
        is_goh = #{record.isGoh,jdbcType=VARCHAR},
      </if>
      <if test="record.isEntry != null">
        is_entry = #{record.isEntry,jdbcType=VARCHAR},
      </if>
      <if test="record.containerWeight != null">
        container_weight = #{record.containerWeight,jdbcType=VARCHAR},
      </if>
      <if test="record.materialWeight != null">
        material_weight = #{record.materialWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.testingState != null">
        testing_state = #{record.testingState,jdbcType=VARCHAR},
      </if>
      <if test="record.referralState != null">
        referral_state = #{record.referralState,jdbcType=VARCHAR},
      </if>
      <if test="record.pickingState != null">
        picking_state = #{record.pickingState,jdbcType=VARCHAR},
      </if>
      <if test="record.containerCost != null">
        container_cost = #{record.containerCost,jdbcType=DECIMAL},
      </if>
      <if test="record.thirdPartyCost != null">
        third_party_cost = #{record.thirdPartyCost,jdbcType=DECIMAL},
      </if>
      <if test="record.sumCost != null">
        sum_cost = #{record.sumCost,jdbcType=DECIMAL},
      </if>
      <if test="record.laborCost != null">
        labor_cost = #{record.laborCost,jdbcType=DECIMAL},
      </if>
      <if test="record.manHour != null">
        man_hour = #{record.manHour,jdbcType=DOUBLE},
      </if>
      <if test="record.vesselVoyage != null">
        vessel_voyage = #{record.vesselVoyage,jdbcType=VARCHAR},
      </if>
      <if test="record.billOfLadingNo != null">
        bill_of_lading_no = #{record.billOfLadingNo,jdbcType=VARCHAR},
      </if>
      <if test="record.destinationPort != null">
        destination_port = #{record.destinationPort,jdbcType=VARCHAR},
      </if>
      <if test="record.extractContTime != null">
        extract_cont_time = #{record.extractContTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditUser != null">
        audit_user = #{record.auditUser,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_goh_container
    set prod_goh_container_id = #{record.prodGohContainerId,jdbcType=INTEGER},
      course = #{record.course,jdbcType=VARCHAR},
      goh_cont_require = #{record.gohContRequire,jdbcType=INTEGER},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      yard = #{record.yard,jdbcType=VARCHAR},
      `size` = #{record.size,jdbcType=VARCHAR},
      before_container_type = #{record.beforeContainerType,jdbcType=VARCHAR},
      after_container_type = #{record.afterContainerType,jdbcType=VARCHAR},
      `structure` = #{record.structure,jdbcType=VARCHAR},
      tier_number = #{record.tierNumber,jdbcType=VARCHAR},
      reshape_type = #{record.reshapeType,jdbcType=VARCHAR},
      sum_beam_number = #{record.sumBeamNumber,jdbcType=DOUBLE},
      lose_beam_number = #{record.loseBeamNumber,jdbcType=DOUBLE},
      horizontal_distance = #{record.horizontalDistance,jdbcType=DOUBLE},
      updown_distance = #{record.updownDistance,jdbcType=DOUBLE},
      is_goh = #{record.isGoh,jdbcType=VARCHAR},
      is_entry = #{record.isEntry,jdbcType=VARCHAR},
      container_weight = #{record.containerWeight,jdbcType=VARCHAR},
      material_weight = #{record.materialWeight,jdbcType=DOUBLE},
      testing_state = #{record.testingState,jdbcType=VARCHAR},
      referral_state = #{record.referralState,jdbcType=VARCHAR},
      picking_state = #{record.pickingState,jdbcType=VARCHAR},
      container_cost = #{record.containerCost,jdbcType=DECIMAL},
      third_party_cost = #{record.thirdPartyCost,jdbcType=DECIMAL},
      sum_cost = #{record.sumCost,jdbcType=DECIMAL},
      labor_cost = #{record.laborCost,jdbcType=DECIMAL},
      man_hour = #{record.manHour,jdbcType=DOUBLE},
      vessel_voyage = #{record.vesselVoyage,jdbcType=VARCHAR},
      bill_of_lading_no = #{record.billOfLadingNo,jdbcType=VARCHAR},
      destination_port = #{record.destinationPort,jdbcType=VARCHAR},
      extract_cont_time = #{record.extractContTime,jdbcType=TIMESTAMP},
      audit_user = #{record.auditUser,jdbcType=INTEGER},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.GohContainer">
    update prod_goh_container
    <set>
      <if test="course != null">
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="gohContRequire != null">
        goh_cont_require = #{gohContRequire,jdbcType=INTEGER},
      </if>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        container_user = #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        yard = #{yard,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=VARCHAR},
      </if>
      <if test="beforeContainerType != null">
        before_container_type = #{beforeContainerType,jdbcType=VARCHAR},
      </if>
      <if test="afterContainerType != null">
        after_container_type = #{afterContainerType,jdbcType=VARCHAR},
      </if>
      <if test="structure != null">
        `structure` = #{structure,jdbcType=VARCHAR},
      </if>
      <if test="tierNumber != null">
        tier_number = #{tierNumber,jdbcType=VARCHAR},
      </if>
      <if test="reshapeType != null">
        reshape_type = #{reshapeType,jdbcType=VARCHAR},
      </if>
      <if test="sumBeamNumber != null">
        sum_beam_number = #{sumBeamNumber,jdbcType=DOUBLE},
      </if>
      <if test="loseBeamNumber != null">
        lose_beam_number = #{loseBeamNumber,jdbcType=DOUBLE},
      </if>
      <if test="horizontalDistance != null">
        horizontal_distance = #{horizontalDistance,jdbcType=DOUBLE},
      </if>
      <if test="updownDistance != null">
        updown_distance = #{updownDistance,jdbcType=DOUBLE},
      </if>
      <if test="isGoh != null">
        is_goh = #{isGoh,jdbcType=VARCHAR},
      </if>
      <if test="isEntry != null">
        is_entry = #{isEntry,jdbcType=VARCHAR},
      </if>
      <if test="containerWeight != null">
        container_weight = #{containerWeight,jdbcType=VARCHAR},
      </if>
      <if test="materialWeight != null">
        material_weight = #{materialWeight,jdbcType=DOUBLE},
      </if>
      <if test="testingState != null">
        testing_state = #{testingState,jdbcType=VARCHAR},
      </if>
      <if test="referralState != null">
        referral_state = #{referralState,jdbcType=VARCHAR},
      </if>
      <if test="pickingState != null">
        picking_state = #{pickingState,jdbcType=VARCHAR},
      </if>
      <if test="containerCost != null">
        container_cost = #{containerCost,jdbcType=DECIMAL},
      </if>
      <if test="thirdPartyCost != null">
        third_party_cost = #{thirdPartyCost,jdbcType=DECIMAL},
      </if>
      <if test="sumCost != null">
        sum_cost = #{sumCost,jdbcType=DECIMAL},
      </if>
      <if test="laborCost != null">
        labor_cost = #{laborCost,jdbcType=DECIMAL},
      </if>
      <if test="manHour != null">
        man_hour = #{manHour,jdbcType=DOUBLE},
      </if>
      <if test="vesselVoyage != null">
        vessel_voyage = #{vesselVoyage,jdbcType=VARCHAR},
      </if>
      <if test="billOfLadingNo != null">
        bill_of_lading_no = #{billOfLadingNo,jdbcType=VARCHAR},
      </if>
      <if test="destinationPort != null">
        destination_port = #{destinationPort,jdbcType=VARCHAR},
      </if>
      <if test="extractContTime != null">
        extract_cont_time = #{extractContTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditUser != null">
        audit_user = #{auditUser,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where prod_goh_container_id = #{prodGohContainerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.GohContainer">
    update prod_goh_container
    set course = #{course,jdbcType=VARCHAR},
      goh_cont_require = #{gohContRequire,jdbcType=INTEGER},
      container_no = #{containerNo,jdbcType=VARCHAR},
      container_user = #{containerUser,jdbcType=VARCHAR},
      yard = #{yard,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=VARCHAR},
      before_container_type = #{beforeContainerType,jdbcType=VARCHAR},
      after_container_type = #{afterContainerType,jdbcType=VARCHAR},
      `structure` = #{structure,jdbcType=VARCHAR},
      tier_number = #{tierNumber,jdbcType=VARCHAR},
      reshape_type = #{reshapeType,jdbcType=VARCHAR},
      sum_beam_number = #{sumBeamNumber,jdbcType=DOUBLE},
      lose_beam_number = #{loseBeamNumber,jdbcType=DOUBLE},
      horizontal_distance = #{horizontalDistance,jdbcType=DOUBLE},
      updown_distance = #{updownDistance,jdbcType=DOUBLE},
      is_goh = #{isGoh,jdbcType=VARCHAR},
      is_entry = #{isEntry,jdbcType=VARCHAR},
      container_weight = #{containerWeight,jdbcType=VARCHAR},
      material_weight = #{materialWeight,jdbcType=DOUBLE},
      testing_state = #{testingState,jdbcType=VARCHAR},
      referral_state = #{referralState,jdbcType=VARCHAR},
      picking_state = #{pickingState,jdbcType=VARCHAR},
      container_cost = #{containerCost,jdbcType=DECIMAL},
      third_party_cost = #{thirdPartyCost,jdbcType=DECIMAL},
      sum_cost = #{sumCost,jdbcType=DECIMAL},
      labor_cost = #{laborCost,jdbcType=DECIMAL},
      man_hour = #{manHour,jdbcType=DOUBLE},
      vessel_voyage = #{vesselVoyage,jdbcType=VARCHAR},
      bill_of_lading_no = #{billOfLadingNo,jdbcType=VARCHAR},
      destination_port = #{destinationPort,jdbcType=VARCHAR},
      extract_cont_time = #{extractContTime,jdbcType=TIMESTAMP},
      audit_user = #{auditUser,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where prod_goh_container_id = #{prodGohContainerId,jdbcType=INTEGER}
  </update>
</mapper>
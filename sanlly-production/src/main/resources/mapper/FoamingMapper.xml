<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.FoamingMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.Foaming">
    <id column="prod_foaming_id" jdbcType="INTEGER" property="prodFoamingId" />
    <result column="course" jdbcType="VARCHAR" property="course" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="foaming_time" jdbcType="TIMESTAMP" property="foamingTime" />
    <result column="foaming_user" jdbcType="INTEGER" property="foamingUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sanlly.production.entity.Foaming">
    <result column="photo" jdbcType="LONGVARCHAR" property="photo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_foaming_id, course, container_no, `state`, foaming_time, foaming_user, remarks, 
    create_time, create_user, update_time, update_user
  </sql>
  <sql id="Blob_Column_List">
    photo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sanlly.production.entity.FoamingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_foaming
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.FoamingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_foaming
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_foaming
    where prod_foaming_id = #{prodFoamingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_foaming
    where prod_foaming_id = #{prodFoamingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.FoamingExample">
    delete from prod_foaming
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.Foaming">
    insert into prod_foaming (prod_foaming_id, course, container_no, 
      `state`, foaming_time, foaming_user, 
      remarks, create_time, create_user, 
      update_time, update_user, photo
      )
    values (#{prodFoamingId,jdbcType=INTEGER}, #{course,jdbcType=VARCHAR}, #{containerNo,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{foamingTime,jdbcType=TIMESTAMP}, #{foamingUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{photo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.Foaming">
    insert into prod_foaming
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodFoamingId != null">
        prod_foaming_id,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="foamingTime != null">
        foaming_time,
      </if>
      <if test="foamingUser != null">
        foaming_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodFoamingId != null">
        #{prodFoamingId,jdbcType=INTEGER},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="foamingTime != null">
        #{foamingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="foamingUser != null">
        #{foamingUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.FoamingExample" resultType="java.lang.Long">
    select count(*) from prod_foaming
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_foaming
    <set>
      <if test="record.prodFoamingId != null">
        prod_foaming_id = #{record.prodFoamingId,jdbcType=INTEGER},
      </if>
      <if test="record.course != null">
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.foamingTime != null">
        foaming_time = #{record.foamingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.foamingUser != null">
        foaming_user = #{record.foamingUser,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update prod_foaming
    set prod_foaming_id = #{record.prodFoamingId,jdbcType=INTEGER},
      course = #{record.course,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=VARCHAR},
      foaming_time = #{record.foamingTime,jdbcType=TIMESTAMP},
      foaming_user = #{record.foamingUser,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_foaming
    set prod_foaming_id = #{record.prodFoamingId,jdbcType=INTEGER},
      course = #{record.course,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=VARCHAR},
      foaming_time = #{record.foamingTime,jdbcType=TIMESTAMP},
      foaming_user = #{record.foamingUser,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.Foaming">
    update prod_foaming
    <set>
      <if test="course != null">
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="foamingTime != null">
        foaming_time = #{foamingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="foamingUser != null">
        foaming_user = #{foamingUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where prod_foaming_id = #{prodFoamingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sanlly.production.entity.Foaming">
    update prod_foaming
    set course = #{course,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      foaming_time = #{foamingTime,jdbcType=TIMESTAMP},
      foaming_user = #{foamingUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      photo = #{photo,jdbcType=LONGVARCHAR}
    where prod_foaming_id = #{prodFoamingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.Foaming">
    update prod_foaming
    set course = #{course,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      foaming_time = #{foamingTime,jdbcType=TIMESTAMP},
      foaming_user = #{foamingUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where prod_foaming_id = #{prodFoamingId,jdbcType=INTEGER}
  </update>
</mapper>
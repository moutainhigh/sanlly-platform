<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.ChargeMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.Charge">
    <id column="prod_charge_id" jdbcType="INTEGER" property="prodChargeId" />
    <result column="prod_charge_code" jdbcType="VARCHAR" property="prodChargeCode" />
    <result column="course" jdbcType="VARCHAR" property="course" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="container_type" jdbcType="VARCHAR" property="containerType" />
    <result column="container_category" jdbcType="VARCHAR" property="containerCategory" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="container_user" jdbcType="VARCHAR" property="containerUser" />
    <result column="yard" jdbcType="VARCHAR" property="yard" />
    <result column="course_time" jdbcType="TIMESTAMP" property="courseTime" />
    <result column="course_type" jdbcType="VARCHAR" property="courseType" />
    <result column="charge_type" jdbcType="VARCHAR" property="chargeType" />
    <result column="deposit_money" jdbcType="DECIMAL" property="depositMoney" />
    <result column="received_money" jdbcType="DECIMAL" property="receivedMoney" />
    <result column="should_back_money" jdbcType="DECIMAL" property="shouldBackMoney" />
    <result column="actual_back_money" jdbcType="DECIMAL" property="actualBackMoney" />
    <result column="payment_type" jdbcType="VARCHAR" property="paymentType" />
    <result column="is_back_spread" jdbcType="VARCHAR" property="isBackSpread" />
    <result column="charge_user" jdbcType="INTEGER" property="chargeUser" />
    <result column="charge_time" jdbcType="TIMESTAMP" property="chargeTime" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="tax_iden_no" jdbcType="VARCHAR" property="taxIdenNo" />
    <result column="company_address" jdbcType="VARCHAR" property="companyAddress" />
    <result column="company_phone" jdbcType="VARCHAR" property="companyPhone" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="refund_bank_name" jdbcType="VARCHAR" property="refundBankName" />
    <result column="refund_bank_account" jdbcType="VARCHAR" property="refundBankAccount" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="invoice_remarks" jdbcType="VARCHAR" property="invoiceRemarks" />
    <result column="signature_pic" jdbcType="VARCHAR" property="signaturePic" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="charge_state" jdbcType="VARCHAR" property="chargeState" />
    <result column="allinpay_trxid" jdbcType="VARCHAR" property="allinpayTrxid" />
    <result column="pay_invoice" jdbcType="VARCHAR" property="payInvoice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_charge_id, prod_charge_code, course, container_no, container_type, container_category, 
    `size`, container_user, yard, course_time, course_type, charge_type, deposit_money, 
    received_money, should_back_money, actual_back_money, payment_type, is_back_spread, 
    charge_user, charge_time, company_name, tax_iden_no, company_address, company_phone, 
    bank_name, bank_account, refund_bank_name, refund_bank_account, account_name, invoice_remarks, 
    signature_pic, create_time, create_user, update_time, update_user, charge_state, 
    allinpay_trxid, pay_invoice
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.ChargeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_charge
    where prod_charge_id = #{prodChargeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_charge
    where prod_charge_id = #{prodChargeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.ChargeExample">
    delete from prod_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.Charge">
    insert into prod_charge (prod_charge_id, prod_charge_code, course, 
      container_no, container_type, container_category, 
      `size`, container_user, yard, 
      course_time, course_type, charge_type, 
      deposit_money, received_money, should_back_money, 
      actual_back_money, payment_type, is_back_spread, 
      charge_user, charge_time, company_name, 
      tax_iden_no, company_address, company_phone, 
      bank_name, bank_account, refund_bank_name, 
      refund_bank_account, account_name, invoice_remarks, 
      signature_pic, create_time, create_user, 
      update_time, update_user, charge_state, 
      allinpay_trxid, pay_invoice)
    values (#{prodChargeId,jdbcType=INTEGER}, #{prodChargeCode,jdbcType=VARCHAR}, #{course,jdbcType=VARCHAR}, 
      #{containerNo,jdbcType=VARCHAR}, #{containerType,jdbcType=VARCHAR}, #{containerCategory,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{containerUser,jdbcType=VARCHAR}, #{yard,jdbcType=VARCHAR}, 
      #{courseTime,jdbcType=TIMESTAMP}, #{courseType,jdbcType=VARCHAR}, #{chargeType,jdbcType=VARCHAR}, 
      #{depositMoney,jdbcType=DECIMAL}, #{receivedMoney,jdbcType=DECIMAL}, #{shouldBackMoney,jdbcType=DECIMAL}, 
      #{actualBackMoney,jdbcType=DECIMAL}, #{paymentType,jdbcType=VARCHAR}, #{isBackSpread,jdbcType=VARCHAR}, 
      #{chargeUser,jdbcType=INTEGER}, #{chargeTime,jdbcType=TIMESTAMP}, #{companyName,jdbcType=VARCHAR}, 
      #{taxIdenNo,jdbcType=VARCHAR}, #{companyAddress,jdbcType=VARCHAR}, #{companyPhone,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{refundBankName,jdbcType=VARCHAR}, 
      #{refundBankAccount,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{invoiceRemarks,jdbcType=VARCHAR}, 
      #{signaturePic,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{chargeState,jdbcType=VARCHAR}, 
      #{allinpayTrxid,jdbcType=VARCHAR}, #{payInvoice,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.Charge">
    insert into prod_charge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodChargeId != null">
        prod_charge_id,
      </if>
      <if test="prodChargeCode != null">
        prod_charge_code,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="containerType != null">
        container_type,
      </if>
      <if test="containerCategory != null">
        container_category,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="containerUser != null">
        container_user,
      </if>
      <if test="yard != null">
        yard,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="chargeType != null">
        charge_type,
      </if>
      <if test="depositMoney != null">
        deposit_money,
      </if>
      <if test="receivedMoney != null">
        received_money,
      </if>
      <if test="shouldBackMoney != null">
        should_back_money,
      </if>
      <if test="actualBackMoney != null">
        actual_back_money,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="isBackSpread != null">
        is_back_spread,
      </if>
      <if test="chargeUser != null">
        charge_user,
      </if>
      <if test="chargeTime != null">
        charge_time,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="taxIdenNo != null">
        tax_iden_no,
      </if>
      <if test="companyAddress != null">
        company_address,
      </if>
      <if test="companyPhone != null">
        company_phone,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="refundBankName != null">
        refund_bank_name,
      </if>
      <if test="refundBankAccount != null">
        refund_bank_account,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="invoiceRemarks != null">
        invoice_remarks,
      </if>
      <if test="signaturePic != null">
        signature_pic,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="chargeState != null">
        charge_state,
      </if>
      <if test="allinpayTrxid != null">
        allinpay_trxid,
      </if>
      <if test="payInvoice != null">
        pay_invoice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodChargeId != null">
        #{prodChargeId,jdbcType=INTEGER},
      </if>
      <if test="prodChargeCode != null">
        #{prodChargeCode,jdbcType=VARCHAR},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="containerCategory != null">
        #{containerCategory,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        #{yard,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="chargeType != null">
        #{chargeType,jdbcType=VARCHAR},
      </if>
      <if test="depositMoney != null">
        #{depositMoney,jdbcType=DECIMAL},
      </if>
      <if test="receivedMoney != null">
        #{receivedMoney,jdbcType=DECIMAL},
      </if>
      <if test="shouldBackMoney != null">
        #{shouldBackMoney,jdbcType=DECIMAL},
      </if>
      <if test="actualBackMoney != null">
        #{actualBackMoney,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="isBackSpread != null">
        #{isBackSpread,jdbcType=VARCHAR},
      </if>
      <if test="chargeUser != null">
        #{chargeUser,jdbcType=INTEGER},
      </if>
      <if test="chargeTime != null">
        #{chargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="taxIdenNo != null">
        #{taxIdenNo,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null">
        #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="refundBankName != null">
        #{refundBankName,jdbcType=VARCHAR},
      </if>
      <if test="refundBankAccount != null">
        #{refundBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="invoiceRemarks != null">
        #{invoiceRemarks,jdbcType=VARCHAR},
      </if>
      <if test="signaturePic != null">
        #{signaturePic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="chargeState != null">
        #{chargeState,jdbcType=VARCHAR},
      </if>
      <if test="allinpayTrxid != null">
        #{allinpayTrxid,jdbcType=VARCHAR},
      </if>
      <if test="payInvoice != null">
        #{payInvoice,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.ChargeExample" resultType="java.lang.Long">
    select count(*) from prod_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_charge
    <set>
      <if test="record.prodChargeId != null">
        prod_charge_id = #{record.prodChargeId,jdbcType=INTEGER},
      </if>
      <if test="record.prodChargeCode != null">
        prod_charge_code = #{record.prodChargeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null">
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.containerType != null">
        container_type = #{record.containerType,jdbcType=VARCHAR},
      </if>
      <if test="record.containerCategory != null">
        container_category = #{record.containerCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        `size` = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.containerUser != null">
        container_user = #{record.containerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.yard != null">
        yard = #{record.yard,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTime != null">
        course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeType != null">
        charge_type = #{record.chargeType,jdbcType=VARCHAR},
      </if>
      <if test="record.depositMoney != null">
        deposit_money = #{record.depositMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.receivedMoney != null">
        received_money = #{record.receivedMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.shouldBackMoney != null">
        should_back_money = #{record.shouldBackMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.actualBackMoney != null">
        actual_back_money = #{record.actualBackMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.isBackSpread != null">
        is_back_spread = #{record.isBackSpread,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeUser != null">
        charge_user = #{record.chargeUser,jdbcType=INTEGER},
      </if>
      <if test="record.chargeTime != null">
        charge_time = #{record.chargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.taxIdenNo != null">
        tax_iden_no = #{record.taxIdenNo,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddress != null">
        company_address = #{record.companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.companyPhone != null">
        company_phone = #{record.companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.refundBankName != null">
        refund_bank_name = #{record.refundBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.refundBankAccount != null">
        refund_bank_account = #{record.refundBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceRemarks != null">
        invoice_remarks = #{record.invoiceRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.signaturePic != null">
        signature_pic = #{record.signaturePic,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.chargeState != null">
        charge_state = #{record.chargeState,jdbcType=VARCHAR},
      </if>
      <if test="record.allinpayTrxid != null">
        allinpay_trxid = #{record.allinpayTrxid,jdbcType=VARCHAR},
      </if>
      <if test="record.payInvoice != null">
        pay_invoice = #{record.payInvoice,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_charge
    set prod_charge_id = #{record.prodChargeId,jdbcType=INTEGER},
      prod_charge_code = #{record.prodChargeCode,jdbcType=VARCHAR},
      course = #{record.course,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      container_type = #{record.containerType,jdbcType=VARCHAR},
      container_category = #{record.containerCategory,jdbcType=VARCHAR},
      `size` = #{record.size,jdbcType=VARCHAR},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      yard = #{record.yard,jdbcType=VARCHAR},
      course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      charge_type = #{record.chargeType,jdbcType=VARCHAR},
      deposit_money = #{record.depositMoney,jdbcType=DECIMAL},
      received_money = #{record.receivedMoney,jdbcType=DECIMAL},
      should_back_money = #{record.shouldBackMoney,jdbcType=DECIMAL},
      actual_back_money = #{record.actualBackMoney,jdbcType=DECIMAL},
      payment_type = #{record.paymentType,jdbcType=VARCHAR},
      is_back_spread = #{record.isBackSpread,jdbcType=VARCHAR},
      charge_user = #{record.chargeUser,jdbcType=INTEGER},
      charge_time = #{record.chargeTime,jdbcType=TIMESTAMP},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      tax_iden_no = #{record.taxIdenNo,jdbcType=VARCHAR},
      company_address = #{record.companyAddress,jdbcType=VARCHAR},
      company_phone = #{record.companyPhone,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      refund_bank_name = #{record.refundBankName,jdbcType=VARCHAR},
      refund_bank_account = #{record.refundBankAccount,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      invoice_remarks = #{record.invoiceRemarks,jdbcType=VARCHAR},
      signature_pic = #{record.signaturePic,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      charge_state = #{record.chargeState,jdbcType=VARCHAR},
      allinpay_trxid = #{record.allinpayTrxid,jdbcType=VARCHAR},
      pay_invoice = #{record.payInvoice,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.Charge">
    update prod_charge
    <set>
      <if test="prodChargeCode != null">
        prod_charge_code = #{prodChargeCode,jdbcType=VARCHAR},
      </if>
      <if test="course != null">
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        container_type = #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="containerCategory != null">
        container_category = #{containerCategory,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        container_user = #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        yard = #{yard,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="chargeType != null">
        charge_type = #{chargeType,jdbcType=VARCHAR},
      </if>
      <if test="depositMoney != null">
        deposit_money = #{depositMoney,jdbcType=DECIMAL},
      </if>
      <if test="receivedMoney != null">
        received_money = #{receivedMoney,jdbcType=DECIMAL},
      </if>
      <if test="shouldBackMoney != null">
        should_back_money = #{shouldBackMoney,jdbcType=DECIMAL},
      </if>
      <if test="actualBackMoney != null">
        actual_back_money = #{actualBackMoney,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="isBackSpread != null">
        is_back_spread = #{isBackSpread,jdbcType=VARCHAR},
      </if>
      <if test="chargeUser != null">
        charge_user = #{chargeUser,jdbcType=INTEGER},
      </if>
      <if test="chargeTime != null">
        charge_time = #{chargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="taxIdenNo != null">
        tax_iden_no = #{taxIdenNo,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null">
        company_phone = #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="refundBankName != null">
        refund_bank_name = #{refundBankName,jdbcType=VARCHAR},
      </if>
      <if test="refundBankAccount != null">
        refund_bank_account = #{refundBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="invoiceRemarks != null">
        invoice_remarks = #{invoiceRemarks,jdbcType=VARCHAR},
      </if>
      <if test="signaturePic != null">
        signature_pic = #{signaturePic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="chargeState != null">
        charge_state = #{chargeState,jdbcType=VARCHAR},
      </if>
      <if test="allinpayTrxid != null">
        allinpay_trxid = #{allinpayTrxid,jdbcType=VARCHAR},
      </if>
      <if test="payInvoice != null">
        pay_invoice = #{payInvoice,jdbcType=VARCHAR},
      </if>
    </set>
    where prod_charge_id = #{prodChargeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.Charge">
    update prod_charge
    set prod_charge_code = #{prodChargeCode,jdbcType=VARCHAR},
      course = #{course,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      container_type = #{containerType,jdbcType=VARCHAR},
      container_category = #{containerCategory,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=VARCHAR},
      container_user = #{containerUser,jdbcType=VARCHAR},
      yard = #{yard,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=TIMESTAMP},
      course_type = #{courseType,jdbcType=VARCHAR},
      charge_type = #{chargeType,jdbcType=VARCHAR},
      deposit_money = #{depositMoney,jdbcType=DECIMAL},
      received_money = #{receivedMoney,jdbcType=DECIMAL},
      should_back_money = #{shouldBackMoney,jdbcType=DECIMAL},
      actual_back_money = #{actualBackMoney,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      is_back_spread = #{isBackSpread,jdbcType=VARCHAR},
      charge_user = #{chargeUser,jdbcType=INTEGER},
      charge_time = #{chargeTime,jdbcType=TIMESTAMP},
      company_name = #{companyName,jdbcType=VARCHAR},
      tax_iden_no = #{taxIdenNo,jdbcType=VARCHAR},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      company_phone = #{companyPhone,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      refund_bank_name = #{refundBankName,jdbcType=VARCHAR},
      refund_bank_account = #{refundBankAccount,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      invoice_remarks = #{invoiceRemarks,jdbcType=VARCHAR},
      signature_pic = #{signaturePic,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      charge_state = #{chargeState,jdbcType=VARCHAR},
      allinpay_trxid = #{allinpayTrxid,jdbcType=VARCHAR},
      pay_invoice = #{payInvoice,jdbcType=VARCHAR}
    where prod_charge_id = #{prodChargeId,jdbcType=INTEGER}
  </update>
</mapper>
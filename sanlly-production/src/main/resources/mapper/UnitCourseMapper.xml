<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.production.dao.UnitCourseMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.production.entity.UnitCourse">
    <id column="prod_course_id" jdbcType="VARCHAR" property="prodCourseId" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="zone" jdbcType="VARCHAR" property="zone" />
    <result column="is_preview" jdbcType="VARCHAR" property="isPreview" />
    <result column="preview_state" jdbcType="VARCHAR" property="previewState" />
    <result column="unit_type" jdbcType="VARCHAR" property="unitType" />
    <result column="unit_company" jdbcType="VARCHAR" property="unitCompany" />
    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
    <result column="start_date" jdbcType="VARCHAR" property="startDate" />
    <result column="compressor" jdbcType="VARCHAR" property="compressor" />
    <result column="control" jdbcType="VARCHAR" property="control" />
    <result column="software_version" jdbcType="VARCHAR" property="softwareVersion" />
    <result column="is_ca" jdbcType="VARCHAR" property="isCa" />
    <result column="substrate_code" jdbcType="VARCHAR" property="substrateCode" />
    <result column="is_temperature" jdbcType="VARCHAR" property="isTemperature" />
    <result column="is_humidity" jdbcType="VARCHAR" property="isHumidity" />
    <result column="is_ventilation" jdbcType="VARCHAR" property="isVentilation" />
    <result column="is_fire_test" jdbcType="VARCHAR" property="isFireTest" />
    <result column="pti_type" jdbcType="VARCHAR" property="ptiType" />
    <result column="surrender_course" jdbcType="VARCHAR" property="surrenderCourse" />
    <result column="out_remarks" jdbcType="VARCHAR" property="outRemarks" />
    <result column="unit_state" jdbcType="VARCHAR" property="unitState" />
    <result column="testing_user" jdbcType="INTEGER" property="testingUser" />
    <result column="testing_state" jdbcType="VARCHAR" property="testingState" />
    <result column="testing_man_hour_cost" jdbcType="DECIMAL" property="testingManHourCost" />
    <result column="testing_material_cost" jdbcType="DECIMAL" property="testingMaterialCost" />
    <result column="testing_thirdparty_money" jdbcType="DECIMAL" property="testingThirdpartyMoney" />
    <result column="testing_money" jdbcType="DECIMAL" property="testingMoney" />
    <result column="testing_reject" jdbcType="VARCHAR" property="testingReject" />
    <result column="testing_time" jdbcType="TIMESTAMP" property="testingTime" />
    <result column="testing_end_time" jdbcType="TIMESTAMP" property="testingEndTime" />
    <result column="testing_remarks" jdbcType="VARCHAR" property="testingRemarks" />
    <result column="audit_type" jdbcType="VARCHAR" property="auditType" />
    <result column="audit_user" jdbcType="INTEGER" property="auditUser" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="valuation_no" jdbcType="VARCHAR" property="valuationNo" />
    <result column="use_reply_state" jdbcType="VARCHAR" property="useReplyState" />
    <result column="use_reply_time" jdbcType="TIMESTAMP" property="useReplyTime" />
    <result column="thirdparty_charge_state" jdbcType="VARCHAR" property="thirdpartyChargeState" />
    <result column="master_reply_state" jdbcType="VARCHAR" property="masterReplyState" />
    <result column="master_reply_time" jdbcType="TIMESTAMP" property="masterReplyTime" />
    <result column="already_use_cont_user" jdbcType="INTEGER" property="alreadyUseContUser" />
    <result column="valuation_currency" jdbcType="VARCHAR" property="valuationCurrency" />
    <result column="valuation_man_hour_cost" jdbcType="DECIMAL" property="valuationManHourCost" />
    <result column="valuation_material_cost" jdbcType="DECIMAL" property="valuationMaterialCost" />
    <result column="valuation_thirdparty_money" jdbcType="DECIMAL" property="valuationThirdpartyMoney" />
    <result column="valuation_money" jdbcType="DECIMAL" property="valuationMoney" />
    <result column="master_reply_money_rmb" jdbcType="DECIMAL" property="masterReplyMoneyRmb" />
    <result column="master_reply_money_usd" jdbcType="DECIMAL" property="masterReplyMoneyUsd" />
    <result column="use_reply_money_rmb" jdbcType="DECIMAL" property="useReplyMoneyRmb" />
    <result column="use_reply_money_usd" jdbcType="DECIMAL" property="useReplyMoneyUsd" />
    <result column="receipts_master_money_rmb" jdbcType="DECIMAL" property="receiptsMasterMoneyRmb" />
    <result column="receipts_master_money_usd" jdbcType="DECIMAL" property="receiptsMasterMoneyUsd" />
    <result column="receipts_use_money_rmb" jdbcType="DECIMAL" property="receiptsUseMoneyRmb" />
    <result column="receipts_use_money_usd" jdbcType="DECIMAL" property="receiptsUseMoneyUsd" />
    <result column="valuation_user" jdbcType="INTEGER" property="valuationUser" />
    <result column="valuation_reject" jdbcType="VARCHAR" property="valuationReject" />
    <result column="valuation_remarks" jdbcType="VARCHAR" property="valuationRemarks" />
    <result column="valuation_time" jdbcType="TIMESTAMP" property="valuationTime" />
    <result column="designate_user" jdbcType="INTEGER" property="designateUser" />
    <result column="designate_time" jdbcType="TIMESTAMP" property="designateTime" />
    <result column="referral_state" jdbcType="VARCHAR" property="referralState" />
    <result column="finish_user" jdbcType="INTEGER" property="finishUser" />
    <result column="referral_type" jdbcType="VARCHAR" property="referralType" />
    <result column="referral_time" jdbcType="TIMESTAMP" property="referralTime" />
    <result column="predict_time" jdbcType="VARCHAR" property="predictTime" />
    <result column="man_hour" jdbcType="DOUBLE" property="manHour" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="finish_audit_user" jdbcType="INTEGER" property="finishAuditUser" />
    <result column="finish_audit_time" jdbcType="TIMESTAMP" property="finishAuditTime" />
    <result column="referral_remarks" jdbcType="VARCHAR" property="referralRemarks" />
    <result column="quality_type" jdbcType="VARCHAR" property="qualityType" />
    <result column="quality_state" jdbcType="VARCHAR" property="qualityState" />
    <result column="quality_result" jdbcType="VARCHAR" property="qualityResult" />
    <result column="quality_user" jdbcType="INTEGER" property="qualityUser" />
    <result column="quality_time" jdbcType="TIMESTAMP" property="qualityTime" />
    <result column="quality_timeout" jdbcType="DOUBLE" property="qualityTimeout" />
    <result column="pk_quality_state" jdbcType="VARCHAR" property="pkQualityState" />
    <result column="pk_quality_user" jdbcType="INTEGER" property="pkQualityUser" />
    <result column="pk_quality_time" jdbcType="TIMESTAMP" property="pkQualityTime" />
    <result column="pk_quality_remarks" jdbcType="VARCHAR" property="pkQualityRemarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="container_type" jdbcType="VARCHAR" property="containerType" />
    <result column="container_user" jdbcType="VARCHAR" property="containerUser" />
    <result column="yard" jdbcType="VARCHAR" property="yard" />
    <result column="course_type" jdbcType="VARCHAR" property="courseType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sanlly.production.entity.UnitCourseWithBLOBs">
    <result column="unit_photo" jdbcType="LONGVARCHAR" property="unitPhoto" />
    <result column="after_photo" jdbcType="LONGVARCHAR" property="afterPhoto" />
    <result column="quality_photo" jdbcType="LONGVARCHAR" property="qualityPhoto" />
    <result column="recheck_photo" jdbcType="LONGVARCHAR" property="recheckPhoto" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <if test="criteria.valid">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
          <if test="criteria.validOr">
            and
            <foreach collection="criteria.orCriteria" item="criteriaItem" separator="and">
              <if test="criteriaItem.valid">
                <trim prefix="(" prefixOverrides="or" suffix=")">
                  <foreach collection="criteriaItem.criteria" item="criterionItem">
                    <choose>
                      <when test="criterionItem.noValue">
                        or ${criterionItem.condition}
                      </when>
                      <when test="criterionItem.singleValue">
                        or ${criterionItem.condition} #{criterionItem.value}
                      </when>
                      <when test="criterionItem.betweenValue">
                        or ${criterionItem.condition} #{criterionItem.value} and #{criterionItem.secondValue}
                      </when>
                      <when test="criterionItem.listValue">
                        or ${criterionItem.condition}
                        <foreach close=")" collection="criterionItem.value" item="listItem" open="(" separator=",">
                          #{listItem}
                        </foreach>
                      </when>
                    </choose>
                  </foreach>
                </trim>
              </if>
            </foreach>
          </if>
        </trim>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <if test="criteria.valid">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
          <if test="criteria.validOr">
            and
            <foreach collection="criteria.orCriteria" item="criteriaItem" separator="and">
              <if test="criteriaItem.valid">
                <trim prefix="(" prefixOverrides="or" suffix=")">
                  <foreach collection="criteriaItem.criteria" item="criterionItem">
                    <choose>
                      <when test="criterionItem.noValue">
                        or ${criterionItem.condition}
                      </when>
                      <when test="criterionItem.singleValue">
                        or ${criterionItem.condition} #{criterionItem.value}
                      </when>
                      <when test="criterionItem.betweenValue">
                        or ${criterionItem.condition} #{criterionItem.value} and #{criterionItem.secondValue}
                      </when>
                      <when test="criterionItem.listValue">
                        or ${criterionItem.condition}
                        <foreach close=")" collection="criterionItem.value" item="listItem" open="(" separator=",">
                          #{listItem}
                        </foreach>
                      </when>
                    </choose>
                  </foreach>
                </trim>
              </if>
            </foreach>
          </if>
        </trim>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_course_id, container_no, `zone`, is_preview, preview_state, unit_type, unit_company, 
    unit_code, start_date, compressor, control, software_version, is_ca, substrate_code, 
    is_temperature, is_humidity, is_ventilation, is_fire_test, pti_type, surrender_course, 
    out_remarks, unit_state, testing_user, testing_state, testing_man_hour_cost, testing_material_cost, 
    testing_thirdparty_money, testing_money, testing_reject, testing_time, testing_end_time, 
    testing_remarks, audit_type, audit_user, audit_time, valuation_no, use_reply_state, 
    use_reply_time, thirdparty_charge_state, master_reply_state, master_reply_time, already_use_cont_user, 
    valuation_currency, valuation_man_hour_cost, valuation_material_cost, valuation_thirdparty_money, 
    valuation_money, master_reply_money_rmb, master_reply_money_usd, use_reply_money_rmb, 
    use_reply_money_usd, receipts_master_money_rmb, receipts_master_money_usd, receipts_use_money_rmb, 
    receipts_use_money_usd, valuation_user, valuation_reject, valuation_remarks, valuation_time, 
    designate_user, designate_time, referral_state, finish_user, referral_type, referral_time, 
    predict_time, man_hour, finish_time, finish_audit_user, finish_audit_time, referral_remarks, 
    quality_type, quality_state, quality_result, quality_user, quality_time, quality_timeout, 
    pk_quality_state, pk_quality_user, pk_quality_time, pk_quality_remarks, create_time, 
    create_user, update_time, update_user, `size`, container_type, container_user, yard, 
    course_type
  </sql>
  <sql id="Blob_Column_List">
    unit_photo, after_photo, quality_photo, recheck_photo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sanlly.production.entity.UnitCourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_unit_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sanlly.production.entity.UnitCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_unit_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from prod_unit_course
    where prod_course_id = #{prodCourseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from prod_unit_course
    where prod_course_id = #{prodCourseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.production.entity.UnitCourseExample">
    delete from prod_unit_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.production.entity.UnitCourseWithBLOBs">
    insert into prod_unit_course (prod_course_id, container_no, `zone`, 
      is_preview, preview_state, unit_type, 
      unit_company, unit_code, start_date, 
      compressor, control, software_version, 
      is_ca, substrate_code, is_temperature, 
      is_humidity, is_ventilation, is_fire_test, 
      pti_type, surrender_course, out_remarks, 
      unit_state, testing_user, testing_state, 
      testing_man_hour_cost, testing_material_cost, 
      testing_thirdparty_money, testing_money, testing_reject, 
      testing_time, testing_end_time, testing_remarks, 
      audit_type, audit_user, audit_time, 
      valuation_no, use_reply_state, use_reply_time, 
      thirdparty_charge_state, master_reply_state, 
      master_reply_time, already_use_cont_user, 
      valuation_currency, valuation_man_hour_cost, 
      valuation_material_cost, valuation_thirdparty_money, 
      valuation_money, master_reply_money_rmb, master_reply_money_usd, 
      use_reply_money_rmb, use_reply_money_usd, receipts_master_money_rmb, 
      receipts_master_money_usd, receipts_use_money_rmb, 
      receipts_use_money_usd, valuation_user, valuation_reject, 
      valuation_remarks, valuation_time, designate_user, 
      designate_time, referral_state, finish_user, 
      referral_type, referral_time, predict_time, 
      man_hour, finish_time, finish_audit_user, 
      finish_audit_time, referral_remarks, quality_type, 
      quality_state, quality_result, quality_user, 
      quality_time, quality_timeout, pk_quality_state, 
      pk_quality_user, pk_quality_time, pk_quality_remarks, 
      create_time, create_user, update_time, 
      update_user, `size`, container_type, 
      container_user, yard, course_type, 
      unit_photo, after_photo, quality_photo, 
      recheck_photo)
    values (#{prodCourseId,jdbcType=VARCHAR}, #{containerNo,jdbcType=VARCHAR}, #{zone,jdbcType=VARCHAR}, 
      #{isPreview,jdbcType=VARCHAR}, #{previewState,jdbcType=VARCHAR}, #{unitType,jdbcType=VARCHAR}, 
      #{unitCompany,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR}, #{startDate,jdbcType=VARCHAR}, 
      #{compressor,jdbcType=VARCHAR}, #{control,jdbcType=VARCHAR}, #{softwareVersion,jdbcType=VARCHAR}, 
      #{isCa,jdbcType=VARCHAR}, #{substrateCode,jdbcType=VARCHAR}, #{isTemperature,jdbcType=VARCHAR}, 
      #{isHumidity,jdbcType=VARCHAR}, #{isVentilation,jdbcType=VARCHAR}, #{isFireTest,jdbcType=VARCHAR}, 
      #{ptiType,jdbcType=VARCHAR}, #{surrenderCourse,jdbcType=VARCHAR}, #{outRemarks,jdbcType=VARCHAR}, 
      #{unitState,jdbcType=VARCHAR}, #{testingUser,jdbcType=INTEGER}, #{testingState,jdbcType=VARCHAR}, 
      #{testingManHourCost,jdbcType=DECIMAL}, #{testingMaterialCost,jdbcType=DECIMAL}, 
      #{testingThirdpartyMoney,jdbcType=DECIMAL}, #{testingMoney,jdbcType=DECIMAL}, #{testingReject,jdbcType=VARCHAR}, 
      #{testingTime,jdbcType=TIMESTAMP}, #{testingEndTime,jdbcType=TIMESTAMP}, #{testingRemarks,jdbcType=VARCHAR}, 
      #{auditType,jdbcType=VARCHAR}, #{auditUser,jdbcType=INTEGER}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{valuationNo,jdbcType=VARCHAR}, #{useReplyState,jdbcType=VARCHAR}, #{useReplyTime,jdbcType=TIMESTAMP}, 
      #{thirdpartyChargeState,jdbcType=VARCHAR}, #{masterReplyState,jdbcType=VARCHAR}, 
      #{masterReplyTime,jdbcType=TIMESTAMP}, #{alreadyUseContUser,jdbcType=INTEGER}, 
      #{valuationCurrency,jdbcType=VARCHAR}, #{valuationManHourCost,jdbcType=DECIMAL}, 
      #{valuationMaterialCost,jdbcType=DECIMAL}, #{valuationThirdpartyMoney,jdbcType=DECIMAL}, 
      #{valuationMoney,jdbcType=DECIMAL}, #{masterReplyMoneyRmb,jdbcType=DECIMAL}, #{masterReplyMoneyUsd,jdbcType=DECIMAL}, 
      #{useReplyMoneyRmb,jdbcType=DECIMAL}, #{useReplyMoneyUsd,jdbcType=DECIMAL}, #{receiptsMasterMoneyRmb,jdbcType=DECIMAL}, 
      #{receiptsMasterMoneyUsd,jdbcType=DECIMAL}, #{receiptsUseMoneyRmb,jdbcType=DECIMAL}, 
      #{receiptsUseMoneyUsd,jdbcType=DECIMAL}, #{valuationUser,jdbcType=INTEGER}, #{valuationReject,jdbcType=VARCHAR}, 
      #{valuationRemarks,jdbcType=VARCHAR}, #{valuationTime,jdbcType=TIMESTAMP}, #{designateUser,jdbcType=INTEGER}, 
      #{designateTime,jdbcType=TIMESTAMP}, #{referralState,jdbcType=VARCHAR}, #{finishUser,jdbcType=INTEGER}, 
      #{referralType,jdbcType=VARCHAR}, #{referralTime,jdbcType=TIMESTAMP}, #{predictTime,jdbcType=VARCHAR}, 
      #{manHour,jdbcType=DOUBLE}, #{finishTime,jdbcType=TIMESTAMP}, #{finishAuditUser,jdbcType=INTEGER}, 
      #{finishAuditTime,jdbcType=TIMESTAMP}, #{referralRemarks,jdbcType=VARCHAR}, #{qualityType,jdbcType=VARCHAR}, 
      #{qualityState,jdbcType=VARCHAR}, #{qualityResult,jdbcType=VARCHAR}, #{qualityUser,jdbcType=INTEGER}, 
      #{qualityTime,jdbcType=TIMESTAMP}, #{qualityTimeout,jdbcType=DOUBLE}, #{pkQualityState,jdbcType=VARCHAR}, 
      #{pkQualityUser,jdbcType=INTEGER}, #{pkQualityTime,jdbcType=TIMESTAMP}, #{pkQualityRemarks,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{size,jdbcType=VARCHAR}, #{containerType,jdbcType=VARCHAR}, 
      #{containerUser,jdbcType=VARCHAR}, #{yard,jdbcType=VARCHAR}, #{courseType,jdbcType=VARCHAR}, 
      #{unitPhoto,jdbcType=LONGVARCHAR}, #{afterPhoto,jdbcType=LONGVARCHAR}, #{qualityPhoto,jdbcType=LONGVARCHAR}, 
      #{recheckPhoto,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.production.entity.UnitCourseWithBLOBs">
    insert into prod_unit_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodCourseId != null">
        prod_course_id,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="zone != null">
        `zone`,
      </if>
      <if test="isPreview != null">
        is_preview,
      </if>
      <if test="previewState != null">
        preview_state,
      </if>
      <if test="unitType != null">
        unit_type,
      </if>
      <if test="unitCompany != null">
        unit_company,
      </if>
      <if test="unitCode != null">
        unit_code,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="compressor != null">
        compressor,
      </if>
      <if test="control != null">
        control,
      </if>
      <if test="softwareVersion != null">
        software_version,
      </if>
      <if test="isCa != null">
        is_ca,
      </if>
      <if test="substrateCode != null">
        substrate_code,
      </if>
      <if test="isTemperature != null">
        is_temperature,
      </if>
      <if test="isHumidity != null">
        is_humidity,
      </if>
      <if test="isVentilation != null">
        is_ventilation,
      </if>
      <if test="isFireTest != null">
        is_fire_test,
      </if>
      <if test="ptiType != null">
        pti_type,
      </if>
      <if test="surrenderCourse != null">
        surrender_course,
      </if>
      <if test="outRemarks != null">
        out_remarks,
      </if>
      <if test="unitState != null">
        unit_state,
      </if>
      <if test="testingUser != null">
        testing_user,
      </if>
      <if test="testingState != null">
        testing_state,
      </if>
      <if test="testingManHourCost != null">
        testing_man_hour_cost,
      </if>
      <if test="testingMaterialCost != null">
        testing_material_cost,
      </if>
      <if test="testingThirdpartyMoney != null">
        testing_thirdparty_money,
      </if>
      <if test="testingMoney != null">
        testing_money,
      </if>
      <if test="testingReject != null">
        testing_reject,
      </if>
      <if test="testingTime != null">
        testing_time,
      </if>
      <if test="testingEndTime != null">
        testing_end_time,
      </if>
      <if test="testingRemarks != null">
        testing_remarks,
      </if>
      <if test="auditType != null">
        audit_type,
      </if>
      <if test="auditUser != null">
        audit_user,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="valuationNo != null">
        valuation_no,
      </if>
      <if test="useReplyState != null">
        use_reply_state,
      </if>
      <if test="useReplyTime != null">
        use_reply_time,
      </if>
      <if test="thirdpartyChargeState != null">
        thirdparty_charge_state,
      </if>
      <if test="masterReplyState != null">
        master_reply_state,
      </if>
      <if test="masterReplyTime != null">
        master_reply_time,
      </if>
      <if test="alreadyUseContUser != null">
        already_use_cont_user,
      </if>
      <if test="valuationCurrency != null">
        valuation_currency,
      </if>
      <if test="valuationManHourCost != null">
        valuation_man_hour_cost,
      </if>
      <if test="valuationMaterialCost != null">
        valuation_material_cost,
      </if>
      <if test="valuationThirdpartyMoney != null">
        valuation_thirdparty_money,
      </if>
      <if test="valuationMoney != null">
        valuation_money,
      </if>
      <if test="masterReplyMoneyRmb != null">
        master_reply_money_rmb,
      </if>
      <if test="masterReplyMoneyUsd != null">
        master_reply_money_usd,
      </if>
      <if test="useReplyMoneyRmb != null">
        use_reply_money_rmb,
      </if>
      <if test="useReplyMoneyUsd != null">
        use_reply_money_usd,
      </if>
      <if test="receiptsMasterMoneyRmb != null">
        receipts_master_money_rmb,
      </if>
      <if test="receiptsMasterMoneyUsd != null">
        receipts_master_money_usd,
      </if>
      <if test="receiptsUseMoneyRmb != null">
        receipts_use_money_rmb,
      </if>
      <if test="receiptsUseMoneyUsd != null">
        receipts_use_money_usd,
      </if>
      <if test="valuationUser != null">
        valuation_user,
      </if>
      <if test="valuationReject != null">
        valuation_reject,
      </if>
      <if test="valuationRemarks != null">
        valuation_remarks,
      </if>
      <if test="valuationTime != null">
        valuation_time,
      </if>
      <if test="designateUser != null">
        designate_user,
      </if>
      <if test="designateTime != null">
        designate_time,
      </if>
      <if test="referralState != null">
        referral_state,
      </if>
      <if test="finishUser != null">
        finish_user,
      </if>
      <if test="referralType != null">
        referral_type,
      </if>
      <if test="referralTime != null">
        referral_time,
      </if>
      <if test="predictTime != null">
        predict_time,
      </if>
      <if test="manHour != null">
        man_hour,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="finishAuditUser != null">
        finish_audit_user,
      </if>
      <if test="finishAuditTime != null">
        finish_audit_time,
      </if>
      <if test="referralRemarks != null">
        referral_remarks,
      </if>
      <if test="qualityType != null">
        quality_type,
      </if>
      <if test="qualityState != null">
        quality_state,
      </if>
      <if test="qualityResult != null">
        quality_result,
      </if>
      <if test="qualityUser != null">
        quality_user,
      </if>
      <if test="qualityTime != null">
        quality_time,
      </if>
      <if test="qualityTimeout != null">
        quality_timeout,
      </if>
      <if test="pkQualityState != null">
        pk_quality_state,
      </if>
      <if test="pkQualityUser != null">
        pk_quality_user,
      </if>
      <if test="pkQualityTime != null">
        pk_quality_time,
      </if>
      <if test="pkQualityRemarks != null">
        pk_quality_remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="containerType != null">
        container_type,
      </if>
      <if test="containerUser != null">
        container_user,
      </if>
      <if test="yard != null">
        yard,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="unitPhoto != null">
        unit_photo,
      </if>
      <if test="afterPhoto != null">
        after_photo,
      </if>
      <if test="qualityPhoto != null">
        quality_photo,
      </if>
      <if test="recheckPhoto != null">
        recheck_photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodCourseId != null">
        #{prodCourseId,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="zone != null">
        #{zone,jdbcType=VARCHAR},
      </if>
      <if test="isPreview != null">
        #{isPreview,jdbcType=VARCHAR},
      </if>
      <if test="previewState != null">
        #{previewState,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null">
        #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="unitCompany != null">
        #{unitCompany,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="compressor != null">
        #{compressor,jdbcType=VARCHAR},
      </if>
      <if test="control != null">
        #{control,jdbcType=VARCHAR},
      </if>
      <if test="softwareVersion != null">
        #{softwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="isCa != null">
        #{isCa,jdbcType=VARCHAR},
      </if>
      <if test="substrateCode != null">
        #{substrateCode,jdbcType=VARCHAR},
      </if>
      <if test="isTemperature != null">
        #{isTemperature,jdbcType=VARCHAR},
      </if>
      <if test="isHumidity != null">
        #{isHumidity,jdbcType=VARCHAR},
      </if>
      <if test="isVentilation != null">
        #{isVentilation,jdbcType=VARCHAR},
      </if>
      <if test="isFireTest != null">
        #{isFireTest,jdbcType=VARCHAR},
      </if>
      <if test="ptiType != null">
        #{ptiType,jdbcType=VARCHAR},
      </if>
      <if test="surrenderCourse != null">
        #{surrenderCourse,jdbcType=VARCHAR},
      </if>
      <if test="outRemarks != null">
        #{outRemarks,jdbcType=VARCHAR},
      </if>
      <if test="unitState != null">
        #{unitState,jdbcType=VARCHAR},
      </if>
      <if test="testingUser != null">
        #{testingUser,jdbcType=INTEGER},
      </if>
      <if test="testingState != null">
        #{testingState,jdbcType=VARCHAR},
      </if>
      <if test="testingManHourCost != null">
        #{testingManHourCost,jdbcType=DECIMAL},
      </if>
      <if test="testingMaterialCost != null">
        #{testingMaterialCost,jdbcType=DECIMAL},
      </if>
      <if test="testingThirdpartyMoney != null">
        #{testingThirdpartyMoney,jdbcType=DECIMAL},
      </if>
      <if test="testingMoney != null">
        #{testingMoney,jdbcType=DECIMAL},
      </if>
      <if test="testingReject != null">
        #{testingReject,jdbcType=VARCHAR},
      </if>
      <if test="testingTime != null">
        #{testingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testingEndTime != null">
        #{testingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testingRemarks != null">
        #{testingRemarks,jdbcType=VARCHAR},
      </if>
      <if test="auditType != null">
        #{auditType,jdbcType=VARCHAR},
      </if>
      <if test="auditUser != null">
        #{auditUser,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valuationNo != null">
        #{valuationNo,jdbcType=VARCHAR},
      </if>
      <if test="useReplyState != null">
        #{useReplyState,jdbcType=VARCHAR},
      </if>
      <if test="useReplyTime != null">
        #{useReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdpartyChargeState != null">
        #{thirdpartyChargeState,jdbcType=VARCHAR},
      </if>
      <if test="masterReplyState != null">
        #{masterReplyState,jdbcType=VARCHAR},
      </if>
      <if test="masterReplyTime != null">
        #{masterReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alreadyUseContUser != null">
        #{alreadyUseContUser,jdbcType=INTEGER},
      </if>
      <if test="valuationCurrency != null">
        #{valuationCurrency,jdbcType=VARCHAR},
      </if>
      <if test="valuationManHourCost != null">
        #{valuationManHourCost,jdbcType=DECIMAL},
      </if>
      <if test="valuationMaterialCost != null">
        #{valuationMaterialCost,jdbcType=DECIMAL},
      </if>
      <if test="valuationThirdpartyMoney != null">
        #{valuationThirdpartyMoney,jdbcType=DECIMAL},
      </if>
      <if test="valuationMoney != null">
        #{valuationMoney,jdbcType=DECIMAL},
      </if>
      <if test="masterReplyMoneyRmb != null">
        #{masterReplyMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="masterReplyMoneyUsd != null">
        #{masterReplyMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="useReplyMoneyRmb != null">
        #{useReplyMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="useReplyMoneyUsd != null">
        #{useReplyMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="receiptsMasterMoneyRmb != null">
        #{receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="receiptsMasterMoneyUsd != null">
        #{receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="receiptsUseMoneyRmb != null">
        #{receiptsUseMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="receiptsUseMoneyUsd != null">
        #{receiptsUseMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="valuationUser != null">
        #{valuationUser,jdbcType=INTEGER},
      </if>
      <if test="valuationReject != null">
        #{valuationReject,jdbcType=VARCHAR},
      </if>
      <if test="valuationRemarks != null">
        #{valuationRemarks,jdbcType=VARCHAR},
      </if>
      <if test="valuationTime != null">
        #{valuationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="designateUser != null">
        #{designateUser,jdbcType=INTEGER},
      </if>
      <if test="designateTime != null">
        #{designateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="referralState != null">
        #{referralState,jdbcType=VARCHAR},
      </if>
      <if test="finishUser != null">
        #{finishUser,jdbcType=INTEGER},
      </if>
      <if test="referralType != null">
        #{referralType,jdbcType=VARCHAR},
      </if>
      <if test="referralTime != null">
        #{referralTime,jdbcType=TIMESTAMP},
      </if>
      <if test="predictTime != null">
        #{predictTime,jdbcType=VARCHAR},
      </if>
      <if test="manHour != null">
        #{manHour,jdbcType=DOUBLE},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAuditUser != null">
        #{finishAuditUser,jdbcType=INTEGER},
      </if>
      <if test="finishAuditTime != null">
        #{finishAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="referralRemarks != null">
        #{referralRemarks,jdbcType=VARCHAR},
      </if>
      <if test="qualityType != null">
        #{qualityType,jdbcType=VARCHAR},
      </if>
      <if test="qualityState != null">
        #{qualityState,jdbcType=VARCHAR},
      </if>
      <if test="qualityResult != null">
        #{qualityResult,jdbcType=VARCHAR},
      </if>
      <if test="qualityUser != null">
        #{qualityUser,jdbcType=INTEGER},
      </if>
      <if test="qualityTime != null">
        #{qualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityTimeout != null">
        #{qualityTimeout,jdbcType=DOUBLE},
      </if>
      <if test="pkQualityState != null">
        #{pkQualityState,jdbcType=VARCHAR},
      </if>
      <if test="pkQualityUser != null">
        #{pkQualityUser,jdbcType=INTEGER},
      </if>
      <if test="pkQualityTime != null">
        #{pkQualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pkQualityRemarks != null">
        #{pkQualityRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        #{yard,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="unitPhoto != null">
        #{unitPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="afterPhoto != null">
        #{afterPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="qualityPhoto != null">
        #{qualityPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="recheckPhoto != null">
        #{recheckPhoto,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.production.entity.UnitCourseExample" resultType="java.lang.Long">
    select count(*) from prod_unit_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_unit_course
    <set>
      <if test="record.prodCourseId != null">
        prod_course_id = #{record.prodCourseId,jdbcType=VARCHAR},
      </if>
      <if test="record.containerNo != null">
        container_no = #{record.containerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.zone != null">
        `zone` = #{record.zone,jdbcType=VARCHAR},
      </if>
      <if test="record.isPreview != null">
        is_preview = #{record.isPreview,jdbcType=VARCHAR},
      </if>
      <if test="record.previewState != null">
        preview_state = #{record.previewState,jdbcType=VARCHAR},
      </if>
      <if test="record.unitType != null">
        unit_type = #{record.unitType,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCompany != null">
        unit_company = #{record.unitCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCode != null">
        unit_code = #{record.unitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.compressor != null">
        compressor = #{record.compressor,jdbcType=VARCHAR},
      </if>
      <if test="record.control != null">
        control = #{record.control,jdbcType=VARCHAR},
      </if>
      <if test="record.softwareVersion != null">
        software_version = #{record.softwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.isCa != null">
        is_ca = #{record.isCa,jdbcType=VARCHAR},
      </if>
      <if test="record.substrateCode != null">
        substrate_code = #{record.substrateCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isTemperature != null">
        is_temperature = #{record.isTemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.isHumidity != null">
        is_humidity = #{record.isHumidity,jdbcType=VARCHAR},
      </if>
      <if test="record.isVentilation != null">
        is_ventilation = #{record.isVentilation,jdbcType=VARCHAR},
      </if>
      <if test="record.isFireTest != null">
        is_fire_test = #{record.isFireTest,jdbcType=VARCHAR},
      </if>
      <if test="record.ptiType != null">
        pti_type = #{record.ptiType,jdbcType=VARCHAR},
      </if>
      <if test="record.surrenderCourse != null">
        surrender_course = #{record.surrenderCourse,jdbcType=VARCHAR},
      </if>
      <if test="record.outRemarks != null">
        out_remarks = #{record.outRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.unitState != null">
        unit_state = #{record.unitState,jdbcType=VARCHAR},
      </if>
      <if test="record.testingUser != null">
        testing_user = #{record.testingUser,jdbcType=INTEGER},
      </if>
      <if test="record.testingState != null">
        testing_state = #{record.testingState,jdbcType=VARCHAR},
      </if>
      <if test="record.testingManHourCost != null">
        testing_man_hour_cost = #{record.testingManHourCost,jdbcType=DECIMAL},
      </if>
      <if test="record.testingMaterialCost != null">
        testing_material_cost = #{record.testingMaterialCost,jdbcType=DECIMAL},
      </if>
      <if test="record.testingThirdpartyMoney != null">
        testing_thirdparty_money = #{record.testingThirdpartyMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.testingMoney != null">
        testing_money = #{record.testingMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.testingReject != null">
        testing_reject = #{record.testingReject,jdbcType=VARCHAR},
      </if>
      <if test="record.testingTime != null">
        testing_time = #{record.testingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testingEndTime != null">
        testing_end_time = #{record.testingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testingRemarks != null">
        testing_remarks = #{record.testingRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.auditType != null">
        audit_type = #{record.auditType,jdbcType=VARCHAR},
      </if>
      <if test="record.auditUser != null">
        audit_user = #{record.auditUser,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valuationNo != null">
        valuation_no = #{record.valuationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.useReplyState != null">
        use_reply_state = #{record.useReplyState,jdbcType=VARCHAR},
      </if>
      <if test="record.useReplyTime != null">
        use_reply_time = #{record.useReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.thirdpartyChargeState != null">
        thirdparty_charge_state = #{record.thirdpartyChargeState,jdbcType=VARCHAR},
      </if>
      <if test="record.masterReplyState != null">
        master_reply_state = #{record.masterReplyState,jdbcType=VARCHAR},
      </if>
      <if test="record.masterReplyTime != null">
        master_reply_time = #{record.masterReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.alreadyUseContUser != null">
        already_use_cont_user = #{record.alreadyUseContUser,jdbcType=INTEGER},
      </if>
      <if test="record.valuationCurrency != null">
        valuation_currency = #{record.valuationCurrency,jdbcType=VARCHAR},
      </if>
      <if test="record.valuationManHourCost != null">
        valuation_man_hour_cost = #{record.valuationManHourCost,jdbcType=DECIMAL},
      </if>
      <if test="record.valuationMaterialCost != null">
        valuation_material_cost = #{record.valuationMaterialCost,jdbcType=DECIMAL},
      </if>
      <if test="record.valuationThirdpartyMoney != null">
        valuation_thirdparty_money = #{record.valuationThirdpartyMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.valuationMoney != null">
        valuation_money = #{record.valuationMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.masterReplyMoneyRmb != null">
        master_reply_money_rmb = #{record.masterReplyMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="record.masterReplyMoneyUsd != null">
        master_reply_money_usd = #{record.masterReplyMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="record.useReplyMoneyRmb != null">
        use_reply_money_rmb = #{record.useReplyMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="record.useReplyMoneyUsd != null">
        use_reply_money_usd = #{record.useReplyMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="record.receiptsMasterMoneyRmb != null">
        receipts_master_money_rmb = #{record.receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="record.receiptsMasterMoneyUsd != null">
        receipts_master_money_usd = #{record.receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="record.receiptsUseMoneyRmb != null">
        receipts_use_money_rmb = #{record.receiptsUseMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="record.receiptsUseMoneyUsd != null">
        receipts_use_money_usd = #{record.receiptsUseMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="record.valuationUser != null">
        valuation_user = #{record.valuationUser,jdbcType=INTEGER},
      </if>
      <if test="record.valuationReject != null">
        valuation_reject = #{record.valuationReject,jdbcType=VARCHAR},
      </if>
      <if test="record.valuationRemarks != null">
        valuation_remarks = #{record.valuationRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.valuationTime != null">
        valuation_time = #{record.valuationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.designateUser != null">
        designate_user = #{record.designateUser,jdbcType=INTEGER},
      </if>
      <if test="record.designateTime != null">
        designate_time = #{record.designateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.referralState != null">
        referral_state = #{record.referralState,jdbcType=VARCHAR},
      </if>
      <if test="record.finishUser != null">
        finish_user = #{record.finishUser,jdbcType=INTEGER},
      </if>
      <if test="record.referralType != null">
        referral_type = #{record.referralType,jdbcType=VARCHAR},
      </if>
      <if test="record.referralTime != null">
        referral_time = #{record.referralTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.predictTime != null">
        predict_time = #{record.predictTime,jdbcType=VARCHAR},
      </if>
      <if test="record.manHour != null">
        man_hour = #{record.manHour,jdbcType=DOUBLE},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishAuditUser != null">
        finish_audit_user = #{record.finishAuditUser,jdbcType=INTEGER},
      </if>
      <if test="record.finishAuditTime != null">
        finish_audit_time = #{record.finishAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.referralRemarks != null">
        referral_remarks = #{record.referralRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityType != null">
        quality_type = #{record.qualityType,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityState != null">
        quality_state = #{record.qualityState,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityResult != null">
        quality_result = #{record.qualityResult,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityUser != null">
        quality_user = #{record.qualityUser,jdbcType=INTEGER},
      </if>
      <if test="record.qualityTime != null">
        quality_time = #{record.qualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qualityTimeout != null">
        quality_timeout = #{record.qualityTimeout,jdbcType=DOUBLE},
      </if>
      <if test="record.pkQualityState != null">
        pk_quality_state = #{record.pkQualityState,jdbcType=VARCHAR},
      </if>
      <if test="record.pkQualityUser != null">
        pk_quality_user = #{record.pkQualityUser,jdbcType=INTEGER},
      </if>
      <if test="record.pkQualityTime != null">
        pk_quality_time = #{record.pkQualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pkQualityRemarks != null">
        pk_quality_remarks = #{record.pkQualityRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.size != null">
        `size` = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.containerType != null">
        container_type = #{record.containerType,jdbcType=VARCHAR},
      </if>
      <if test="record.containerUser != null">
        container_user = #{record.containerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.yard != null">
        yard = #{record.yard,jdbcType=VARCHAR},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPhoto != null">
        unit_photo = #{record.unitPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.afterPhoto != null">
        after_photo = #{record.afterPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.qualityPhoto != null">
        quality_photo = #{record.qualityPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.recheckPhoto != null">
        recheck_photo = #{record.recheckPhoto,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update prod_unit_course
    set prod_course_id = #{record.prodCourseId,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      `zone` = #{record.zone,jdbcType=VARCHAR},
      is_preview = #{record.isPreview,jdbcType=VARCHAR},
      preview_state = #{record.previewState,jdbcType=VARCHAR},
      unit_type = #{record.unitType,jdbcType=VARCHAR},
      unit_company = #{record.unitCompany,jdbcType=VARCHAR},
      unit_code = #{record.unitCode,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      compressor = #{record.compressor,jdbcType=VARCHAR},
      control = #{record.control,jdbcType=VARCHAR},
      software_version = #{record.softwareVersion,jdbcType=VARCHAR},
      is_ca = #{record.isCa,jdbcType=VARCHAR},
      substrate_code = #{record.substrateCode,jdbcType=VARCHAR},
      is_temperature = #{record.isTemperature,jdbcType=VARCHAR},
      is_humidity = #{record.isHumidity,jdbcType=VARCHAR},
      is_ventilation = #{record.isVentilation,jdbcType=VARCHAR},
      is_fire_test = #{record.isFireTest,jdbcType=VARCHAR},
      pti_type = #{record.ptiType,jdbcType=VARCHAR},
      surrender_course = #{record.surrenderCourse,jdbcType=VARCHAR},
      out_remarks = #{record.outRemarks,jdbcType=VARCHAR},
      unit_state = #{record.unitState,jdbcType=VARCHAR},
      testing_user = #{record.testingUser,jdbcType=INTEGER},
      testing_state = #{record.testingState,jdbcType=VARCHAR},
      testing_man_hour_cost = #{record.testingManHourCost,jdbcType=DECIMAL},
      testing_material_cost = #{record.testingMaterialCost,jdbcType=DECIMAL},
      testing_thirdparty_money = #{record.testingThirdpartyMoney,jdbcType=DECIMAL},
      testing_money = #{record.testingMoney,jdbcType=DECIMAL},
      testing_reject = #{record.testingReject,jdbcType=VARCHAR},
      testing_time = #{record.testingTime,jdbcType=TIMESTAMP},
      testing_end_time = #{record.testingEndTime,jdbcType=TIMESTAMP},
      testing_remarks = #{record.testingRemarks,jdbcType=VARCHAR},
      audit_type = #{record.auditType,jdbcType=VARCHAR},
      audit_user = #{record.auditUser,jdbcType=INTEGER},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      valuation_no = #{record.valuationNo,jdbcType=VARCHAR},
      use_reply_state = #{record.useReplyState,jdbcType=VARCHAR},
      use_reply_time = #{record.useReplyTime,jdbcType=TIMESTAMP},
      thirdparty_charge_state = #{record.thirdpartyChargeState,jdbcType=VARCHAR},
      master_reply_state = #{record.masterReplyState,jdbcType=VARCHAR},
      master_reply_time = #{record.masterReplyTime,jdbcType=TIMESTAMP},
      already_use_cont_user = #{record.alreadyUseContUser,jdbcType=INTEGER},
      valuation_currency = #{record.valuationCurrency,jdbcType=VARCHAR},
      valuation_man_hour_cost = #{record.valuationManHourCost,jdbcType=DECIMAL},
      valuation_material_cost = #{record.valuationMaterialCost,jdbcType=DECIMAL},
      valuation_thirdparty_money = #{record.valuationThirdpartyMoney,jdbcType=DECIMAL},
      valuation_money = #{record.valuationMoney,jdbcType=DECIMAL},
      master_reply_money_rmb = #{record.masterReplyMoneyRmb,jdbcType=DECIMAL},
      master_reply_money_usd = #{record.masterReplyMoneyUsd,jdbcType=DECIMAL},
      use_reply_money_rmb = #{record.useReplyMoneyRmb,jdbcType=DECIMAL},
      use_reply_money_usd = #{record.useReplyMoneyUsd,jdbcType=DECIMAL},
      receipts_master_money_rmb = #{record.receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      receipts_master_money_usd = #{record.receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      receipts_use_money_rmb = #{record.receiptsUseMoneyRmb,jdbcType=DECIMAL},
      receipts_use_money_usd = #{record.receiptsUseMoneyUsd,jdbcType=DECIMAL},
      valuation_user = #{record.valuationUser,jdbcType=INTEGER},
      valuation_reject = #{record.valuationReject,jdbcType=VARCHAR},
      valuation_remarks = #{record.valuationRemarks,jdbcType=VARCHAR},
      valuation_time = #{record.valuationTime,jdbcType=TIMESTAMP},
      designate_user = #{record.designateUser,jdbcType=INTEGER},
      designate_time = #{record.designateTime,jdbcType=TIMESTAMP},
      referral_state = #{record.referralState,jdbcType=VARCHAR},
      finish_user = #{record.finishUser,jdbcType=INTEGER},
      referral_type = #{record.referralType,jdbcType=VARCHAR},
      referral_time = #{record.referralTime,jdbcType=TIMESTAMP},
      predict_time = #{record.predictTime,jdbcType=VARCHAR},
      man_hour = #{record.manHour,jdbcType=DOUBLE},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      finish_audit_user = #{record.finishAuditUser,jdbcType=INTEGER},
      finish_audit_time = #{record.finishAuditTime,jdbcType=TIMESTAMP},
      referral_remarks = #{record.referralRemarks,jdbcType=VARCHAR},
      quality_type = #{record.qualityType,jdbcType=VARCHAR},
      quality_state = #{record.qualityState,jdbcType=VARCHAR},
      quality_result = #{record.qualityResult,jdbcType=VARCHAR},
      quality_user = #{record.qualityUser,jdbcType=INTEGER},
      quality_time = #{record.qualityTime,jdbcType=TIMESTAMP},
      quality_timeout = #{record.qualityTimeout,jdbcType=DOUBLE},
      pk_quality_state = #{record.pkQualityState,jdbcType=VARCHAR},
      pk_quality_user = #{record.pkQualityUser,jdbcType=INTEGER},
      pk_quality_time = #{record.pkQualityTime,jdbcType=TIMESTAMP},
      pk_quality_remarks = #{record.pkQualityRemarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      `size` = #{record.size,jdbcType=VARCHAR},
      container_type = #{record.containerType,jdbcType=VARCHAR},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      yard = #{record.yard,jdbcType=VARCHAR},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      unit_photo = #{record.unitPhoto,jdbcType=LONGVARCHAR},
      after_photo = #{record.afterPhoto,jdbcType=LONGVARCHAR},
      quality_photo = #{record.qualityPhoto,jdbcType=LONGVARCHAR},
      recheck_photo = #{record.recheckPhoto,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_unit_course
    set prod_course_id = #{record.prodCourseId,jdbcType=VARCHAR},
      container_no = #{record.containerNo,jdbcType=VARCHAR},
      `zone` = #{record.zone,jdbcType=VARCHAR},
      is_preview = #{record.isPreview,jdbcType=VARCHAR},
      preview_state = #{record.previewState,jdbcType=VARCHAR},
      unit_type = #{record.unitType,jdbcType=VARCHAR},
      unit_company = #{record.unitCompany,jdbcType=VARCHAR},
      unit_code = #{record.unitCode,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      compressor = #{record.compressor,jdbcType=VARCHAR},
      control = #{record.control,jdbcType=VARCHAR},
      software_version = #{record.softwareVersion,jdbcType=VARCHAR},
      is_ca = #{record.isCa,jdbcType=VARCHAR},
      substrate_code = #{record.substrateCode,jdbcType=VARCHAR},
      is_temperature = #{record.isTemperature,jdbcType=VARCHAR},
      is_humidity = #{record.isHumidity,jdbcType=VARCHAR},
      is_ventilation = #{record.isVentilation,jdbcType=VARCHAR},
      is_fire_test = #{record.isFireTest,jdbcType=VARCHAR},
      pti_type = #{record.ptiType,jdbcType=VARCHAR},
      surrender_course = #{record.surrenderCourse,jdbcType=VARCHAR},
      out_remarks = #{record.outRemarks,jdbcType=VARCHAR},
      unit_state = #{record.unitState,jdbcType=VARCHAR},
      testing_user = #{record.testingUser,jdbcType=INTEGER},
      testing_state = #{record.testingState,jdbcType=VARCHAR},
      testing_man_hour_cost = #{record.testingManHourCost,jdbcType=DECIMAL},
      testing_material_cost = #{record.testingMaterialCost,jdbcType=DECIMAL},
      testing_thirdparty_money = #{record.testingThirdpartyMoney,jdbcType=DECIMAL},
      testing_money = #{record.testingMoney,jdbcType=DECIMAL},
      testing_reject = #{record.testingReject,jdbcType=VARCHAR},
      testing_time = #{record.testingTime,jdbcType=TIMESTAMP},
      testing_end_time = #{record.testingEndTime,jdbcType=TIMESTAMP},
      testing_remarks = #{record.testingRemarks,jdbcType=VARCHAR},
      audit_type = #{record.auditType,jdbcType=VARCHAR},
      audit_user = #{record.auditUser,jdbcType=INTEGER},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      valuation_no = #{record.valuationNo,jdbcType=VARCHAR},
      use_reply_state = #{record.useReplyState,jdbcType=VARCHAR},
      use_reply_time = #{record.useReplyTime,jdbcType=TIMESTAMP},
      thirdparty_charge_state = #{record.thirdpartyChargeState,jdbcType=VARCHAR},
      master_reply_state = #{record.masterReplyState,jdbcType=VARCHAR},
      master_reply_time = #{record.masterReplyTime,jdbcType=TIMESTAMP},
      already_use_cont_user = #{record.alreadyUseContUser,jdbcType=INTEGER},
      valuation_currency = #{record.valuationCurrency,jdbcType=VARCHAR},
      valuation_man_hour_cost = #{record.valuationManHourCost,jdbcType=DECIMAL},
      valuation_material_cost = #{record.valuationMaterialCost,jdbcType=DECIMAL},
      valuation_thirdparty_money = #{record.valuationThirdpartyMoney,jdbcType=DECIMAL},
      valuation_money = #{record.valuationMoney,jdbcType=DECIMAL},
      master_reply_money_rmb = #{record.masterReplyMoneyRmb,jdbcType=DECIMAL},
      master_reply_money_usd = #{record.masterReplyMoneyUsd,jdbcType=DECIMAL},
      use_reply_money_rmb = #{record.useReplyMoneyRmb,jdbcType=DECIMAL},
      use_reply_money_usd = #{record.useReplyMoneyUsd,jdbcType=DECIMAL},
      receipts_master_money_rmb = #{record.receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      receipts_master_money_usd = #{record.receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      receipts_use_money_rmb = #{record.receiptsUseMoneyRmb,jdbcType=DECIMAL},
      receipts_use_money_usd = #{record.receiptsUseMoneyUsd,jdbcType=DECIMAL},
      valuation_user = #{record.valuationUser,jdbcType=INTEGER},
      valuation_reject = #{record.valuationReject,jdbcType=VARCHAR},
      valuation_remarks = #{record.valuationRemarks,jdbcType=VARCHAR},
      valuation_time = #{record.valuationTime,jdbcType=TIMESTAMP},
      designate_user = #{record.designateUser,jdbcType=INTEGER},
      designate_time = #{record.designateTime,jdbcType=TIMESTAMP},
      referral_state = #{record.referralState,jdbcType=VARCHAR},
      finish_user = #{record.finishUser,jdbcType=INTEGER},
      referral_type = #{record.referralType,jdbcType=VARCHAR},
      referral_time = #{record.referralTime,jdbcType=TIMESTAMP},
      predict_time = #{record.predictTime,jdbcType=VARCHAR},
      man_hour = #{record.manHour,jdbcType=DOUBLE},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      finish_audit_user = #{record.finishAuditUser,jdbcType=INTEGER},
      finish_audit_time = #{record.finishAuditTime,jdbcType=TIMESTAMP},
      referral_remarks = #{record.referralRemarks,jdbcType=VARCHAR},
      quality_type = #{record.qualityType,jdbcType=VARCHAR},
      quality_state = #{record.qualityState,jdbcType=VARCHAR},
      quality_result = #{record.qualityResult,jdbcType=VARCHAR},
      quality_user = #{record.qualityUser,jdbcType=INTEGER},
      quality_time = #{record.qualityTime,jdbcType=TIMESTAMP},
      quality_timeout = #{record.qualityTimeout,jdbcType=DOUBLE},
      pk_quality_state = #{record.pkQualityState,jdbcType=VARCHAR},
      pk_quality_user = #{record.pkQualityUser,jdbcType=INTEGER},
      pk_quality_time = #{record.pkQualityTime,jdbcType=TIMESTAMP},
      pk_quality_remarks = #{record.pkQualityRemarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      `size` = #{record.size,jdbcType=VARCHAR},
      container_type = #{record.containerType,jdbcType=VARCHAR},
      container_user = #{record.containerUser,jdbcType=VARCHAR},
      yard = #{record.yard,jdbcType=VARCHAR},
      course_type = #{record.courseType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.production.entity.UnitCourseWithBLOBs">
    update prod_unit_course
    <set>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="zone != null">
        `zone` = #{zone,jdbcType=VARCHAR},
      </if>
      <if test="isPreview != null">
        is_preview = #{isPreview,jdbcType=VARCHAR},
      </if>
      <if test="previewState != null">
        preview_state = #{previewState,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null">
        unit_type = #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="unitCompany != null">
        unit_company = #{unitCompany,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="compressor != null">
        compressor = #{compressor,jdbcType=VARCHAR},
      </if>
      <if test="control != null">
        control = #{control,jdbcType=VARCHAR},
      </if>
      <if test="softwareVersion != null">
        software_version = #{softwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="isCa != null">
        is_ca = #{isCa,jdbcType=VARCHAR},
      </if>
      <if test="substrateCode != null">
        substrate_code = #{substrateCode,jdbcType=VARCHAR},
      </if>
      <if test="isTemperature != null">
        is_temperature = #{isTemperature,jdbcType=VARCHAR},
      </if>
      <if test="isHumidity != null">
        is_humidity = #{isHumidity,jdbcType=VARCHAR},
      </if>
      <if test="isVentilation != null">
        is_ventilation = #{isVentilation,jdbcType=VARCHAR},
      </if>
      <if test="isFireTest != null">
        is_fire_test = #{isFireTest,jdbcType=VARCHAR},
      </if>
      <if test="ptiType != null">
        pti_type = #{ptiType,jdbcType=VARCHAR},
      </if>
      <if test="surrenderCourse != null">
        surrender_course = #{surrenderCourse,jdbcType=VARCHAR},
      </if>
      <if test="outRemarks != null">
        out_remarks = #{outRemarks,jdbcType=VARCHAR},
      </if>
      <if test="unitState != null">
        unit_state = #{unitState,jdbcType=VARCHAR},
      </if>
      <if test="testingUser != null">
        testing_user = #{testingUser,jdbcType=INTEGER},
      </if>
      <if test="testingState != null">
        testing_state = #{testingState,jdbcType=VARCHAR},
      </if>
      <if test="testingManHourCost != null">
        testing_man_hour_cost = #{testingManHourCost,jdbcType=DECIMAL},
      </if>
      <if test="testingMaterialCost != null">
        testing_material_cost = #{testingMaterialCost,jdbcType=DECIMAL},
      </if>
      <if test="testingThirdpartyMoney != null">
        testing_thirdparty_money = #{testingThirdpartyMoney,jdbcType=DECIMAL},
      </if>
      <if test="testingMoney != null">
        testing_money = #{testingMoney,jdbcType=DECIMAL},
      </if>
      <if test="testingReject != null">
        testing_reject = #{testingReject,jdbcType=VARCHAR},
      </if>
      <if test="testingTime != null">
        testing_time = #{testingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testingEndTime != null">
        testing_end_time = #{testingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testingRemarks != null">
        testing_remarks = #{testingRemarks,jdbcType=VARCHAR},
      </if>
      <if test="auditType != null">
        audit_type = #{auditType,jdbcType=VARCHAR},
      </if>
      <if test="auditUser != null">
        audit_user = #{auditUser,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valuationNo != null">
        valuation_no = #{valuationNo,jdbcType=VARCHAR},
      </if>
      <if test="useReplyState != null">
        use_reply_state = #{useReplyState,jdbcType=VARCHAR},
      </if>
      <if test="useReplyTime != null">
        use_reply_time = #{useReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdpartyChargeState != null">
        thirdparty_charge_state = #{thirdpartyChargeState,jdbcType=VARCHAR},
      </if>
      <if test="masterReplyState != null">
        master_reply_state = #{masterReplyState,jdbcType=VARCHAR},
      </if>
      <if test="masterReplyTime != null">
        master_reply_time = #{masterReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alreadyUseContUser != null">
        already_use_cont_user = #{alreadyUseContUser,jdbcType=INTEGER},
      </if>
      <if test="valuationCurrency != null">
        valuation_currency = #{valuationCurrency,jdbcType=VARCHAR},
      </if>
      <if test="valuationManHourCost != null">
        valuation_man_hour_cost = #{valuationManHourCost,jdbcType=DECIMAL},
      </if>
      <if test="valuationMaterialCost != null">
        valuation_material_cost = #{valuationMaterialCost,jdbcType=DECIMAL},
      </if>
      <if test="valuationThirdpartyMoney != null">
        valuation_thirdparty_money = #{valuationThirdpartyMoney,jdbcType=DECIMAL},
      </if>
      <if test="valuationMoney != null">
        valuation_money = #{valuationMoney,jdbcType=DECIMAL},
      </if>
      <if test="masterReplyMoneyRmb != null">
        master_reply_money_rmb = #{masterReplyMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="masterReplyMoneyUsd != null">
        master_reply_money_usd = #{masterReplyMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="useReplyMoneyRmb != null">
        use_reply_money_rmb = #{useReplyMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="useReplyMoneyUsd != null">
        use_reply_money_usd = #{useReplyMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="receiptsMasterMoneyRmb != null">
        receipts_master_money_rmb = #{receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="receiptsMasterMoneyUsd != null">
        receipts_master_money_usd = #{receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="receiptsUseMoneyRmb != null">
        receipts_use_money_rmb = #{receiptsUseMoneyRmb,jdbcType=DECIMAL},
      </if>
      <if test="receiptsUseMoneyUsd != null">
        receipts_use_money_usd = #{receiptsUseMoneyUsd,jdbcType=DECIMAL},
      </if>
      <if test="valuationUser != null">
        valuation_user = #{valuationUser,jdbcType=INTEGER},
      </if>
      <if test="valuationReject != null">
        valuation_reject = #{valuationReject,jdbcType=VARCHAR},
      </if>
      <if test="valuationRemarks != null">
        valuation_remarks = #{valuationRemarks,jdbcType=VARCHAR},
      </if>
      <if test="valuationTime != null">
        valuation_time = #{valuationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="designateUser != null">
        designate_user = #{designateUser,jdbcType=INTEGER},
      </if>
      <if test="designateTime != null">
        designate_time = #{designateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="referralState != null">
        referral_state = #{referralState,jdbcType=VARCHAR},
      </if>
      <if test="finishUser != null">
        finish_user = #{finishUser,jdbcType=INTEGER},
      </if>
      <if test="referralType != null">
        referral_type = #{referralType,jdbcType=VARCHAR},
      </if>
      <if test="referralTime != null">
        referral_time = #{referralTime,jdbcType=TIMESTAMP},
      </if>
      <if test="predictTime != null">
        predict_time = #{predictTime,jdbcType=VARCHAR},
      </if>
      <if test="manHour != null">
        man_hour = #{manHour,jdbcType=DOUBLE},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAuditUser != null">
        finish_audit_user = #{finishAuditUser,jdbcType=INTEGER},
      </if>
      <if test="finishAuditTime != null">
        finish_audit_time = #{finishAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="referralRemarks != null">
        referral_remarks = #{referralRemarks,jdbcType=VARCHAR},
      </if>
      <if test="qualityType != null">
        quality_type = #{qualityType,jdbcType=VARCHAR},
      </if>
      <if test="qualityState != null">
        quality_state = #{qualityState,jdbcType=VARCHAR},
      </if>
      <if test="qualityResult != null">
        quality_result = #{qualityResult,jdbcType=VARCHAR},
      </if>
      <if test="qualityUser != null">
        quality_user = #{qualityUser,jdbcType=INTEGER},
      </if>
      <if test="qualityTime != null">
        quality_time = #{qualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityTimeout != null">
        quality_timeout = #{qualityTimeout,jdbcType=DOUBLE},
      </if>
      <if test="pkQualityState != null">
        pk_quality_state = #{pkQualityState,jdbcType=VARCHAR},
      </if>
      <if test="pkQualityUser != null">
        pk_quality_user = #{pkQualityUser,jdbcType=INTEGER},
      </if>
      <if test="pkQualityTime != null">
        pk_quality_time = #{pkQualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pkQualityRemarks != null">
        pk_quality_remarks = #{pkQualityRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=VARCHAR},
      </if>
      <if test="containerType != null">
        container_type = #{containerType,jdbcType=VARCHAR},
      </if>
      <if test="containerUser != null">
        container_user = #{containerUser,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        yard = #{yard,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="unitPhoto != null">
        unit_photo = #{unitPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="afterPhoto != null">
        after_photo = #{afterPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="qualityPhoto != null">
        quality_photo = #{qualityPhoto,jdbcType=LONGVARCHAR},
      </if>
      <if test="recheckPhoto != null">
        recheck_photo = #{recheckPhoto,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where prod_course_id = #{prodCourseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sanlly.production.entity.UnitCourseWithBLOBs">
    update prod_unit_course
    set container_no = #{containerNo,jdbcType=VARCHAR},
      `zone` = #{zone,jdbcType=VARCHAR},
      is_preview = #{isPreview,jdbcType=VARCHAR},
      preview_state = #{previewState,jdbcType=VARCHAR},
      unit_type = #{unitType,jdbcType=VARCHAR},
      unit_company = #{unitCompany,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=VARCHAR},
      compressor = #{compressor,jdbcType=VARCHAR},
      control = #{control,jdbcType=VARCHAR},
      software_version = #{softwareVersion,jdbcType=VARCHAR},
      is_ca = #{isCa,jdbcType=VARCHAR},
      substrate_code = #{substrateCode,jdbcType=VARCHAR},
      is_temperature = #{isTemperature,jdbcType=VARCHAR},
      is_humidity = #{isHumidity,jdbcType=VARCHAR},
      is_ventilation = #{isVentilation,jdbcType=VARCHAR},
      is_fire_test = #{isFireTest,jdbcType=VARCHAR},
      pti_type = #{ptiType,jdbcType=VARCHAR},
      surrender_course = #{surrenderCourse,jdbcType=VARCHAR},
      out_remarks = #{outRemarks,jdbcType=VARCHAR},
      unit_state = #{unitState,jdbcType=VARCHAR},
      testing_user = #{testingUser,jdbcType=INTEGER},
      testing_state = #{testingState,jdbcType=VARCHAR},
      testing_man_hour_cost = #{testingManHourCost,jdbcType=DECIMAL},
      testing_material_cost = #{testingMaterialCost,jdbcType=DECIMAL},
      testing_thirdparty_money = #{testingThirdpartyMoney,jdbcType=DECIMAL},
      testing_money = #{testingMoney,jdbcType=DECIMAL},
      testing_reject = #{testingReject,jdbcType=VARCHAR},
      testing_time = #{testingTime,jdbcType=TIMESTAMP},
      testing_end_time = #{testingEndTime,jdbcType=TIMESTAMP},
      testing_remarks = #{testingRemarks,jdbcType=VARCHAR},
      audit_type = #{auditType,jdbcType=VARCHAR},
      audit_user = #{auditUser,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      valuation_no = #{valuationNo,jdbcType=VARCHAR},
      use_reply_state = #{useReplyState,jdbcType=VARCHAR},
      use_reply_time = #{useReplyTime,jdbcType=TIMESTAMP},
      thirdparty_charge_state = #{thirdpartyChargeState,jdbcType=VARCHAR},
      master_reply_state = #{masterReplyState,jdbcType=VARCHAR},
      master_reply_time = #{masterReplyTime,jdbcType=TIMESTAMP},
      already_use_cont_user = #{alreadyUseContUser,jdbcType=INTEGER},
      valuation_currency = #{valuationCurrency,jdbcType=VARCHAR},
      valuation_man_hour_cost = #{valuationManHourCost,jdbcType=DECIMAL},
      valuation_material_cost = #{valuationMaterialCost,jdbcType=DECIMAL},
      valuation_thirdparty_money = #{valuationThirdpartyMoney,jdbcType=DECIMAL},
      valuation_money = #{valuationMoney,jdbcType=DECIMAL},
      master_reply_money_rmb = #{masterReplyMoneyRmb,jdbcType=DECIMAL},
      master_reply_money_usd = #{masterReplyMoneyUsd,jdbcType=DECIMAL},
      use_reply_money_rmb = #{useReplyMoneyRmb,jdbcType=DECIMAL},
      use_reply_money_usd = #{useReplyMoneyUsd,jdbcType=DECIMAL},
      receipts_master_money_rmb = #{receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      receipts_master_money_usd = #{receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      receipts_use_money_rmb = #{receiptsUseMoneyRmb,jdbcType=DECIMAL},
      receipts_use_money_usd = #{receiptsUseMoneyUsd,jdbcType=DECIMAL},
      valuation_user = #{valuationUser,jdbcType=INTEGER},
      valuation_reject = #{valuationReject,jdbcType=VARCHAR},
      valuation_remarks = #{valuationRemarks,jdbcType=VARCHAR},
      valuation_time = #{valuationTime,jdbcType=TIMESTAMP},
      designate_user = #{designateUser,jdbcType=INTEGER},
      designate_time = #{designateTime,jdbcType=TIMESTAMP},
      referral_state = #{referralState,jdbcType=VARCHAR},
      finish_user = #{finishUser,jdbcType=INTEGER},
      referral_type = #{referralType,jdbcType=VARCHAR},
      referral_time = #{referralTime,jdbcType=TIMESTAMP},
      predict_time = #{predictTime,jdbcType=VARCHAR},
      man_hour = #{manHour,jdbcType=DOUBLE},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      finish_audit_user = #{finishAuditUser,jdbcType=INTEGER},
      finish_audit_time = #{finishAuditTime,jdbcType=TIMESTAMP},
      referral_remarks = #{referralRemarks,jdbcType=VARCHAR},
      quality_type = #{qualityType,jdbcType=VARCHAR},
      quality_state = #{qualityState,jdbcType=VARCHAR},
      quality_result = #{qualityResult,jdbcType=VARCHAR},
      quality_user = #{qualityUser,jdbcType=INTEGER},
      quality_time = #{qualityTime,jdbcType=TIMESTAMP},
      quality_timeout = #{qualityTimeout,jdbcType=DOUBLE},
      pk_quality_state = #{pkQualityState,jdbcType=VARCHAR},
      pk_quality_user = #{pkQualityUser,jdbcType=INTEGER},
      pk_quality_time = #{pkQualityTime,jdbcType=TIMESTAMP},
      pk_quality_remarks = #{pkQualityRemarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      `size` = #{size,jdbcType=VARCHAR},
      container_type = #{containerType,jdbcType=VARCHAR},
      container_user = #{containerUser,jdbcType=VARCHAR},
      yard = #{yard,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      unit_photo = #{unitPhoto,jdbcType=LONGVARCHAR},
      after_photo = #{afterPhoto,jdbcType=LONGVARCHAR},
      quality_photo = #{qualityPhoto,jdbcType=LONGVARCHAR},
      recheck_photo = #{recheckPhoto,jdbcType=LONGVARCHAR}
    where prod_course_id = #{prodCourseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.production.entity.UnitCourse">
    update prod_unit_course
    set container_no = #{containerNo,jdbcType=VARCHAR},
      `zone` = #{zone,jdbcType=VARCHAR},
      is_preview = #{isPreview,jdbcType=VARCHAR},
      preview_state = #{previewState,jdbcType=VARCHAR},
      unit_type = #{unitType,jdbcType=VARCHAR},
      unit_company = #{unitCompany,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=VARCHAR},
      compressor = #{compressor,jdbcType=VARCHAR},
      control = #{control,jdbcType=VARCHAR},
      software_version = #{softwareVersion,jdbcType=VARCHAR},
      is_ca = #{isCa,jdbcType=VARCHAR},
      substrate_code = #{substrateCode,jdbcType=VARCHAR},
      is_temperature = #{isTemperature,jdbcType=VARCHAR},
      is_humidity = #{isHumidity,jdbcType=VARCHAR},
      is_ventilation = #{isVentilation,jdbcType=VARCHAR},
      is_fire_test = #{isFireTest,jdbcType=VARCHAR},
      pti_type = #{ptiType,jdbcType=VARCHAR},
      surrender_course = #{surrenderCourse,jdbcType=VARCHAR},
      out_remarks = #{outRemarks,jdbcType=VARCHAR},
      unit_state = #{unitState,jdbcType=VARCHAR},
      testing_user = #{testingUser,jdbcType=INTEGER},
      testing_state = #{testingState,jdbcType=VARCHAR},
      testing_man_hour_cost = #{testingManHourCost,jdbcType=DECIMAL},
      testing_material_cost = #{testingMaterialCost,jdbcType=DECIMAL},
      testing_thirdparty_money = #{testingThirdpartyMoney,jdbcType=DECIMAL},
      testing_money = #{testingMoney,jdbcType=DECIMAL},
      testing_reject = #{testingReject,jdbcType=VARCHAR},
      testing_time = #{testingTime,jdbcType=TIMESTAMP},
      testing_end_time = #{testingEndTime,jdbcType=TIMESTAMP},
      testing_remarks = #{testingRemarks,jdbcType=VARCHAR},
      audit_type = #{auditType,jdbcType=VARCHAR},
      audit_user = #{auditUser,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      valuation_no = #{valuationNo,jdbcType=VARCHAR},
      use_reply_state = #{useReplyState,jdbcType=VARCHAR},
      use_reply_time = #{useReplyTime,jdbcType=TIMESTAMP},
      thirdparty_charge_state = #{thirdpartyChargeState,jdbcType=VARCHAR},
      master_reply_state = #{masterReplyState,jdbcType=VARCHAR},
      master_reply_time = #{masterReplyTime,jdbcType=TIMESTAMP},
      already_use_cont_user = #{alreadyUseContUser,jdbcType=INTEGER},
      valuation_currency = #{valuationCurrency,jdbcType=VARCHAR},
      valuation_man_hour_cost = #{valuationManHourCost,jdbcType=DECIMAL},
      valuation_material_cost = #{valuationMaterialCost,jdbcType=DECIMAL},
      valuation_thirdparty_money = #{valuationThirdpartyMoney,jdbcType=DECIMAL},
      valuation_money = #{valuationMoney,jdbcType=DECIMAL},
      master_reply_money_rmb = #{masterReplyMoneyRmb,jdbcType=DECIMAL},
      master_reply_money_usd = #{masterReplyMoneyUsd,jdbcType=DECIMAL},
      use_reply_money_rmb = #{useReplyMoneyRmb,jdbcType=DECIMAL},
      use_reply_money_usd = #{useReplyMoneyUsd,jdbcType=DECIMAL},
      receipts_master_money_rmb = #{receiptsMasterMoneyRmb,jdbcType=DECIMAL},
      receipts_master_money_usd = #{receiptsMasterMoneyUsd,jdbcType=DECIMAL},
      receipts_use_money_rmb = #{receiptsUseMoneyRmb,jdbcType=DECIMAL},
      receipts_use_money_usd = #{receiptsUseMoneyUsd,jdbcType=DECIMAL},
      valuation_user = #{valuationUser,jdbcType=INTEGER},
      valuation_reject = #{valuationReject,jdbcType=VARCHAR},
      valuation_remarks = #{valuationRemarks,jdbcType=VARCHAR},
      valuation_time = #{valuationTime,jdbcType=TIMESTAMP},
      designate_user = #{designateUser,jdbcType=INTEGER},
      designate_time = #{designateTime,jdbcType=TIMESTAMP},
      referral_state = #{referralState,jdbcType=VARCHAR},
      finish_user = #{finishUser,jdbcType=INTEGER},
      referral_type = #{referralType,jdbcType=VARCHAR},
      referral_time = #{referralTime,jdbcType=TIMESTAMP},
      predict_time = #{predictTime,jdbcType=VARCHAR},
      man_hour = #{manHour,jdbcType=DOUBLE},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      finish_audit_user = #{finishAuditUser,jdbcType=INTEGER},
      finish_audit_time = #{finishAuditTime,jdbcType=TIMESTAMP},
      referral_remarks = #{referralRemarks,jdbcType=VARCHAR},
      quality_type = #{qualityType,jdbcType=VARCHAR},
      quality_state = #{qualityState,jdbcType=VARCHAR},
      quality_result = #{qualityResult,jdbcType=VARCHAR},
      quality_user = #{qualityUser,jdbcType=INTEGER},
      quality_time = #{qualityTime,jdbcType=TIMESTAMP},
      quality_timeout = #{qualityTimeout,jdbcType=DOUBLE},
      pk_quality_state = #{pkQualityState,jdbcType=VARCHAR},
      pk_quality_user = #{pkQualityUser,jdbcType=INTEGER},
      pk_quality_time = #{pkQualityTime,jdbcType=TIMESTAMP},
      pk_quality_remarks = #{pkQualityRemarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      `size` = #{size,jdbcType=VARCHAR},
      container_type = #{containerType,jdbcType=VARCHAR},
      container_user = #{containerUser,jdbcType=VARCHAR},
      yard = #{yard,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR}
    where prod_course_id = #{prodCourseId,jdbcType=VARCHAR}
  </update>
</mapper>
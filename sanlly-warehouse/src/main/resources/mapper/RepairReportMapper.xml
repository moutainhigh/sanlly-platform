<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.RepairReportMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.RepairReport">
    <id column="ware_repair_report_id" jdbcType="INTEGER" property="wareRepairReportId" />
    <result column="ware_repair_store_id" jdbcType="INTEGER" property="wareRepairStoreId" />
    <result column="report_no" jdbcType="VARCHAR" property="reportNo" />
    <result column="processing_unit" jdbcType="VARCHAR" property="processingUnit" />
    <result column="processing_charges_tax" jdbcType="DECIMAL" property="processingChargesTax" />
    <result column="processing_invoice_type" jdbcType="VARCHAR" property="processingInvoiceType" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="repair_department" jdbcType="VARCHAR" property="repairDepartment" />
    <result column="yard" jdbcType="VARCHAR" property="yard" />
    <result column="test_user" jdbcType="INTEGER" property="testUser" />
    <result column="record_user" jdbcType="INTEGER" property="recordUser" />
    <result column="repair_user" jdbcType="INTEGER" property="repairUser" />
    <result column="repair_num" jdbcType="DOUBLE" property="repairNum" />
    <result column="new_serial" jdbcType="VARCHAR" property="newSerial" />
    <result column="fault_storage" jdbcType="VARCHAR" property="faultStorage" />
    <result column="waste_num" jdbcType="DOUBLE" property="wasteNum" />
    <result column="change_original" jdbcType="VARCHAR" property="changeOriginal" />
    <result column="fault_record" jdbcType="VARCHAR" property="faultRecord" />
    <result column="repair_record" jdbcType="VARCHAR" property="repairRecord" />
    <result column="repair_amount" jdbcType="DECIMAL" property="repairAmount" />
    <result column="repair_reason" jdbcType="VARCHAR" property="repairReason" />
    <result column="audit_status" jdbcType="VARCHAR" property="auditStatus" />
    <result column="reasons_rejection" jdbcType="VARCHAR" property="reasonsRejection" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="ware_entrusted_processing_id" jdbcType="INTEGER" property="wareEntrustedProcessingId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_repair_report_id, ware_repair_store_id, report_no, processing_unit, processing_charges_tax, 
    processing_invoice_type, manufacturer, company, repair_department, yard, test_user, 
    record_user, repair_user, repair_num, new_serial, fault_storage, waste_num, change_original, 
    fault_record, repair_record, repair_amount, repair_reason, audit_status, reasons_rejection, 
    remark, is_del, create_time, create_user, update_time, update_user, ware_entrusted_processing_id
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.RepairReportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_repair_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_repair_report
    where ware_repair_report_id = #{wareRepairReportId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_repair_report
    where ware_repair_report_id = #{wareRepairReportId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.RepairReportExample">
    delete from ware_repair_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.RepairReport">
    <selectKey keyProperty="wareRepairReportId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ware_repair_report (ware_repair_store_id, report_no, processing_unit, 
      processing_charges_tax, processing_invoice_type, 
      manufacturer, company, repair_department, 
      yard, test_user, record_user, 
      repair_user, repair_num, new_serial, 
      fault_storage, waste_num, change_original, 
      fault_record, repair_record, repair_amount, 
      repair_reason, audit_status, reasons_rejection, 
      remark, is_del, create_time, 
      create_user, update_time, update_user, 
      ware_entrusted_processing_id)
    values (#{wareRepairStoreId,jdbcType=INTEGER}, #{reportNo,jdbcType=VARCHAR}, #{processingUnit,jdbcType=VARCHAR}, 
      #{processingChargesTax,jdbcType=DECIMAL}, #{processingInvoiceType,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{repairDepartment,jdbcType=VARCHAR}, 
      #{yard,jdbcType=VARCHAR}, #{testUser,jdbcType=INTEGER}, #{recordUser,jdbcType=INTEGER}, 
      #{repairUser,jdbcType=INTEGER}, #{repairNum,jdbcType=DOUBLE}, #{newSerial,jdbcType=VARCHAR}, 
      #{faultStorage,jdbcType=VARCHAR}, #{wasteNum,jdbcType=DOUBLE}, #{changeOriginal,jdbcType=VARCHAR}, 
      #{faultRecord,jdbcType=VARCHAR}, #{repairRecord,jdbcType=VARCHAR}, #{repairAmount,jdbcType=DECIMAL}, 
      #{repairReason,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR}, #{reasonsRejection,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{wareEntrustedProcessingId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.RepairReport">
    <selectKey keyProperty="wareRepairReportId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ware_repair_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareRepairStoreId != null">
        ware_repair_store_id,
      </if>
      <if test="reportNo != null">
        report_no,
      </if>
      <if test="processingUnit != null">
        processing_unit,
      </if>
      <if test="processingChargesTax != null">
        processing_charges_tax,
      </if>
      <if test="processingInvoiceType != null">
        processing_invoice_type,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="repairDepartment != null">
        repair_department,
      </if>
      <if test="yard != null">
        yard,
      </if>
      <if test="testUser != null">
        test_user,
      </if>
      <if test="recordUser != null">
        record_user,
      </if>
      <if test="repairUser != null">
        repair_user,
      </if>
      <if test="repairNum != null">
        repair_num,
      </if>
      <if test="newSerial != null">
        new_serial,
      </if>
      <if test="faultStorage != null">
        fault_storage,
      </if>
      <if test="wasteNum != null">
        waste_num,
      </if>
      <if test="changeOriginal != null">
        change_original,
      </if>
      <if test="faultRecord != null">
        fault_record,
      </if>
      <if test="repairRecord != null">
        repair_record,
      </if>
      <if test="repairAmount != null">
        repair_amount,
      </if>
      <if test="repairReason != null">
        repair_reason,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="reasonsRejection != null">
        reasons_rejection,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="wareEntrustedProcessingId != null">
        ware_entrusted_processing_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareRepairStoreId != null">
        #{wareRepairStoreId,jdbcType=INTEGER},
      </if>
      <if test="reportNo != null">
        #{reportNo,jdbcType=VARCHAR},
      </if>
      <if test="processingUnit != null">
        #{processingUnit,jdbcType=VARCHAR},
      </if>
      <if test="processingChargesTax != null">
        #{processingChargesTax,jdbcType=DECIMAL},
      </if>
      <if test="processingInvoiceType != null">
        #{processingInvoiceType,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="repairDepartment != null">
        #{repairDepartment,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        #{yard,jdbcType=VARCHAR},
      </if>
      <if test="testUser != null">
        #{testUser,jdbcType=INTEGER},
      </if>
      <if test="recordUser != null">
        #{recordUser,jdbcType=INTEGER},
      </if>
      <if test="repairUser != null">
        #{repairUser,jdbcType=INTEGER},
      </if>
      <if test="repairNum != null">
        #{repairNum,jdbcType=DOUBLE},
      </if>
      <if test="newSerial != null">
        #{newSerial,jdbcType=VARCHAR},
      </if>
      <if test="faultStorage != null">
        #{faultStorage,jdbcType=VARCHAR},
      </if>
      <if test="wasteNum != null">
        #{wasteNum,jdbcType=DOUBLE},
      </if>
      <if test="changeOriginal != null">
        #{changeOriginal,jdbcType=VARCHAR},
      </if>
      <if test="faultRecord != null">
        #{faultRecord,jdbcType=VARCHAR},
      </if>
      <if test="repairRecord != null">
        #{repairRecord,jdbcType=VARCHAR},
      </if>
      <if test="repairAmount != null">
        #{repairAmount,jdbcType=DECIMAL},
      </if>
      <if test="repairReason != null">
        #{repairReason,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="reasonsRejection != null">
        #{reasonsRejection,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="wareEntrustedProcessingId != null">
        #{wareEntrustedProcessingId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.RepairReportExample" resultType="java.lang.Long">
    select count(*) from ware_repair_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_repair_report
    <set>
      <if test="record.wareRepairReportId != null">
        ware_repair_report_id = #{record.wareRepairReportId,jdbcType=INTEGER},
      </if>
      <if test="record.wareRepairStoreId != null">
        ware_repair_store_id = #{record.wareRepairStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.reportNo != null">
        report_no = #{record.reportNo,jdbcType=VARCHAR},
      </if>
      <if test="record.processingUnit != null">
        processing_unit = #{record.processingUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.processingChargesTax != null">
        processing_charges_tax = #{record.processingChargesTax,jdbcType=DECIMAL},
      </if>
      <if test="record.processingInvoiceType != null">
        processing_invoice_type = #{record.processingInvoiceType,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.repairDepartment != null">
        repair_department = #{record.repairDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.yard != null">
        yard = #{record.yard,jdbcType=VARCHAR},
      </if>
      <if test="record.testUser != null">
        test_user = #{record.testUser,jdbcType=INTEGER},
      </if>
      <if test="record.recordUser != null">
        record_user = #{record.recordUser,jdbcType=INTEGER},
      </if>
      <if test="record.repairUser != null">
        repair_user = #{record.repairUser,jdbcType=INTEGER},
      </if>
      <if test="record.repairNum != null">
        repair_num = #{record.repairNum,jdbcType=DOUBLE},
      </if>
      <if test="record.newSerial != null">
        new_serial = #{record.newSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.faultStorage != null">
        fault_storage = #{record.faultStorage,jdbcType=VARCHAR},
      </if>
      <if test="record.wasteNum != null">
        waste_num = #{record.wasteNum,jdbcType=DOUBLE},
      </if>
      <if test="record.changeOriginal != null">
        change_original = #{record.changeOriginal,jdbcType=VARCHAR},
      </if>
      <if test="record.faultRecord != null">
        fault_record = #{record.faultRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.repairRecord != null">
        repair_record = #{record.repairRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.repairAmount != null">
        repair_amount = #{record.repairAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.repairReason != null">
        repair_reason = #{record.repairReason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonsRejection != null">
        reasons_rejection = #{record.reasonsRejection,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.wareEntrustedProcessingId != null">
        ware_entrusted_processing_id = #{record.wareEntrustedProcessingId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_repair_report
    set ware_repair_report_id = #{record.wareRepairReportId,jdbcType=INTEGER},
      ware_repair_store_id = #{record.wareRepairStoreId,jdbcType=INTEGER},
      report_no = #{record.reportNo,jdbcType=VARCHAR},
      processing_unit = #{record.processingUnit,jdbcType=VARCHAR},
      processing_charges_tax = #{record.processingChargesTax,jdbcType=DECIMAL},
      processing_invoice_type = #{record.processingInvoiceType,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      repair_department = #{record.repairDepartment,jdbcType=VARCHAR},
      yard = #{record.yard,jdbcType=VARCHAR},
      test_user = #{record.testUser,jdbcType=INTEGER},
      record_user = #{record.recordUser,jdbcType=INTEGER},
      repair_user = #{record.repairUser,jdbcType=INTEGER},
      repair_num = #{record.repairNum,jdbcType=DOUBLE},
      new_serial = #{record.newSerial,jdbcType=VARCHAR},
      fault_storage = #{record.faultStorage,jdbcType=VARCHAR},
      waste_num = #{record.wasteNum,jdbcType=DOUBLE},
      change_original = #{record.changeOriginal,jdbcType=VARCHAR},
      fault_record = #{record.faultRecord,jdbcType=VARCHAR},
      repair_record = #{record.repairRecord,jdbcType=VARCHAR},
      repair_amount = #{record.repairAmount,jdbcType=DECIMAL},
      repair_reason = #{record.repairReason,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      reasons_rejection = #{record.reasonsRejection,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      ware_entrusted_processing_id = #{record.wareEntrustedProcessingId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.RepairReport">
    update ware_repair_report
    <set>
      <if test="wareRepairStoreId != null">
        ware_repair_store_id = #{wareRepairStoreId,jdbcType=INTEGER},
      </if>
      <if test="reportNo != null">
        report_no = #{reportNo,jdbcType=VARCHAR},
      </if>
      <if test="processingUnit != null">
        processing_unit = #{processingUnit,jdbcType=VARCHAR},
      </if>
      <if test="processingChargesTax != null">
        processing_charges_tax = #{processingChargesTax,jdbcType=DECIMAL},
      </if>
      <if test="processingInvoiceType != null">
        processing_invoice_type = #{processingInvoiceType,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="repairDepartment != null">
        repair_department = #{repairDepartment,jdbcType=VARCHAR},
      </if>
      <if test="yard != null">
        yard = #{yard,jdbcType=VARCHAR},
      </if>
      <if test="testUser != null">
        test_user = #{testUser,jdbcType=INTEGER},
      </if>
      <if test="recordUser != null">
        record_user = #{recordUser,jdbcType=INTEGER},
      </if>
      <if test="repairUser != null">
        repair_user = #{repairUser,jdbcType=INTEGER},
      </if>
      <if test="repairNum != null">
        repair_num = #{repairNum,jdbcType=DOUBLE},
      </if>
      <if test="newSerial != null">
        new_serial = #{newSerial,jdbcType=VARCHAR},
      </if>
      <if test="faultStorage != null">
        fault_storage = #{faultStorage,jdbcType=VARCHAR},
      </if>
      <if test="wasteNum != null">
        waste_num = #{wasteNum,jdbcType=DOUBLE},
      </if>
      <if test="changeOriginal != null">
        change_original = #{changeOriginal,jdbcType=VARCHAR},
      </if>
      <if test="faultRecord != null">
        fault_record = #{faultRecord,jdbcType=VARCHAR},
      </if>
      <if test="repairRecord != null">
        repair_record = #{repairRecord,jdbcType=VARCHAR},
      </if>
      <if test="repairAmount != null">
        repair_amount = #{repairAmount,jdbcType=DECIMAL},
      </if>
      <if test="repairReason != null">
        repair_reason = #{repairReason,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="reasonsRejection != null">
        reasons_rejection = #{reasonsRejection,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="wareEntrustedProcessingId != null">
        ware_entrusted_processing_id = #{wareEntrustedProcessingId,jdbcType=INTEGER},
      </if>
    </set>
    where ware_repair_report_id = #{wareRepairReportId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.RepairReport">
    update ware_repair_report
    set ware_repair_store_id = #{wareRepairStoreId,jdbcType=INTEGER},
      report_no = #{reportNo,jdbcType=VARCHAR},
      processing_unit = #{processingUnit,jdbcType=VARCHAR},
      processing_charges_tax = #{processingChargesTax,jdbcType=DECIMAL},
      processing_invoice_type = #{processingInvoiceType,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      repair_department = #{repairDepartment,jdbcType=VARCHAR},
      yard = #{yard,jdbcType=VARCHAR},
      test_user = #{testUser,jdbcType=INTEGER},
      record_user = #{recordUser,jdbcType=INTEGER},
      repair_user = #{repairUser,jdbcType=INTEGER},
      repair_num = #{repairNum,jdbcType=DOUBLE},
      new_serial = #{newSerial,jdbcType=VARCHAR},
      fault_storage = #{faultStorage,jdbcType=VARCHAR},
      waste_num = #{wasteNum,jdbcType=DOUBLE},
      change_original = #{changeOriginal,jdbcType=VARCHAR},
      fault_record = #{faultRecord,jdbcType=VARCHAR},
      repair_record = #{repairRecord,jdbcType=VARCHAR},
      repair_amount = #{repairAmount,jdbcType=DECIMAL},
      repair_reason = #{repairReason,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=VARCHAR},
      reasons_rejection = #{reasonsRejection,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      ware_entrusted_processing_id = #{wareEntrustedProcessingId,jdbcType=INTEGER}
    where ware_repair_report_id = #{wareRepairReportId,jdbcType=INTEGER}
  </update>
</mapper>
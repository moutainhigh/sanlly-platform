<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.WareRefrigeratorCompanyMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.WareRefrigeratorCompany">
    <id column="ware_refrigerator_company_id" jdbcType="INTEGER" property="wareRefrigeratorCompanyId" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="refrigerator_company_name" jdbcType="VARCHAR" property="refrigeratorCompanyName" />
    <result column="refrigerator_company_addr" jdbcType="VARCHAR" property="refrigeratorCompanyAddr" />
    <result column="applicable_models" jdbcType="VARCHAR" property="applicableModels" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="refrigerator_company_name_en" jdbcType="VARCHAR" property="refrigeratorCompanyNameEn" />
    <result column="refrigerator_company_code" jdbcType="VARCHAR" property="refrigeratorCompanyCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_refrigerator_company_id, `key`, refrigerator_company_name, refrigerator_company_addr, 
    applicable_models, remark, is_del, create_time, create_user, update_time, update_user, 
    refrigerator_company_name_en, refrigerator_company_code
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_refrigerator_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_refrigerator_company
    where ware_refrigerator_company_id = #{wareRefrigeratorCompanyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_refrigerator_company
    where ware_refrigerator_company_id = #{wareRefrigeratorCompanyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompanyExample">
    delete from ware_refrigerator_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompany">
    insert into ware_refrigerator_company (ware_refrigerator_company_id, `key`, refrigerator_company_name, 
      refrigerator_company_addr, applicable_models, 
      remark, is_del, create_time, 
      create_user, update_time, update_user, 
      refrigerator_company_name_en, refrigerator_company_code
      )
    values (#{wareRefrigeratorCompanyId,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{refrigeratorCompanyName,jdbcType=VARCHAR}, 
      #{refrigeratorCompanyAddr,jdbcType=VARCHAR}, #{applicableModels,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{refrigeratorCompanyNameEn,jdbcType=VARCHAR}, #{refrigeratorCompanyCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompany">
    insert into ware_refrigerator_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareRefrigeratorCompanyId != null">
        ware_refrigerator_company_id,
      </if>
      <if test="key != null">
        `key`,
      </if>
      <if test="refrigeratorCompanyName != null">
        refrigerator_company_name,
      </if>
      <if test="refrigeratorCompanyAddr != null">
        refrigerator_company_addr,
      </if>
      <if test="applicableModels != null">
        applicable_models,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="refrigeratorCompanyNameEn != null">
        refrigerator_company_name_en,
      </if>
      <if test="refrigeratorCompanyCode != null">
        refrigerator_company_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareRefrigeratorCompanyId != null">
        #{wareRefrigeratorCompanyId,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="refrigeratorCompanyName != null">
        #{refrigeratorCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="refrigeratorCompanyAddr != null">
        #{refrigeratorCompanyAddr,jdbcType=VARCHAR},
      </if>
      <if test="applicableModels != null">
        #{applicableModels,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="refrigeratorCompanyNameEn != null">
        #{refrigeratorCompanyNameEn,jdbcType=VARCHAR},
      </if>
      <if test="refrigeratorCompanyCode != null">
        #{refrigeratorCompanyCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompanyExample" resultType="java.lang.Long">
    select count(*) from ware_refrigerator_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_refrigerator_company
    <set>
      <if test="record.wareRefrigeratorCompanyId != null">
        ware_refrigerator_company_id = #{record.wareRefrigeratorCompanyId,jdbcType=INTEGER},
      </if>
      <if test="record.key != null">
        `key` = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.refrigeratorCompanyName != null">
        refrigerator_company_name = #{record.refrigeratorCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="record.refrigeratorCompanyAddr != null">
        refrigerator_company_addr = #{record.refrigeratorCompanyAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.applicableModels != null">
        applicable_models = #{record.applicableModels,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.refrigeratorCompanyNameEn != null">
        refrigerator_company_name_en = #{record.refrigeratorCompanyNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.refrigeratorCompanyCode != null">
        refrigerator_company_code = #{record.refrigeratorCompanyCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_refrigerator_company
    set ware_refrigerator_company_id = #{record.wareRefrigeratorCompanyId,jdbcType=INTEGER},
      `key` = #{record.key,jdbcType=VARCHAR},
      refrigerator_company_name = #{record.refrigeratorCompanyName,jdbcType=VARCHAR},
      refrigerator_company_addr = #{record.refrigeratorCompanyAddr,jdbcType=VARCHAR},
      applicable_models = #{record.applicableModels,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      refrigerator_company_name_en = #{record.refrigeratorCompanyNameEn,jdbcType=VARCHAR},
      refrigerator_company_code = #{record.refrigeratorCompanyCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompany">
    update ware_refrigerator_company
    <set>
      <if test="key != null">
        `key` = #{key,jdbcType=VARCHAR},
      </if>
      <if test="refrigeratorCompanyName != null">
        refrigerator_company_name = #{refrigeratorCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="refrigeratorCompanyAddr != null">
        refrigerator_company_addr = #{refrigeratorCompanyAddr,jdbcType=VARCHAR},
      </if>
      <if test="applicableModels != null">
        applicable_models = #{applicableModels,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="refrigeratorCompanyNameEn != null">
        refrigerator_company_name_en = #{refrigeratorCompanyNameEn,jdbcType=VARCHAR},
      </if>
      <if test="refrigeratorCompanyCode != null">
        refrigerator_company_code = #{refrigeratorCompanyCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ware_refrigerator_company_id = #{wareRefrigeratorCompanyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.WareRefrigeratorCompany">
    update ware_refrigerator_company
    set `key` = #{key,jdbcType=VARCHAR},
      refrigerator_company_name = #{refrigeratorCompanyName,jdbcType=VARCHAR},
      refrigerator_company_addr = #{refrigeratorCompanyAddr,jdbcType=VARCHAR},
      applicable_models = #{applicableModels,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      refrigerator_company_name_en = #{refrigeratorCompanyNameEn,jdbcType=VARCHAR},
      refrigerator_company_code = #{refrigeratorCompanyCode,jdbcType=VARCHAR}
    where ware_refrigerator_company_id = #{wareRefrigeratorCompanyId,jdbcType=INTEGER}
  </update>
</mapper>
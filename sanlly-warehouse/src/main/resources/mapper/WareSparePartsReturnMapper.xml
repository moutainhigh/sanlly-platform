<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.WareSparePartsReturnMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.WareSparePartsReturn">
    <id column="ware_spare_parts_return_id" jdbcType="INTEGER" property="wareSparePartsReturnId" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="no_type" jdbcType="VARCHAR" property="noType" />
    <result column="spare_parts_return_type" jdbcType="VARCHAR" property="sparePartsReturnType" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="site" jdbcType="VARCHAR" property="site" />
    <result column="return_yard" jdbcType="VARCHAR" property="returnYard" />
    <result column="return_warehouse" jdbcType="VARCHAR" property="returnWarehouse" />
    <result column="spare_parts" jdbcType="VARCHAR" property="spareParts" />
    <result column="spare_parts_batch" jdbcType="VARCHAR" property="sparePartsBatch" />
    <result column="return_num" jdbcType="DOUBLE" property="returnNum" />
    <result column="surplus_num" jdbcType="DOUBLE" property="surplusNum" />
    <result column="return_go" jdbcType="VARCHAR" property="returnGo" />
    <result column="go_describe" jdbcType="VARCHAR" property="goDescribe" />
    <result column="accept_user" jdbcType="INTEGER" property="acceptUser" />
    <result column="accept_date" jdbcType="TIMESTAMP" property="acceptDate" />
    <result column="audit_status" jdbcType="VARCHAR" property="auditStatus" />
    <result column="reasons_rejection" jdbcType="VARCHAR" property="reasonsRejection" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_spare_parts_return_id, `no`, no_type, spare_parts_return_type, company, site, 
    return_yard, return_warehouse, spare_parts, spare_parts_batch, return_num, surplus_num, 
    return_go, go_describe, accept_user, accept_date, audit_status, reasons_rejection, 
    remark, is_del, create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_spare_parts_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_spare_parts_return
    where ware_spare_parts_return_id = #{wareSparePartsReturnId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_spare_parts_return
    where ware_spare_parts_return_id = #{wareSparePartsReturnId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturnExample">
    delete from ware_spare_parts_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturn">
    insert into ware_spare_parts_return (ware_spare_parts_return_id, `no`, no_type, 
      spare_parts_return_type, company, site, 
      return_yard, return_warehouse, spare_parts, 
      spare_parts_batch, return_num, surplus_num, 
      return_go, go_describe, accept_user, 
      accept_date, audit_status, reasons_rejection, 
      remark, is_del, create_time, 
      create_user, update_time, update_user
      )
    values (#{wareSparePartsReturnId,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{noType,jdbcType=VARCHAR}, 
      #{sparePartsReturnType,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, 
      #{returnYard,jdbcType=VARCHAR}, #{returnWarehouse,jdbcType=VARCHAR}, #{spareParts,jdbcType=VARCHAR}, 
      #{sparePartsBatch,jdbcType=VARCHAR}, #{returnNum,jdbcType=DOUBLE}, #{surplusNum,jdbcType=DOUBLE}, 
      #{returnGo,jdbcType=VARCHAR}, #{goDescribe,jdbcType=VARCHAR}, #{acceptUser,jdbcType=INTEGER}, 
      #{acceptDate,jdbcType=TIMESTAMP}, #{auditStatus,jdbcType=VARCHAR}, #{reasonsRejection,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturn">
    insert into ware_spare_parts_return
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareSparePartsReturnId != null">
        ware_spare_parts_return_id,
      </if>
      <if test="no != null">
        `no`,
      </if>
      <if test="noType != null">
        no_type,
      </if>
      <if test="sparePartsReturnType != null">
        spare_parts_return_type,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="site != null">
        site,
      </if>
      <if test="returnYard != null">
        return_yard,
      </if>
      <if test="returnWarehouse != null">
        return_warehouse,
      </if>
      <if test="spareParts != null">
        spare_parts,
      </if>
      <if test="sparePartsBatch != null">
        spare_parts_batch,
      </if>
      <if test="returnNum != null">
        return_num,
      </if>
      <if test="surplusNum != null">
        surplus_num,
      </if>
      <if test="returnGo != null">
        return_go,
      </if>
      <if test="goDescribe != null">
        go_describe,
      </if>
      <if test="acceptUser != null">
        accept_user,
      </if>
      <if test="acceptDate != null">
        accept_date,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="reasonsRejection != null">
        reasons_rejection,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareSparePartsReturnId != null">
        #{wareSparePartsReturnId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="noType != null">
        #{noType,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsReturnType != null">
        #{sparePartsReturnType,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        #{site,jdbcType=VARCHAR},
      </if>
      <if test="returnYard != null">
        #{returnYard,jdbcType=VARCHAR},
      </if>
      <if test="returnWarehouse != null">
        #{returnWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null">
        #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsBatch != null">
        #{sparePartsBatch,jdbcType=VARCHAR},
      </if>
      <if test="returnNum != null">
        #{returnNum,jdbcType=DOUBLE},
      </if>
      <if test="surplusNum != null">
        #{surplusNum,jdbcType=DOUBLE},
      </if>
      <if test="returnGo != null">
        #{returnGo,jdbcType=VARCHAR},
      </if>
      <if test="goDescribe != null">
        #{goDescribe,jdbcType=VARCHAR},
      </if>
      <if test="acceptUser != null">
        #{acceptUser,jdbcType=INTEGER},
      </if>
      <if test="acceptDate != null">
        #{acceptDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="reasonsRejection != null">
        #{reasonsRejection,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturnExample" resultType="java.lang.Long">
    select count(*) from ware_spare_parts_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_spare_parts_return
    <set>
      <if test="record.wareSparePartsReturnId != null">
        ware_spare_parts_return_id = #{record.wareSparePartsReturnId,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        `no` = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.noType != null">
        no_type = #{record.noType,jdbcType=VARCHAR},
      </if>
      <if test="record.sparePartsReturnType != null">
        spare_parts_return_type = #{record.sparePartsReturnType,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.site != null">
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.returnYard != null">
        return_yard = #{record.returnYard,jdbcType=VARCHAR},
      </if>
      <if test="record.returnWarehouse != null">
        return_warehouse = #{record.returnWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.spareParts != null">
        spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      </if>
      <if test="record.sparePartsBatch != null">
        spare_parts_batch = #{record.sparePartsBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.returnNum != null">
        return_num = #{record.returnNum,jdbcType=DOUBLE},
      </if>
      <if test="record.surplusNum != null">
        surplus_num = #{record.surplusNum,jdbcType=DOUBLE},
      </if>
      <if test="record.returnGo != null">
        return_go = #{record.returnGo,jdbcType=VARCHAR},
      </if>
      <if test="record.goDescribe != null">
        go_describe = #{record.goDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptUser != null">
        accept_user = #{record.acceptUser,jdbcType=INTEGER},
      </if>
      <if test="record.acceptDate != null">
        accept_date = #{record.acceptDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonsRejection != null">
        reasons_rejection = #{record.reasonsRejection,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_spare_parts_return
    set ware_spare_parts_return_id = #{record.wareSparePartsReturnId,jdbcType=INTEGER},
      `no` = #{record.no,jdbcType=VARCHAR},
      no_type = #{record.noType,jdbcType=VARCHAR},
      spare_parts_return_type = #{record.sparePartsReturnType,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR},
      return_yard = #{record.returnYard,jdbcType=VARCHAR},
      return_warehouse = #{record.returnWarehouse,jdbcType=VARCHAR},
      spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      spare_parts_batch = #{record.sparePartsBatch,jdbcType=VARCHAR},
      return_num = #{record.returnNum,jdbcType=DOUBLE},
      surplus_num = #{record.surplusNum,jdbcType=DOUBLE},
      return_go = #{record.returnGo,jdbcType=VARCHAR},
      go_describe = #{record.goDescribe,jdbcType=VARCHAR},
      accept_user = #{record.acceptUser,jdbcType=INTEGER},
      accept_date = #{record.acceptDate,jdbcType=TIMESTAMP},
      audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      reasons_rejection = #{record.reasonsRejection,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturn">
    update ware_spare_parts_return
    <set>
      <if test="no != null">
        `no` = #{no,jdbcType=VARCHAR},
      </if>
      <if test="noType != null">
        no_type = #{noType,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsReturnType != null">
        spare_parts_return_type = #{sparePartsReturnType,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        site = #{site,jdbcType=VARCHAR},
      </if>
      <if test="returnYard != null">
        return_yard = #{returnYard,jdbcType=VARCHAR},
      </if>
      <if test="returnWarehouse != null">
        return_warehouse = #{returnWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null">
        spare_parts = #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsBatch != null">
        spare_parts_batch = #{sparePartsBatch,jdbcType=VARCHAR},
      </if>
      <if test="returnNum != null">
        return_num = #{returnNum,jdbcType=DOUBLE},
      </if>
      <if test="surplusNum != null">
        surplus_num = #{surplusNum,jdbcType=DOUBLE},
      </if>
      <if test="returnGo != null">
        return_go = #{returnGo,jdbcType=VARCHAR},
      </if>
      <if test="goDescribe != null">
        go_describe = #{goDescribe,jdbcType=VARCHAR},
      </if>
      <if test="acceptUser != null">
        accept_user = #{acceptUser,jdbcType=INTEGER},
      </if>
      <if test="acceptDate != null">
        accept_date = #{acceptDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="reasonsRejection != null">
        reasons_rejection = #{reasonsRejection,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ware_spare_parts_return_id = #{wareSparePartsReturnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.WareSparePartsReturn">
    update ware_spare_parts_return
    set `no` = #{no,jdbcType=VARCHAR},
      no_type = #{noType,jdbcType=VARCHAR},
      spare_parts_return_type = #{sparePartsReturnType,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      return_yard = #{returnYard,jdbcType=VARCHAR},
      return_warehouse = #{returnWarehouse,jdbcType=VARCHAR},
      spare_parts = #{spareParts,jdbcType=VARCHAR},
      spare_parts_batch = #{sparePartsBatch,jdbcType=VARCHAR},
      return_num = #{returnNum,jdbcType=DOUBLE},
      surplus_num = #{surplusNum,jdbcType=DOUBLE},
      return_go = #{returnGo,jdbcType=VARCHAR},
      go_describe = #{goDescribe,jdbcType=VARCHAR},
      accept_user = #{acceptUser,jdbcType=INTEGER},
      accept_date = #{acceptDate,jdbcType=TIMESTAMP},
      audit_status = #{auditStatus,jdbcType=VARCHAR},
      reasons_rejection = #{reasonsRejection,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where ware_spare_parts_return_id = #{wareSparePartsReturnId,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.WareLaborAdvanceReceiveMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.WareLaborAdvanceReceive">
    <id column="ware_labor_advance_receive" jdbcType="INTEGER" property="wareLaborAdvanceReceive" />
    <result column="ware_labor_advance_receive_no" jdbcType="VARCHAR" property="wareLaborAdvanceReceiveNo" />
    <result column="user" jdbcType="INTEGER" property="user" />
    <result column="spare_parts" jdbcType="VARCHAR" property="spareParts" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="receive_num" jdbcType="DOUBLE" property="receiveNum" />
    <result column="receive_date" jdbcType="TIMESTAMP" property="receiveDate" />
    <result column="is_receive" jdbcType="VARCHAR" property="isReceive" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_labor_advance_receive, ware_labor_advance_receive_no, `user`, spare_parts, model, 
    receive_num, receive_date, is_receive, is_del, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceiveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_labor_advance_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_labor_advance_receive
    where ware_labor_advance_receive = #{wareLaborAdvanceReceive,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_labor_advance_receive
    where ware_labor_advance_receive = #{wareLaborAdvanceReceive,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceiveExample">
    delete from ware_labor_advance_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceive">
    insert into ware_labor_advance_receive (ware_labor_advance_receive, ware_labor_advance_receive_no, 
      `user`, spare_parts, model, 
      receive_num, receive_date, is_receive, 
      is_del, create_time, create_user, 
      update_time, update_user)
    values (#{wareLaborAdvanceReceive,jdbcType=INTEGER}, #{wareLaborAdvanceReceiveNo,jdbcType=VARCHAR}, 
      #{user,jdbcType=INTEGER}, #{spareParts,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{receiveNum,jdbcType=DOUBLE}, #{receiveDate,jdbcType=TIMESTAMP}, #{isReceive,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceive">
    insert into ware_labor_advance_receive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareLaborAdvanceReceive != null">
        ware_labor_advance_receive,
      </if>
      <if test="wareLaborAdvanceReceiveNo != null">
        ware_labor_advance_receive_no,
      </if>
      <if test="user != null">
        `user`,
      </if>
      <if test="spareParts != null">
        spare_parts,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="receiveNum != null">
        receive_num,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="isReceive != null">
        is_receive,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareLaborAdvanceReceive != null">
        #{wareLaborAdvanceReceive,jdbcType=INTEGER},
      </if>
      <if test="wareLaborAdvanceReceiveNo != null">
        #{wareLaborAdvanceReceiveNo,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=INTEGER},
      </if>
      <if test="spareParts != null">
        #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="receiveNum != null">
        #{receiveNum,jdbcType=DOUBLE},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isReceive != null">
        #{isReceive,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceiveExample" resultType="java.lang.Long">
    select count(*) from ware_labor_advance_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_labor_advance_receive
    <set>
      <if test="record.wareLaborAdvanceReceive != null">
        ware_labor_advance_receive = #{record.wareLaborAdvanceReceive,jdbcType=INTEGER},
      </if>
      <if test="record.wareLaborAdvanceReceiveNo != null">
        ware_labor_advance_receive_no = #{record.wareLaborAdvanceReceiveNo,jdbcType=VARCHAR},
      </if>
      <if test="record.user != null">
        `user` = #{record.user,jdbcType=INTEGER},
      </if>
      <if test="record.spareParts != null">
        spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveNum != null">
        receive_num = #{record.receiveNum,jdbcType=DOUBLE},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isReceive != null">
        is_receive = #{record.isReceive,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_labor_advance_receive
    set ware_labor_advance_receive = #{record.wareLaborAdvanceReceive,jdbcType=INTEGER},
      ware_labor_advance_receive_no = #{record.wareLaborAdvanceReceiveNo,jdbcType=VARCHAR},
      `user` = #{record.user,jdbcType=INTEGER},
      spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      receive_num = #{record.receiveNum,jdbcType=DOUBLE},
      receive_date = #{record.receiveDate,jdbcType=TIMESTAMP},
      is_receive = #{record.isReceive,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceive">
    update ware_labor_advance_receive
    <set>
      <if test="wareLaborAdvanceReceiveNo != null">
        ware_labor_advance_receive_no = #{wareLaborAdvanceReceiveNo,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        `user` = #{user,jdbcType=INTEGER},
      </if>
      <if test="spareParts != null">
        spare_parts = #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="receiveNum != null">
        receive_num = #{receiveNum,jdbcType=DOUBLE},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isReceive != null">
        is_receive = #{isReceive,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ware_labor_advance_receive = #{wareLaborAdvanceReceive,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.WareLaborAdvanceReceive">
    update ware_labor_advance_receive
    set ware_labor_advance_receive_no = #{wareLaborAdvanceReceiveNo,jdbcType=VARCHAR},
      `user` = #{user,jdbcType=INTEGER},
      spare_parts = #{spareParts,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      receive_num = #{receiveNum,jdbcType=DOUBLE},
      receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      is_receive = #{isReceive,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where ware_labor_advance_receive = #{wareLaborAdvanceReceive,jdbcType=INTEGER}
  </update>
</mapper>
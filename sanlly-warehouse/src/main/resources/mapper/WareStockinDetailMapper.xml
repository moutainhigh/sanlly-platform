<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.WareStockinDetailMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.WareStockinDetail">
    <id column="ware_stockin_detail_id" jdbcType="INTEGER" property="wareStockinDetailId" />
    <result column="ware_stockin_id" jdbcType="INTEGER" property="wareStockinId" />
    <result column="stockin_batch" jdbcType="VARCHAR" property="stockinBatch" />
    <result column="spare_parts_original_batch" jdbcType="VARCHAR" property="sparePartsOriginalBatch" />
    <result column="spare_parts" jdbcType="VARCHAR" property="spareParts" />
    <result column="length" jdbcType="DOUBLE" property="length" />
    <result column="width" jdbcType="DOUBLE" property="width" />
    <result column="entry_area" jdbcType="DOUBLE" property="entryArea" />
    <result column="delivery_num" jdbcType="DOUBLE" property="deliveryNum" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="entry_num" jdbcType="DOUBLE" property="entryNum" />
    <result column="storage_location" jdbcType="VARCHAR" property="storageLocation" />
    <result column="tariff" jdbcType="DECIMAL" property="tariff" />
    <result column="tariff_status" jdbcType="VARCHAR" property="tariffStatus" />
    <result column="tariff_no" jdbcType="VARCHAR" property="tariffNo" />
    <result column="tariff_date" jdbcType="TIMESTAMP" property="tariffDate" />
    <result column="vat" jdbcType="DECIMAL" property="vat" />
    <result column="freight" jdbcType="DECIMAL" property="freight" />
    <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
    <result column="warehouse_type" jdbcType="VARCHAR" property="warehouseType" />
    <result column="invoice_price" jdbcType="DECIMAL" property="invoicePrice" />
    <result column="core" jdbcType="DECIMAL" property="core" />
    <result column="entry_price" jdbcType="DECIMAL" property="entryPrice" />
    <result column="old_stockin_date" jdbcType="TIMESTAMP" property="oldStockinDate" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="surplus_num" jdbcType="DOUBLE" property="surplusNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_stockin_detail_id, ware_stockin_id, stockin_batch, spare_parts_original_batch, 
    spare_parts, `length`, width, entry_area, delivery_num, total_amount, entry_num, 
    storage_location, tariff, tariff_status, tariff_no, tariff_date, vat, freight, warehouse, 
    warehouse_type, invoice_price, core, entry_price, old_stockin_date, is_del, remark, 
    create_time, create_user, update_time, update_user, surplus_num
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.WareStockinDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_stockin_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_stockin_detail
    where ware_stockin_detail_id = #{wareStockinDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_stockin_detail
    where ware_stockin_detail_id = #{wareStockinDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.WareStockinDetailExample">
    delete from ware_stockin_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.WareStockinDetail">
    insert into ware_stockin_detail (ware_stockin_detail_id, ware_stockin_id, 
      stockin_batch, spare_parts_original_batch, 
      spare_parts, `length`, width, 
      entry_area, delivery_num, total_amount, 
      entry_num, storage_location, tariff, 
      tariff_status, tariff_no, tariff_date, 
      vat, freight, warehouse, 
      warehouse_type, invoice_price, core, 
      entry_price, old_stockin_date, is_del, 
      remark, create_time, create_user, 
      update_time, update_user, surplus_num
      )
    values (#{wareStockinDetailId,jdbcType=INTEGER}, #{wareStockinId,jdbcType=INTEGER}, 
      #{stockinBatch,jdbcType=VARCHAR}, #{sparePartsOriginalBatch,jdbcType=VARCHAR}, 
      #{spareParts,jdbcType=VARCHAR}, #{length,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, 
      #{entryArea,jdbcType=DOUBLE}, #{deliveryNum,jdbcType=DOUBLE}, #{totalAmount,jdbcType=DECIMAL}, 
      #{entryNum,jdbcType=DOUBLE}, #{storageLocation,jdbcType=VARCHAR}, #{tariff,jdbcType=DECIMAL}, 
      #{tariffStatus,jdbcType=VARCHAR}, #{tariffNo,jdbcType=VARCHAR}, #{tariffDate,jdbcType=TIMESTAMP}, 
      #{vat,jdbcType=DECIMAL}, #{freight,jdbcType=DECIMAL}, #{warehouse,jdbcType=VARCHAR}, 
      #{warehouseType,jdbcType=VARCHAR}, #{invoicePrice,jdbcType=DECIMAL}, #{core,jdbcType=DECIMAL}, 
      #{entryPrice,jdbcType=DECIMAL}, #{oldStockinDate,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{surplusNum,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.WareStockinDetail">
    insert into ware_stockin_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareStockinDetailId != null">
        ware_stockin_detail_id,
      </if>
      <if test="wareStockinId != null">
        ware_stockin_id,
      </if>
      <if test="stockinBatch != null">
        stockin_batch,
      </if>
      <if test="sparePartsOriginalBatch != null">
        spare_parts_original_batch,
      </if>
      <if test="spareParts != null">
        spare_parts,
      </if>
      <if test="length != null">
        `length`,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="entryArea != null">
        entry_area,
      </if>
      <if test="deliveryNum != null">
        delivery_num,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="entryNum != null">
        entry_num,
      </if>
      <if test="storageLocation != null">
        storage_location,
      </if>
      <if test="tariff != null">
        tariff,
      </if>
      <if test="tariffStatus != null">
        tariff_status,
      </if>
      <if test="tariffNo != null">
        tariff_no,
      </if>
      <if test="tariffDate != null">
        tariff_date,
      </if>
      <if test="vat != null">
        vat,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="warehouse != null">
        warehouse,
      </if>
      <if test="warehouseType != null">
        warehouse_type,
      </if>
      <if test="invoicePrice != null">
        invoice_price,
      </if>
      <if test="core != null">
        core,
      </if>
      <if test="entryPrice != null">
        entry_price,
      </if>
      <if test="oldStockinDate != null">
        old_stockin_date,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="surplusNum != null">
        surplus_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareStockinDetailId != null">
        #{wareStockinDetailId,jdbcType=INTEGER},
      </if>
      <if test="wareStockinId != null">
        #{wareStockinId,jdbcType=INTEGER},
      </if>
      <if test="stockinBatch != null">
        #{stockinBatch,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsOriginalBatch != null">
        #{sparePartsOriginalBatch,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null">
        #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="entryArea != null">
        #{entryArea,jdbcType=DOUBLE},
      </if>
      <if test="deliveryNum != null">
        #{deliveryNum,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="entryNum != null">
        #{entryNum,jdbcType=DOUBLE},
      </if>
      <if test="storageLocation != null">
        #{storageLocation,jdbcType=VARCHAR},
      </if>
      <if test="tariff != null">
        #{tariff,jdbcType=DECIMAL},
      </if>
      <if test="tariffStatus != null">
        #{tariffStatus,jdbcType=VARCHAR},
      </if>
      <if test="tariffNo != null">
        #{tariffNo,jdbcType=VARCHAR},
      </if>
      <if test="tariffDate != null">
        #{tariffDate,jdbcType=TIMESTAMP},
      </if>
      <if test="vat != null">
        #{vat,jdbcType=DECIMAL},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=DECIMAL},
      </if>
      <if test="warehouse != null">
        #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="warehouseType != null">
        #{warehouseType,jdbcType=VARCHAR},
      </if>
      <if test="invoicePrice != null">
        #{invoicePrice,jdbcType=DECIMAL},
      </if>
      <if test="core != null">
        #{core,jdbcType=DECIMAL},
      </if>
      <if test="entryPrice != null">
        #{entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="oldStockinDate != null">
        #{oldStockinDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="surplusNum != null">
        #{surplusNum,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.WareStockinDetailExample" resultType="java.lang.Long">
    select count(*) from ware_stockin_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_stockin_detail
    <set>
      <if test="record.wareStockinDetailId != null">
        ware_stockin_detail_id = #{record.wareStockinDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.wareStockinId != null">
        ware_stockin_id = #{record.wareStockinId,jdbcType=INTEGER},
      </if>
      <if test="record.stockinBatch != null">
        stockin_batch = #{record.stockinBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.sparePartsOriginalBatch != null">
        spare_parts_original_batch = #{record.sparePartsOriginalBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.spareParts != null">
        spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      </if>
      <if test="record.length != null">
        `length` = #{record.length,jdbcType=DOUBLE},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=DOUBLE},
      </if>
      <if test="record.entryArea != null">
        entry_area = #{record.entryArea,jdbcType=DOUBLE},
      </if>
      <if test="record.deliveryNum != null">
        delivery_num = #{record.deliveryNum,jdbcType=DOUBLE},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.entryNum != null">
        entry_num = #{record.entryNum,jdbcType=DOUBLE},
      </if>
      <if test="record.storageLocation != null">
        storage_location = #{record.storageLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.tariff != null">
        tariff = #{record.tariff,jdbcType=DECIMAL},
      </if>
      <if test="record.tariffStatus != null">
        tariff_status = #{record.tariffStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.tariffNo != null">
        tariff_no = #{record.tariffNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tariffDate != null">
        tariff_date = #{record.tariffDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vat != null">
        vat = #{record.vat,jdbcType=DECIMAL},
      </if>
      <if test="record.freight != null">
        freight = #{record.freight,jdbcType=DECIMAL},
      </if>
      <if test="record.warehouse != null">
        warehouse = #{record.warehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouseType != null">
        warehouse_type = #{record.warehouseType,jdbcType=VARCHAR},
      </if>
      <if test="record.invoicePrice != null">
        invoice_price = #{record.invoicePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.core != null">
        core = #{record.core,jdbcType=DECIMAL},
      </if>
      <if test="record.entryPrice != null">
        entry_price = #{record.entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.oldStockinDate != null">
        old_stockin_date = #{record.oldStockinDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.surplusNum != null">
        surplus_num = #{record.surplusNum,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_stockin_detail
    set ware_stockin_detail_id = #{record.wareStockinDetailId,jdbcType=INTEGER},
      ware_stockin_id = #{record.wareStockinId,jdbcType=INTEGER},
      stockin_batch = #{record.stockinBatch,jdbcType=VARCHAR},
      spare_parts_original_batch = #{record.sparePartsOriginalBatch,jdbcType=VARCHAR},
      spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      `length` = #{record.length,jdbcType=DOUBLE},
      width = #{record.width,jdbcType=DOUBLE},
      entry_area = #{record.entryArea,jdbcType=DOUBLE},
      delivery_num = #{record.deliveryNum,jdbcType=DOUBLE},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      entry_num = #{record.entryNum,jdbcType=DOUBLE},
      storage_location = #{record.storageLocation,jdbcType=VARCHAR},
      tariff = #{record.tariff,jdbcType=DECIMAL},
      tariff_status = #{record.tariffStatus,jdbcType=VARCHAR},
      tariff_no = #{record.tariffNo,jdbcType=VARCHAR},
      tariff_date = #{record.tariffDate,jdbcType=TIMESTAMP},
      vat = #{record.vat,jdbcType=DECIMAL},
      freight = #{record.freight,jdbcType=DECIMAL},
      warehouse = #{record.warehouse,jdbcType=VARCHAR},
      warehouse_type = #{record.warehouseType,jdbcType=VARCHAR},
      invoice_price = #{record.invoicePrice,jdbcType=DECIMAL},
      core = #{record.core,jdbcType=DECIMAL},
      entry_price = #{record.entryPrice,jdbcType=DECIMAL},
      old_stockin_date = #{record.oldStockinDate,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      surplus_num = #{record.surplusNum,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.WareStockinDetail">
    update ware_stockin_detail
    <set>
      <if test="wareStockinId != null">
        ware_stockin_id = #{wareStockinId,jdbcType=INTEGER},
      </if>
      <if test="stockinBatch != null">
        stockin_batch = #{stockinBatch,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsOriginalBatch != null">
        spare_parts_original_batch = #{sparePartsOriginalBatch,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null">
        spare_parts = #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        `length` = #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=DOUBLE},
      </if>
      <if test="entryArea != null">
        entry_area = #{entryArea,jdbcType=DOUBLE},
      </if>
      <if test="deliveryNum != null">
        delivery_num = #{deliveryNum,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="entryNum != null">
        entry_num = #{entryNum,jdbcType=DOUBLE},
      </if>
      <if test="storageLocation != null">
        storage_location = #{storageLocation,jdbcType=VARCHAR},
      </if>
      <if test="tariff != null">
        tariff = #{tariff,jdbcType=DECIMAL},
      </if>
      <if test="tariffStatus != null">
        tariff_status = #{tariffStatus,jdbcType=VARCHAR},
      </if>
      <if test="tariffNo != null">
        tariff_no = #{tariffNo,jdbcType=VARCHAR},
      </if>
      <if test="tariffDate != null">
        tariff_date = #{tariffDate,jdbcType=TIMESTAMP},
      </if>
      <if test="vat != null">
        vat = #{vat,jdbcType=DECIMAL},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=DECIMAL},
      </if>
      <if test="warehouse != null">
        warehouse = #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="warehouseType != null">
        warehouse_type = #{warehouseType,jdbcType=VARCHAR},
      </if>
      <if test="invoicePrice != null">
        invoice_price = #{invoicePrice,jdbcType=DECIMAL},
      </if>
      <if test="core != null">
        core = #{core,jdbcType=DECIMAL},
      </if>
      <if test="entryPrice != null">
        entry_price = #{entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="oldStockinDate != null">
        old_stockin_date = #{oldStockinDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="surplusNum != null">
        surplus_num = #{surplusNum,jdbcType=DOUBLE},
      </if>
    </set>
    where ware_stockin_detail_id = #{wareStockinDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.WareStockinDetail">
    update ware_stockin_detail
    set ware_stockin_id = #{wareStockinId,jdbcType=INTEGER},
      stockin_batch = #{stockinBatch,jdbcType=VARCHAR},
      spare_parts_original_batch = #{sparePartsOriginalBatch,jdbcType=VARCHAR},
      spare_parts = #{spareParts,jdbcType=VARCHAR},
      `length` = #{length,jdbcType=DOUBLE},
      width = #{width,jdbcType=DOUBLE},
      entry_area = #{entryArea,jdbcType=DOUBLE},
      delivery_num = #{deliveryNum,jdbcType=DOUBLE},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      entry_num = #{entryNum,jdbcType=DOUBLE},
      storage_location = #{storageLocation,jdbcType=VARCHAR},
      tariff = #{tariff,jdbcType=DECIMAL},
      tariff_status = #{tariffStatus,jdbcType=VARCHAR},
      tariff_no = #{tariffNo,jdbcType=VARCHAR},
      tariff_date = #{tariffDate,jdbcType=TIMESTAMP},
      vat = #{vat,jdbcType=DECIMAL},
      freight = #{freight,jdbcType=DECIMAL},
      warehouse = #{warehouse,jdbcType=VARCHAR},
      warehouse_type = #{warehouseType,jdbcType=VARCHAR},
      invoice_price = #{invoicePrice,jdbcType=DECIMAL},
      core = #{core,jdbcType=DECIMAL},
      entry_price = #{entryPrice,jdbcType=DECIMAL},
      old_stockin_date = #{oldStockinDate,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      surplus_num = #{surplusNum,jdbcType=DOUBLE}
    where ware_stockin_detail_id = #{wareStockinDetailId,jdbcType=INTEGER}
  </update>
</mapper>
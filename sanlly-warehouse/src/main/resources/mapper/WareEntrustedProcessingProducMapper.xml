<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.WareEntrustedProcessingProducMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.WareEntrustedProcessingProduc">
    <id column="ware_entrusted_processing_produc_id" jdbcType="INTEGER" property="wareEntrustedProcessingProducId" />
    <result column="entrusted_processing_no" jdbcType="VARCHAR" property="entrustedProcessingNo" />
    <result column="spare_parts" jdbcType="VARCHAR" property="spareParts" />
    <result column="warehouse_type" jdbcType="VARCHAR" property="warehouseType" />
    <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="entry_status" jdbcType="VARCHAR" property="entryStatus" />
    <result column="entry_length" jdbcType="DOUBLE" property="entryLength" />
    <result column="entry_wide" jdbcType="DOUBLE" property="entryWide" />
    <result column="entry_num" jdbcType="DOUBLE" property="entryNum" />
    <result column="entry_price" jdbcType="DECIMAL" property="entryPrice" />
    <result column="invoice_price" jdbcType="DECIMAL" property="invoicePrice" />
    <result column="processing_charges" jdbcType="DECIMAL" property="processingCharges" />
    <result column="vat" jdbcType="DECIMAL" property="vat" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_entrusted_processing_produc_id, entrusted_processing_no, spare_parts, warehouse_type, 
    warehouse, company, entry_status, entry_length, entry_wide, entry_num, entry_price, 
    invoice_price, processing_charges, vat, total_amount, remark, is_del, create_time, 
    create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProducExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_entrusted_processing_produc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_entrusted_processing_produc
    where ware_entrusted_processing_produc_id = #{wareEntrustedProcessingProducId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_entrusted_processing_produc
    where ware_entrusted_processing_produc_id = #{wareEntrustedProcessingProducId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProducExample">
    delete from ware_entrusted_processing_produc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProduc">
    insert into ware_entrusted_processing_produc (ware_entrusted_processing_produc_id, entrusted_processing_no, 
      spare_parts, warehouse_type, warehouse, 
      company, entry_status, entry_length, 
      entry_wide, entry_num, entry_price, 
      invoice_price, processing_charges, vat, 
      total_amount, remark, is_del, 
      create_time, create_user, update_time, 
      update_user)
    values (#{wareEntrustedProcessingProducId,jdbcType=INTEGER}, #{entrustedProcessingNo,jdbcType=VARCHAR}, 
      #{spareParts,jdbcType=VARCHAR}, #{warehouseType,jdbcType=VARCHAR}, #{warehouse,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{entryStatus,jdbcType=VARCHAR}, #{entryLength,jdbcType=DOUBLE}, 
      #{entryWide,jdbcType=DOUBLE}, #{entryNum,jdbcType=DOUBLE}, #{entryPrice,jdbcType=DECIMAL}, 
      #{invoicePrice,jdbcType=DECIMAL}, #{processingCharges,jdbcType=DECIMAL}, #{vat,jdbcType=DECIMAL}, 
      #{totalAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProduc">
    insert into ware_entrusted_processing_produc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareEntrustedProcessingProducId != null">
        ware_entrusted_processing_produc_id,
      </if>
      <if test="entrustedProcessingNo != null">
        entrusted_processing_no,
      </if>
      <if test="spareParts != null">
        spare_parts,
      </if>
      <if test="warehouseType != null">
        warehouse_type,
      </if>
      <if test="warehouse != null">
        warehouse,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="entryStatus != null">
        entry_status,
      </if>
      <if test="entryLength != null">
        entry_length,
      </if>
      <if test="entryWide != null">
        entry_wide,
      </if>
      <if test="entryNum != null">
        entry_num,
      </if>
      <if test="entryPrice != null">
        entry_price,
      </if>
      <if test="invoicePrice != null">
        invoice_price,
      </if>
      <if test="processingCharges != null">
        processing_charges,
      </if>
      <if test="vat != null">
        vat,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareEntrustedProcessingProducId != null">
        #{wareEntrustedProcessingProducId,jdbcType=INTEGER},
      </if>
      <if test="entrustedProcessingNo != null">
        #{entrustedProcessingNo,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null">
        #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="warehouseType != null">
        #{warehouseType,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null">
        #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="entryStatus != null">
        #{entryStatus,jdbcType=VARCHAR},
      </if>
      <if test="entryLength != null">
        #{entryLength,jdbcType=DOUBLE},
      </if>
      <if test="entryWide != null">
        #{entryWide,jdbcType=DOUBLE},
      </if>
      <if test="entryNum != null">
        #{entryNum,jdbcType=DOUBLE},
      </if>
      <if test="entryPrice != null">
        #{entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="invoicePrice != null">
        #{invoicePrice,jdbcType=DECIMAL},
      </if>
      <if test="processingCharges != null">
        #{processingCharges,jdbcType=DECIMAL},
      </if>
      <if test="vat != null">
        #{vat,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProducExample" resultType="java.lang.Long">
    select count(*) from ware_entrusted_processing_produc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_entrusted_processing_produc
    <set>
      <if test="record.wareEntrustedProcessingProducId != null">
        ware_entrusted_processing_produc_id = #{record.wareEntrustedProcessingProducId,jdbcType=INTEGER},
      </if>
      <if test="record.entrustedProcessingNo != null">
        entrusted_processing_no = #{record.entrustedProcessingNo,jdbcType=VARCHAR},
      </if>
      <if test="record.spareParts != null">
        spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouseType != null">
        warehouse_type = #{record.warehouseType,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouse != null">
        warehouse = #{record.warehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.entryStatus != null">
        entry_status = #{record.entryStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.entryLength != null">
        entry_length = #{record.entryLength,jdbcType=DOUBLE},
      </if>
      <if test="record.entryWide != null">
        entry_wide = #{record.entryWide,jdbcType=DOUBLE},
      </if>
      <if test="record.entryNum != null">
        entry_num = #{record.entryNum,jdbcType=DOUBLE},
      </if>
      <if test="record.entryPrice != null">
        entry_price = #{record.entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.invoicePrice != null">
        invoice_price = #{record.invoicePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.processingCharges != null">
        processing_charges = #{record.processingCharges,jdbcType=DECIMAL},
      </if>
      <if test="record.vat != null">
        vat = #{record.vat,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_entrusted_processing_produc
    set ware_entrusted_processing_produc_id = #{record.wareEntrustedProcessingProducId,jdbcType=INTEGER},
      entrusted_processing_no = #{record.entrustedProcessingNo,jdbcType=VARCHAR},
      spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      warehouse_type = #{record.warehouseType,jdbcType=VARCHAR},
      warehouse = #{record.warehouse,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      entry_status = #{record.entryStatus,jdbcType=VARCHAR},
      entry_length = #{record.entryLength,jdbcType=DOUBLE},
      entry_wide = #{record.entryWide,jdbcType=DOUBLE},
      entry_num = #{record.entryNum,jdbcType=DOUBLE},
      entry_price = #{record.entryPrice,jdbcType=DECIMAL},
      invoice_price = #{record.invoicePrice,jdbcType=DECIMAL},
      processing_charges = #{record.processingCharges,jdbcType=DECIMAL},
      vat = #{record.vat,jdbcType=DECIMAL},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProduc">
    update ware_entrusted_processing_produc
    <set>
      <if test="entrustedProcessingNo != null">
        entrusted_processing_no = #{entrustedProcessingNo,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null">
        spare_parts = #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="warehouseType != null">
        warehouse_type = #{warehouseType,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null">
        warehouse = #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="entryStatus != null">
        entry_status = #{entryStatus,jdbcType=VARCHAR},
      </if>
      <if test="entryLength != null">
        entry_length = #{entryLength,jdbcType=DOUBLE},
      </if>
      <if test="entryWide != null">
        entry_wide = #{entryWide,jdbcType=DOUBLE},
      </if>
      <if test="entryNum != null">
        entry_num = #{entryNum,jdbcType=DOUBLE},
      </if>
      <if test="entryPrice != null">
        entry_price = #{entryPrice,jdbcType=DECIMAL},
      </if>
      <if test="invoicePrice != null">
        invoice_price = #{invoicePrice,jdbcType=DECIMAL},
      </if>
      <if test="processingCharges != null">
        processing_charges = #{processingCharges,jdbcType=DECIMAL},
      </if>
      <if test="vat != null">
        vat = #{vat,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ware_entrusted_processing_produc_id = #{wareEntrustedProcessingProducId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.WareEntrustedProcessingProduc">
    update ware_entrusted_processing_produc
    set entrusted_processing_no = #{entrustedProcessingNo,jdbcType=VARCHAR},
      spare_parts = #{spareParts,jdbcType=VARCHAR},
      warehouse_type = #{warehouseType,jdbcType=VARCHAR},
      warehouse = #{warehouse,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      entry_status = #{entryStatus,jdbcType=VARCHAR},
      entry_length = #{entryLength,jdbcType=DOUBLE},
      entry_wide = #{entryWide,jdbcType=DOUBLE},
      entry_num = #{entryNum,jdbcType=DOUBLE},
      entry_price = #{entryPrice,jdbcType=DECIMAL},
      invoice_price = #{invoicePrice,jdbcType=DECIMAL},
      processing_charges = #{processingCharges,jdbcType=DECIMAL},
      vat = #{vat,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where ware_entrusted_processing_produc_id = #{wareEntrustedProcessingProducId,jdbcType=INTEGER}
  </update>
</mapper>
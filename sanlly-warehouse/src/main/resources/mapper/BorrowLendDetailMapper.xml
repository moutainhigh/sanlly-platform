<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sanlly.warehouse.dao.BorrowLendDetailMapper">
  <resultMap id="BaseResultMap" type="com.sanlly.warehouse.entity.BorrowLendDetail">
    <id column="ware_borrow_slip_detail_id" jdbcType="INTEGER" property="wareBorrowSlipDetailId" />
    <result column="ware_borrow_lend_slip" jdbcType="INTEGER" property="wareBorrowLendSlip" />
    <result column="spare_parts" jdbcType="VARCHAR" property="spareParts" />
    <result column="spare_parts_batch" jdbcType="VARCHAR" property="sparePartsBatch" />
    <result column="stockin_spare_parts" jdbcType="VARCHAR" property="stockinSpareParts" />
    <result column="stockin_spare_parts_name" jdbcType="VARCHAR" property="stockinSparePartsName" />
    <result column="escrow_company" jdbcType="VARCHAR" property="escrowCompany" />
    <result column="in_warehouse_type" jdbcType="VARCHAR" property="inWarehouseType" />
    <result column="out_warehouse_type" jdbcType="VARCHAR" property="outWarehouseType" />
    <result column="out_storage_location" jdbcType="VARCHAR" property="outStorageLocation" />
    <result column="in_storage_location" jdbcType="VARCHAR" property="inStorageLocation" />
    <result column="borrow_num" jdbcType="DOUBLE" property="borrowNum" />
    <result column="repay_num" jdbcType="DOUBLE" property="repayNum" />
    <result column="return_num" jdbcType="DOUBLE" property="returnNum" />
    <result column="borrow_price" jdbcType="DECIMAL" property="borrowPrice" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ware_borrow_slip_detail_id, ware_borrow_lend_slip, spare_parts, spare_parts_batch, 
    stockin_spare_parts, stockin_spare_parts_name, escrow_company, in_warehouse_type, 
    out_warehouse_type, out_storage_location, in_storage_location, borrow_num, repay_num, 
    return_num, borrow_price, remark, is_del, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByExample" parameterType="com.sanlly.warehouse.entity.BorrowLendDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ware_borrow_lend_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ware_borrow_lend_detail
    where ware_borrow_slip_detail_id = #{wareBorrowSlipDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ware_borrow_lend_detail
    where ware_borrow_slip_detail_id = #{wareBorrowSlipDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanlly.warehouse.entity.BorrowLendDetailExample">
    delete from ware_borrow_lend_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanlly.warehouse.entity.BorrowLendDetail">
    insert into ware_borrow_lend_detail (ware_borrow_slip_detail_id, ware_borrow_lend_slip, 
      spare_parts, spare_parts_batch, stockin_spare_parts, 
      stockin_spare_parts_name, escrow_company, in_warehouse_type, 
      out_warehouse_type, out_storage_location, in_storage_location, 
      borrow_num, repay_num, return_num, 
      borrow_price, remark, is_del, 
      create_time, create_user, update_time, 
      update_user)
    values (#{wareBorrowSlipDetailId,jdbcType=INTEGER}, #{wareBorrowLendSlip,jdbcType=INTEGER}, 
      #{spareParts,jdbcType=VARCHAR}, #{sparePartsBatch,jdbcType=VARCHAR}, #{stockinSpareParts,jdbcType=VARCHAR}, 
      #{stockinSparePartsName,jdbcType=VARCHAR}, #{escrowCompany,jdbcType=VARCHAR}, #{inWarehouseType,jdbcType=VARCHAR}, 
      #{outWarehouseType,jdbcType=VARCHAR}, #{outStorageLocation,jdbcType=VARCHAR}, #{inStorageLocation,jdbcType=VARCHAR}, 
      #{borrowNum,jdbcType=DOUBLE}, #{repayNum,jdbcType=DOUBLE}, #{returnNum,jdbcType=DOUBLE}, 
      #{borrowPrice,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sanlly.warehouse.entity.BorrowLendDetail">
    insert into ware_borrow_lend_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareBorrowSlipDetailId != null">
        ware_borrow_slip_detail_id,
      </if>
      <if test="wareBorrowLendSlip != null">
        ware_borrow_lend_slip,
      </if>
      <if test="spareParts != null">
        spare_parts,
      </if>
      <if test="sparePartsBatch != null">
        spare_parts_batch,
      </if>
      <if test="stockinSpareParts != null">
        stockin_spare_parts,
      </if>
      <if test="stockinSparePartsName != null">
        stockin_spare_parts_name,
      </if>
      <if test="escrowCompany != null">
        escrow_company,
      </if>
      <if test="inWarehouseType != null">
        in_warehouse_type,
      </if>
      <if test="outWarehouseType != null">
        out_warehouse_type,
      </if>
      <if test="outStorageLocation != null">
        out_storage_location,
      </if>
      <if test="inStorageLocation != null">
        in_storage_location,
      </if>
      <if test="borrowNum != null">
        borrow_num,
      </if>
      <if test="repayNum != null">
        repay_num,
      </if>
      <if test="returnNum != null">
        return_num,
      </if>
      <if test="borrowPrice != null">
        borrow_price,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareBorrowSlipDetailId != null">
        #{wareBorrowSlipDetailId,jdbcType=INTEGER},
      </if>
      <if test="wareBorrowLendSlip != null">
        #{wareBorrowLendSlip,jdbcType=INTEGER},
      </if>
      <if test="spareParts != null">
        #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsBatch != null">
        #{sparePartsBatch,jdbcType=VARCHAR},
      </if>
      <if test="stockinSpareParts != null">
        #{stockinSpareParts,jdbcType=VARCHAR},
      </if>
      <if test="stockinSparePartsName != null">
        #{stockinSparePartsName,jdbcType=VARCHAR},
      </if>
      <if test="escrowCompany != null">
        #{escrowCompany,jdbcType=VARCHAR},
      </if>
      <if test="inWarehouseType != null">
        #{inWarehouseType,jdbcType=VARCHAR},
      </if>
      <if test="outWarehouseType != null">
        #{outWarehouseType,jdbcType=VARCHAR},
      </if>
      <if test="outStorageLocation != null">
        #{outStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="inStorageLocation != null">
        #{inStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="borrowNum != null">
        #{borrowNum,jdbcType=DOUBLE},
      </if>
      <if test="repayNum != null">
        #{repayNum,jdbcType=DOUBLE},
      </if>
      <if test="returnNum != null">
        #{returnNum,jdbcType=DOUBLE},
      </if>
      <if test="borrowPrice != null">
        #{borrowPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanlly.warehouse.entity.BorrowLendDetailExample" resultType="java.lang.Long">
    select count(*) from ware_borrow_lend_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ware_borrow_lend_detail
    <set>
      <if test="record.wareBorrowSlipDetailId != null">
        ware_borrow_slip_detail_id = #{record.wareBorrowSlipDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.wareBorrowLendSlip != null">
        ware_borrow_lend_slip = #{record.wareBorrowLendSlip,jdbcType=INTEGER},
      </if>
      <if test="record.spareParts != null">
        spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      </if>
      <if test="record.sparePartsBatch != null">
        spare_parts_batch = #{record.sparePartsBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.stockinSpareParts != null">
        stockin_spare_parts = #{record.stockinSpareParts,jdbcType=VARCHAR},
      </if>
      <if test="record.stockinSparePartsName != null">
        stockin_spare_parts_name = #{record.stockinSparePartsName,jdbcType=VARCHAR},
      </if>
      <if test="record.escrowCompany != null">
        escrow_company = #{record.escrowCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.inWarehouseType != null">
        in_warehouse_type = #{record.inWarehouseType,jdbcType=VARCHAR},
      </if>
      <if test="record.outWarehouseType != null">
        out_warehouse_type = #{record.outWarehouseType,jdbcType=VARCHAR},
      </if>
      <if test="record.outStorageLocation != null">
        out_storage_location = #{record.outStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.inStorageLocation != null">
        in_storage_location = #{record.inStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowNum != null">
        borrow_num = #{record.borrowNum,jdbcType=DOUBLE},
      </if>
      <if test="record.repayNum != null">
        repay_num = #{record.repayNum,jdbcType=DOUBLE},
      </if>
      <if test="record.returnNum != null">
        return_num = #{record.returnNum,jdbcType=DOUBLE},
      </if>
      <if test="record.borrowPrice != null">
        borrow_price = #{record.borrowPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ware_borrow_lend_detail
    set ware_borrow_slip_detail_id = #{record.wareBorrowSlipDetailId,jdbcType=INTEGER},
      ware_borrow_lend_slip = #{record.wareBorrowLendSlip,jdbcType=INTEGER},
      spare_parts = #{record.spareParts,jdbcType=VARCHAR},
      spare_parts_batch = #{record.sparePartsBatch,jdbcType=VARCHAR},
      stockin_spare_parts = #{record.stockinSpareParts,jdbcType=VARCHAR},
      stockin_spare_parts_name = #{record.stockinSparePartsName,jdbcType=VARCHAR},
      escrow_company = #{record.escrowCompany,jdbcType=VARCHAR},
      in_warehouse_type = #{record.inWarehouseType,jdbcType=VARCHAR},
      out_warehouse_type = #{record.outWarehouseType,jdbcType=VARCHAR},
      out_storage_location = #{record.outStorageLocation,jdbcType=VARCHAR},
      in_storage_location = #{record.inStorageLocation,jdbcType=VARCHAR},
      borrow_num = #{record.borrowNum,jdbcType=DOUBLE},
      repay_num = #{record.repayNum,jdbcType=DOUBLE},
      return_num = #{record.returnNum,jdbcType=DOUBLE},
      borrow_price = #{record.borrowPrice,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanlly.warehouse.entity.BorrowLendDetail">
    update ware_borrow_lend_detail
    <set>
      <if test="wareBorrowLendSlip != null">
        ware_borrow_lend_slip = #{wareBorrowLendSlip,jdbcType=INTEGER},
      </if>
      <if test="spareParts != null">
        spare_parts = #{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="sparePartsBatch != null">
        spare_parts_batch = #{sparePartsBatch,jdbcType=VARCHAR},
      </if>
      <if test="stockinSpareParts != null">
        stockin_spare_parts = #{stockinSpareParts,jdbcType=VARCHAR},
      </if>
      <if test="stockinSparePartsName != null">
        stockin_spare_parts_name = #{stockinSparePartsName,jdbcType=VARCHAR},
      </if>
      <if test="escrowCompany != null">
        escrow_company = #{escrowCompany,jdbcType=VARCHAR},
      </if>
      <if test="inWarehouseType != null">
        in_warehouse_type = #{inWarehouseType,jdbcType=VARCHAR},
      </if>
      <if test="outWarehouseType != null">
        out_warehouse_type = #{outWarehouseType,jdbcType=VARCHAR},
      </if>
      <if test="outStorageLocation != null">
        out_storage_location = #{outStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="inStorageLocation != null">
        in_storage_location = #{inStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="borrowNum != null">
        borrow_num = #{borrowNum,jdbcType=DOUBLE},
      </if>
      <if test="repayNum != null">
        repay_num = #{repayNum,jdbcType=DOUBLE},
      </if>
      <if test="returnNum != null">
        return_num = #{returnNum,jdbcType=DOUBLE},
      </if>
      <if test="borrowPrice != null">
        borrow_price = #{borrowPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ware_borrow_slip_detail_id = #{wareBorrowSlipDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanlly.warehouse.entity.BorrowLendDetail">
    update ware_borrow_lend_detail
    set ware_borrow_lend_slip = #{wareBorrowLendSlip,jdbcType=INTEGER},
      spare_parts = #{spareParts,jdbcType=VARCHAR},
      spare_parts_batch = #{sparePartsBatch,jdbcType=VARCHAR},
      stockin_spare_parts = #{stockinSpareParts,jdbcType=VARCHAR},
      stockin_spare_parts_name = #{stockinSparePartsName,jdbcType=VARCHAR},
      escrow_company = #{escrowCompany,jdbcType=VARCHAR},
      in_warehouse_type = #{inWarehouseType,jdbcType=VARCHAR},
      out_warehouse_type = #{outWarehouseType,jdbcType=VARCHAR},
      out_storage_location = #{outStorageLocation,jdbcType=VARCHAR},
      in_storage_location = #{inStorageLocation,jdbcType=VARCHAR},
      borrow_num = #{borrowNum,jdbcType=DOUBLE},
      repay_num = #{repayNum,jdbcType=DOUBLE},
      return_num = #{returnNum,jdbcType=DOUBLE},
      borrow_price = #{borrowPrice,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where ware_borrow_slip_detail_id = #{wareBorrowSlipDetailId,jdbcType=INTEGER}
  </update>
</mapper>